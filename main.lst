   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  16               	i2c_read:
  18               	.Ltext1:
   1:i2c.c         **** #include <stdint.h>
   2:i2c.c         **** #include <avr/io.h>
   3:i2c.c         **** #include <avr/interrupt.h>
   4:i2c.c         **** #include <compat/twi.h>
   5:i2c.c         **** 
   6:i2c.c         **** #define TWI_FREQ          100000L
   7:i2c.c         **** #define I2C_BUFFER_LENGTH     32
   8:i2c.c         **** #define I2C_READY              0
   9:i2c.c         **** #define I2C_MASTER_RX          1
  10:i2c.c         **** #define I2C_MASTER_TX          2
  11:i2c.c         **** #define I2C_SLAVE_RX           3
  12:i2c.c         **** #define I2C_SLAVE_TX           4
  13:i2c.c         **** 
  14:i2c.c         **** static volatile uint8_t state;
  15:i2c.c         **** static volatile uint8_t error;
  16:i2c.c         **** static uint8_t slave_rw;
  17:i2c.c         **** 
  18:i2c.c         **** static uint8_t master_buf[I2C_BUFFER_LENGTH];
  19:i2c.c         **** static volatile uint8_t master_buf_idx;
  20:i2c.c         **** static uint8_t master_buf_len;
  21:i2c.c         **** 
  22:i2c.c         **** static uint8_t rx_buf[I2C_BUFFER_LENGTH];
  23:i2c.c         **** static uint8_t rx_buf_idx = 0;
  24:i2c.c         **** static uint8_t rx_buf_len = 0;
  25:i2c.c         **** 
  26:i2c.c         **** static uint8_t tx_addr = 0;
  27:i2c.c         **** static uint8_t tx_buf[I2C_BUFFER_LENGTH];
  28:i2c.c         **** static uint8_t tx_buf_idx = 0;
  29:i2c.c         **** static uint8_t tx_buf_len = 0;
  30:i2c.c         **** 
  31:i2c.c         **** static void i2c_stop(void);
  32:i2c.c         **** static void i2c_release_bus(void);
  33:i2c.c         **** static uint8_t i2c_read_from
  34:i2c.c         **** 	(uint8_t address, uint8_t *data, uint8_t length);
  35:i2c.c         **** 
  36:i2c.c         **** static uint8_t i2c_write_to
  37:i2c.c         **** 	(uint8_t address, uint8_t *data, uint8_t length, uint8_t wait);
  38:i2c.c         **** 
  39:i2c.c         **** static void i2c_reply_ack(void);
  40:i2c.c         **** static void i2c_reply_nack(void);
  41:i2c.c         **** 
  42:i2c.c         **** static void i2c_init(void);
  43:i2c.c         **** static void i2c_begin_transmission(uint8_t address);
  44:i2c.c         **** static uint8_t i2c_end_transmission(void);
  45:i2c.c         **** static uint8_t i2c_request_from(uint8_t address, uint8_t count);
  46:i2c.c         **** static void i2c_write(uint8_t data);
  47:i2c.c         **** static uint8_t i2c_read(void);
  48:i2c.c         **** static uint8_t i2c_available(void);
  49:i2c.c         **** 
  50:i2c.c         **** static void i2c_init(void)
  51:i2c.c         **** {
  52:i2c.c         **** 	rx_buf_idx = 0;
  53:i2c.c         **** 	rx_buf_len = 0;
  54:i2c.c         **** 	tx_buf_idx = 0;
  55:i2c.c         **** 	tx_buf_len = 0;
  56:i2c.c         **** 
  57:i2c.c         **** 	/* initialize state */
  58:i2c.c         **** 	state = I2C_READY;
  59:i2c.c         **** 
  60:i2c.c         **** 	/* internal pullups on i2c pins */
  61:i2c.c         **** 	PORTC |= (1 << 4);
  62:i2c.c         **** 	PORTC |= (1 << 5);
  63:i2c.c         **** 
  64:i2c.c         **** 	/* initialize i2c prescaler and bitrate */
  65:i2c.c         **** 	TWSR &= ~TWPS0;
  66:i2c.c         **** 	TWSR &= ~TWPS1;
  67:i2c.c         **** 	TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;
  68:i2c.c         **** 
  69:i2c.c         **** 	/* enable i2c module and interrupt */
  70:i2c.c         **** 	TWCR = (1 << TWEN) | (1 << TWIE) | (1 << TWEA);
  71:i2c.c         **** }
  72:i2c.c         **** 
  73:i2c.c         **** static void i2c_begin_transmission(uint8_t address)
  74:i2c.c         **** {
  75:i2c.c         **** 	tx_addr = address;
  76:i2c.c         **** 	tx_buf_idx = 0;
  77:i2c.c         **** 	tx_buf_len = 0;
  78:i2c.c         **** }
  79:i2c.c         **** 
  80:i2c.c         **** static uint8_t i2c_end_transmission(void)
  81:i2c.c         **** {
  82:i2c.c         **** 	int8_t ret = i2c_write_to(tx_addr, tx_buf, tx_buf_len, 1);
  83:i2c.c         **** 	tx_buf_len = 0;
  84:i2c.c         **** 	tx_buf_idx = 0;
  85:i2c.c         **** 	return ret;
  86:i2c.c         **** }
  87:i2c.c         **** 
  88:i2c.c         **** static uint8_t i2c_request_from(uint8_t address, uint8_t count)
  89:i2c.c         **** {
  90:i2c.c         **** 	uint8_t read;
  91:i2c.c         **** 	if(count > I2C_BUFFER_LENGTH)
  92:i2c.c         **** 	{
  93:i2c.c         **** 		count = I2C_BUFFER_LENGTH;
  94:i2c.c         **** 	}
  95:i2c.c         **** 
  96:i2c.c         **** 	read = i2c_read_from(address, rx_buf, count);
  97:i2c.c         **** 	rx_buf_idx = 0;
  98:i2c.c         **** 	rx_buf_len = read;
  99:i2c.c         **** 	return read;
 100:i2c.c         **** }
 101:i2c.c         **** 
 102:i2c.c         **** static void i2c_write(uint8_t data)
 103:i2c.c         **** {
 104:i2c.c         **** 	if(tx_buf_len >= I2C_BUFFER_LENGTH) { return; }
 105:i2c.c         **** 	tx_buf[tx_buf_idx++] = data;
 106:i2c.c         **** 	tx_buf_len = tx_buf_idx;
 107:i2c.c         **** }
 108:i2c.c         **** 
 109:i2c.c         **** static uint8_t i2c_read(void)
 110:i2c.c         **** {
  20               	.LM0:
  21               	.LFBB1:
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 0 */
  25               	.L__stack_usage = 0
 111:i2c.c         **** 	return (rx_buf_idx < rx_buf_len)
  27               	.LM1:
  28 0000 E091 0000 		lds r30,rx_buf_idx
 112:i2c.c         **** 		? rx_buf[rx_buf_idx++] : '\0';
  30               	.LM2:
  31 0004 8091 0000 		lds r24,rx_buf_len
  32 0008 E817      		cp r30,r24
  33 000a 00F4      		brsh .L3
  35               	.LM3:
  36 000c 81E0      		ldi r24,lo8(1)
  37 000e 8E0F      		add r24,r30
  38 0010 8093 0000 		sts rx_buf_idx,r24
  39 0014 F0E0      		ldi r31,0
  41               	.LM4:
  42 0016 E050      		subi r30,lo8(-(rx_buf))
  43 0018 F040      		sbci r31,hi8(-(rx_buf))
  44 001a 8081      		ld r24,Z
  45 001c 0895      		ret
  46               	.L3:
  48               	.LM5:
  49 001e 80E0      		ldi r24,0
  50               	/* epilogue start */
 113:i2c.c         **** }
  52               	.LM6:
  53 0020 0895      		ret
  55               	.Lscope1:
  60               	i2c_stop:
 114:i2c.c         **** 
 115:i2c.c         **** static uint8_t i2c_available(void)
 116:i2c.c         **** {
 117:i2c.c         **** 	return rx_buf_len - rx_buf_idx;
 118:i2c.c         **** }
 119:i2c.c         **** 
 120:i2c.c         **** static void i2c_stop(void)
 121:i2c.c         **** {
  62               	.LM7:
  63               	.LFBB2:
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
 122:i2c.c         **** 	TWCR = (1 << TWEN) | (1 << TWIE) | (1 << TWEA) | (1 << TWINT) |
  69               	.LM8:
  70 0022 85ED      		ldi r24,lo8(-43)
  71 0024 8093 BC00 		sts 188,r24
  72               	.L5:
 123:i2c.c         **** 		(1 << TWSTO);
 124:i2c.c         **** 
 125:i2c.c         **** 	while(TWCR & _BV(TWSTO)) ;
  74               	.LM9:
  75 0028 8091 BC00 		lds r24,188
  77               	.LM10:
  78 002c 84FD      		sbrc r24,4
  79 002e 00C0      		rjmp .L5
 126:i2c.c         **** 	state = I2C_READY;
  81               	.LM11:
  82 0030 1092 0000 		sts state,__zero_reg__
  83               	/* epilogue start */
 127:i2c.c         **** }
  85               	.LM12:
  86 0034 0895      		ret
  88               	.Lscope2:
  93               	i2c_write:
 103:i2c.c         **** 	if(tx_buf_len >= I2C_BUFFER_LENGTH) { return; }
  95               	.LM13:
  96               	.LFBB3:
  97               	/* prologue: function */
  98               	/* frame size = 0 */
  99               	/* stack size = 0 */
 100               	.L__stack_usage = 0
 104:i2c.c         **** 	tx_buf[tx_buf_idx++] = data;
 102               	.LM14:
 103 0036 9091 0000 		lds r25,tx_buf_len
 104 003a 9032      		cpi r25,lo8(32)
 105 003c 00F4      		brsh .L7
 106               	.LBB64:
 107               	.LBB65:
 105:i2c.c         **** 	tx_buf_len = tx_buf_idx;
 109               	.LM15:
 110 003e E091 0000 		lds r30,tx_buf_idx
 111 0042 91E0      		ldi r25,lo8(1)
 112 0044 9E0F      		add r25,r30
 113 0046 9093 0000 		sts tx_buf_idx,r25
 114 004a F0E0      		ldi r31,0
 105:i2c.c         **** 	tx_buf_len = tx_buf_idx;
 116               	.LM16:
 117 004c E050      		subi r30,lo8(-(tx_buf))
 118 004e F040      		sbci r31,hi8(-(tx_buf))
 119 0050 8083      		st Z,r24
 106:i2c.c         **** }
 121               	.LM17:
 122 0052 9093 0000 		sts tx_buf_len,r25
 123               	.L7:
 124               	/* epilogue start */
 125               	.LBE65:
 126               	.LBE64:
 107:i2c.c         **** 
 128               	.LM18:
 129 0056 0895      		ret
 131               	.Lscope3:
 136               	i2c_request_from.constprop.0.isra.0:
  88:i2c.c         **** {
 138               	.LM19:
 139               	.LFBB4:
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 0 */
 143               	.L__stack_usage = 0
 144               	.L10:
 145               	.LBB68:
 146               	.LBB69:
 128:i2c.c         **** 
 129:i2c.c         **** static void i2c_release_bus(void)
 130:i2c.c         **** {
 131:i2c.c         **** 	TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
 132:i2c.c         **** 	state = I2C_READY;
 133:i2c.c         **** }
 134:i2c.c         **** 
 135:i2c.c         **** static uint8_t i2c_read_from
 136:i2c.c         **** 	(uint8_t address, uint8_t *data, uint8_t length)
 137:i2c.c         **** {
 138:i2c.c         **** 	uint8_t i;
 139:i2c.c         **** 
 140:i2c.c         **** 	if(I2C_BUFFER_LENGTH < length)
 141:i2c.c         **** 	{
 142:i2c.c         **** 		return 0;
 143:i2c.c         **** 	}
 144:i2c.c         **** 
 145:i2c.c         **** 	while(I2C_READY != state) ;
 148               	.LM20:
 149 0058 9091 0000 		lds r25,state
 151               	.LM21:
 152 005c 9111      		cpse r25,__zero_reg__
 153 005e 00C0      		rjmp .L10
 146:i2c.c         **** 	state = I2C_MASTER_RX;
 155               	.LM22:
 156 0060 91E0      		ldi r25,lo8(1)
 157 0062 9093 0000 		sts state,r25
 147:i2c.c         **** 	error = 0xFF;
 159               	.LM23:
 160 0066 9FEF      		ldi r25,lo8(-1)
 161 0068 9093 0000 		sts error,r25
 148:i2c.c         **** 	master_buf_idx = 0;
 163               	.LM24:
 164 006c 1092 0000 		sts master_buf_idx,__zero_reg__
 149:i2c.c         **** 	master_buf_len = length - 1;
 166               	.LM25:
 167 0070 980F      		add r25,r24
 169               	.LM26:
 170 0072 9093 0000 		sts master_buf_len,r25
 150:i2c.c         **** 	slave_rw = TW_READ;
 151:i2c.c         **** 	slave_rw |= address << 1;
 172               	.LM27:
 173 0076 91ED      		ldi r25,lo8(-47)
 174 0078 9093 0000 		sts slave_rw,r25
 152:i2c.c         **** 	TWCR = (1 << TWEN) | (1 << TWIE) | (1 << TWEA) | (1 << TWINT) |
 176               	.LM28:
 177 007c 95EE      		ldi r25,lo8(-27)
 178 007e 9093 BC00 		sts 188,r25
 179               	.L11:
 153:i2c.c         **** 		(1 << TWSTA);
 154:i2c.c         **** 
 155:i2c.c         **** 	while(state == I2C_MASTER_RX) ;
 181               	.LM29:
 182 0082 9091 0000 		lds r25,state
 184               	.LM30:
 185 0086 9130      		cpi r25,lo8(1)
 186 0088 01F0      		breq .L11
 156:i2c.c         **** 
 157:i2c.c         **** 	if(master_buf_idx < length)
 188               	.LM31:
 189 008a 9091 0000 		lds r25,master_buf_idx
 191               	.LM32:
 192 008e 9817      		cp r25,r24
 193 0090 00F4      		brsh .L12
 158:i2c.c         **** 	{
 159:i2c.c         **** 		length = master_buf_idx;
 195               	.LM33:
 196 0092 8091 0000 		lds r24,master_buf_idx
 197               	.L12:
 198 0096 20E0      		ldi r18,lo8(master_buf)
 199 0098 30E0      		ldi r19,hi8(master_buf)
 200 009a A0E0      		ldi r26,lo8(rx_buf)
 201 009c B0E0      		ldi r27,hi8(rx_buf)
 160:i2c.c         **** 	}
 161:i2c.c         **** 
 162:i2c.c         **** 	for(i = 0; i < length; ++i)
 203               	.LM34:
 204 009e F901      		movw r30,r18
 205               	.L13:
 206 00a0 9E2F      		mov r25,r30
 207 00a2 921B      		sub r25,r18
 208 00a4 9817      		cp r25,r24
 209 00a6 00F0      		brlo .L14
 210               	.LBE69:
 211               	.LBE68:
  97:i2c.c         **** 	rx_buf_len = read;
 213               	.LM35:
 214 00a8 1092 0000 		sts rx_buf_idx,__zero_reg__
  98:i2c.c         **** 	return read;
 216               	.LM36:
 217 00ac 8093 0000 		sts rx_buf_len,r24
 218               	/* epilogue start */
 100:i2c.c         **** 
 220               	.LM37:
 221 00b0 0895      		ret
 222               	.L14:
 223               	.LBB71:
 224               	.LBB70:
 163:i2c.c         **** 	{
 164:i2c.c         **** 		data[i] = master_buf[i];
 226               	.LM38:
 227 00b2 9191      		ld r25,Z+
 229               	.LM39:
 230 00b4 9D93      		st X+,r25
 231 00b6 00C0      		rjmp .L13
 232               	.LBE70:
 233               	.LBE71:
 241               	.Lscope4:
 245               	i2c_end_transmission.isra.0:
  80:i2c.c         **** {
 247               	.LM40:
 248               	.LFBB5:
 249               	/* prologue: function */
 250               	/* frame size = 0 */
 251               	/* stack size = 0 */
 252               	.L__stack_usage = 0
  82:i2c.c         **** 	tx_buf_len = 0;
 254               	.LM41:
 255 00b8 9091 0000 		lds r25,tx_buf_len
 256               	.LBB74:
 257               	.LBB75:
 165:i2c.c         **** 	}
 166:i2c.c         **** 
 167:i2c.c         **** 	return length;
 168:i2c.c         **** }
 169:i2c.c         **** 
 170:i2c.c         **** static uint8_t i2c_write_to
 171:i2c.c         **** 	(uint8_t address, uint8_t *data, uint8_t length, uint8_t wait)
 172:i2c.c         **** {
 173:i2c.c         **** 	uint8_t i;
 174:i2c.c         **** 
 175:i2c.c         **** 	if(I2C_BUFFER_LENGTH < length)
 259               	.LM42:
 260 00bc 9132      		cpi r25,lo8(33)
 261 00be 00F4      		brsh .L20
 262               	.L19:
 176:i2c.c         **** 	{
 177:i2c.c         **** 		return 1;
 178:i2c.c         **** 	}
 179:i2c.c         **** 
 180:i2c.c         **** 	while(I2C_READY != state) ;
 264               	.LM43:
 265 00c0 8091 0000 		lds r24,state
 267               	.LM44:
 268 00c4 8111      		cpse r24,__zero_reg__
 269 00c6 00C0      		rjmp .L19
 270               	.LBE75:
 271               	.LBE74:
  82:i2c.c         **** 	tx_buf_len = 0;
 273               	.LM45:
 274 00c8 8091 0000 		lds r24,tx_addr
 275               	.LBB78:
 276               	.LBB76:
 181:i2c.c         **** 	state = I2C_MASTER_TX;
 278               	.LM46:
 279 00cc 22E0      		ldi r18,lo8(2)
 280 00ce 2093 0000 		sts state,r18
 182:i2c.c         **** 	error = 0xFF;
 282               	.LM47:
 283 00d2 2FEF      		ldi r18,lo8(-1)
 284 00d4 2093 0000 		sts error,r18
 183:i2c.c         **** 	master_buf_idx = 0;
 286               	.LM48:
 287 00d8 1092 0000 		sts master_buf_idx,__zero_reg__
 184:i2c.c         **** 	master_buf_len = length;
 289               	.LM49:
 290 00dc 9093 0000 		sts master_buf_len,r25
 291 00e0 40E0      		ldi r20,lo8(tx_buf)
 292 00e2 50E0      		ldi r21,hi8(tx_buf)
 293 00e4 A0E0      		ldi r26,lo8(master_buf)
 294 00e6 B0E0      		ldi r27,hi8(master_buf)
 185:i2c.c         **** 	for(i = 0; i < length; ++i)
 296               	.LM50:
 297 00e8 FA01      		movw r30,r20
 298               	.L21:
 299 00ea 2E2F      		mov r18,r30
 300 00ec 241B      		sub r18,r20
 301 00ee 2917      		cp r18,r25
 302 00f0 00F0      		brlo .L22
 186:i2c.c         **** 	{
 187:i2c.c         **** 		master_buf[i] = data[i];
 188:i2c.c         **** 	}
 189:i2c.c         **** 
 190:i2c.c         **** 	slave_rw = TW_WRITE;
 191:i2c.c         **** 	slave_rw |= address << 1;
 304               	.LM51:
 305 00f2 90E0      		ldi r25,0
 306 00f4 880F      		lsl r24
 307 00f6 991F      		rol r25
 309               	.LM52:
 310 00f8 8093 0000 		sts slave_rw,r24
 192:i2c.c         **** 	TWCR = (1 << TWEN) | (1 << TWIE) | (1 << TWEA) | (1 << TWINT) |
 312               	.LM53:
 313 00fc 85EE      		ldi r24,lo8(-27)
 314 00fe 8093 BC00 		sts 188,r24
 315               	.L23:
 193:i2c.c         **** 		(1 << TWSTA);
 194:i2c.c         **** 
 195:i2c.c         **** 	while(wait && (I2C_MASTER_TX == state)) ;
 317               	.LM54:
 318 0102 8091 0000 		lds r24,state
 320               	.LM55:
 321 0106 8230      		cpi r24,lo8(2)
 322 0108 01F0      		breq .L23
 196:i2c.c         **** 
 197:i2c.c         **** 	if(error == 0xFF)
 324               	.LM56:
 325 010a 8091 0000 		lds r24,error
 327               	.LM57:
 328 010e 8F3F      		cpi r24,lo8(-1)
 329 0110 01F0      		breq .L20
 198:i2c.c         **** 	{
 199:i2c.c         **** 		/* success */
 200:i2c.c         **** 		return 0;
 201:i2c.c         **** 	}
 202:i2c.c         **** 	else if(error == TW_MT_SLA_NACK)
 331               	.LM58:
 332 0112 8091 0000 		lds r24,error
 334               	.LM59:
 335 0116 8032      		cpi r24,lo8(32)
 336 0118 01F0      		breq .L20
 203:i2c.c         **** 	{
 204:i2c.c         **** 		/* error: address sent, NACK received */
 205:i2c.c         **** 		return 2;
 206:i2c.c         **** 	}
 207:i2c.c         **** 	else if(error == TW_MT_DATA_NACK)
 338               	.LM60:
 339 011a 8091 0000 		lds r24,error
 340               	.L20:
 341               	.LBE76:
 342               	.LBE78:
  83:i2c.c         **** 	tx_buf_idx = 0;
 344               	.LM61:
 345 011e 1092 0000 		sts tx_buf_len,__zero_reg__
  84:i2c.c         **** 	return ret;
 347               	.LM62:
 348 0122 1092 0000 		sts tx_buf_idx,__zero_reg__
 349               	/* epilogue start */
  86:i2c.c         **** 
 351               	.LM63:
 352 0126 0895      		ret
 353               	.L22:
 354               	.LBB79:
 355               	.LBB77:
 187:i2c.c         **** 	}
 357               	.LM64:
 358 0128 2191      		ld r18,Z+
 187:i2c.c         **** 	}
 360               	.LM65:
 361 012a 2D93      		st X+,r18
 362 012c 00C0      		rjmp .L21
 363               	.LBE77:
 364               	.LBE79:
 366               	.Lscope5:
 371               	i2c_read_byte.constprop.0:
 373               	.Ltext2:
   1:mpu6050.c     **** #include <math.h>
   2:mpu6050.c     **** #include <util/delay.h>
   3:mpu6050.c     **** #include <avr/interrupt.h>
   4:mpu6050.c     **** 
   5:mpu6050.c     **** #define XGOFFS_TC          0x00
   6:mpu6050.c     **** #define YGOFFS_TC          0x01
   7:mpu6050.c     **** #define ZGOFFS_TC          0x02
   8:mpu6050.c     **** #define X_FINE_GAIN        0x03
   9:mpu6050.c     **** #define Y_FINE_GAIN        0x04
  10:mpu6050.c     **** #define Z_FINE_GAIN        0x05
  11:mpu6050.c     **** #define XA_OFFSET_H        0x06
  12:mpu6050.c     **** #define XA_OFFSET_L_TC     0x07
  13:mpu6050.c     **** #define YA_OFFSET_H        0x08
  14:mpu6050.c     **** #define YA_OFFSET_L_TC     0x09
  15:mpu6050.c     **** #define ZA_OFFSET_H        0x0A
  16:mpu6050.c     **** #define ZA_OFFSET_L_TC     0x0B
  17:mpu6050.c     **** #define SELF_TEST_X        0x0D
  18:mpu6050.c     **** #define SELF_TEST_Y        0x0E
  19:mpu6050.c     **** #define SELF_TEST_Z        0x0F
  20:mpu6050.c     **** #define SELF_TEST_A        0x10
  21:mpu6050.c     **** #define XG_OFFS_USRH       0x13
  22:mpu6050.c     **** #define XG_OFFS_USRL       0x14
  23:mpu6050.c     **** #define YG_OFFS_USRH       0x15
  24:mpu6050.c     **** #define YG_OFFS_USRL       0x16
  25:mpu6050.c     **** #define ZG_OFFS_USRH       0x17
  26:mpu6050.c     **** #define ZG_OFFS_USRL       0x18
  27:mpu6050.c     **** #define SMPLRT_DIV         0x19
  28:mpu6050.c     **** #define CONFIG             0x1A
  29:mpu6050.c     **** #define GYRO_CONFIG        0x1B
  30:mpu6050.c     **** #define ACCEL_CONFIG       0x1C
  31:mpu6050.c     **** #define FF_THR             0x1D
  32:mpu6050.c     **** #define FF_DUR             0x1E
  33:mpu6050.c     **** #define MOT_THR            0x1F
  34:mpu6050.c     **** #define MOT_DUR            0x20
  35:mpu6050.c     **** #define ZMOT_THR           0x21
  36:mpu6050.c     **** #define ZRMOT_DUR          0x22
  37:mpu6050.c     **** #define FIFO_EN            0x23
  38:mpu6050.c     **** #define I2C_MST_CTRL       0x24
  39:mpu6050.c     **** #define I2C_SLV0_ADDR      0x25
  40:mpu6050.c     **** #define I2C_SLV0_REG       0x26
  41:mpu6050.c     **** #define I2C_SLV0_CTRL      0x27
  42:mpu6050.c     **** #define I2C_SLV1_ADDR      0x28
  43:mpu6050.c     **** #define I2C_SLV1_REG       0x29
  44:mpu6050.c     **** #define I2C_SLV1_CTRL      0x2A
  45:mpu6050.c     **** #define I2C_SLV2_ADDR      0x2B
  46:mpu6050.c     **** #define I2C_SLV2_REG       0x2C
  47:mpu6050.c     **** #define I2C_SLV2_CTRL      0x2D
  48:mpu6050.c     **** #define I2C_SLV3_ADDR      0x2E
  49:mpu6050.c     **** #define I2C_SLV3_REG       0x2F
  50:mpu6050.c     **** #define I2C_SLV3_CTRL      0x30
  51:mpu6050.c     **** #define I2C_SLV4_ADDR      0x31
  52:mpu6050.c     **** #define I2C_SLV4_REG       0x32
  53:mpu6050.c     **** #define I2C_SLV4_DO        0x33
  54:mpu6050.c     **** #define I2C_SLV4_CTRL      0x34
  55:mpu6050.c     **** #define I2C_SLV4_DI        0x35
  56:mpu6050.c     **** #define I2C_MST_STATUS     0x36
  57:mpu6050.c     **** #define INT_PIN_CFG        0x37
  58:mpu6050.c     **** #define INT_ENABLE         0x38
  59:mpu6050.c     **** #define DMP_INT_STATUS     0x39
  60:mpu6050.c     **** #define INT_STATUS         0x3A
  61:mpu6050.c     **** #define ACCEL_XOUT_H       0x3B
  62:mpu6050.c     **** #define ACCEL_XOUT_L       0x3C
  63:mpu6050.c     **** #define ACCEL_YOUT_H       0x3D
  64:mpu6050.c     **** #define ACCEL_YOUT_L       0x3E
  65:mpu6050.c     **** #define ACCEL_ZOUT_H       0x3F
  66:mpu6050.c     **** #define ACCEL_ZOUT_L       0x40
  67:mpu6050.c     **** #define TEMP_OUT_H         0x41
  68:mpu6050.c     **** #define TEMP_OUT_L         0x42
  69:mpu6050.c     **** #define GYRO_XOUT_H        0x43
  70:mpu6050.c     **** #define GYRO_XOUT_L        0x44
  71:mpu6050.c     **** #define GYRO_YOUT_H        0x45
  72:mpu6050.c     **** #define GYRO_YOUT_L        0x46
  73:mpu6050.c     **** #define GYRO_ZOUT_H        0x47
  74:mpu6050.c     **** #define GYRO_ZOUT_L        0x48
  75:mpu6050.c     **** #define EXT_SENS_DATA_00   0x49
  76:mpu6050.c     **** #define EXT_SENS_DATA_01   0x4A
  77:mpu6050.c     **** #define EXT_SENS_DATA_02   0x4B
  78:mpu6050.c     **** #define EXT_SENS_DATA_03   0x4C
  79:mpu6050.c     **** #define EXT_SENS_DATA_04   0x4D
  80:mpu6050.c     **** #define EXT_SENS_DATA_05   0x4E
  81:mpu6050.c     **** #define EXT_SENS_DATA_06   0x4F
  82:mpu6050.c     **** #define EXT_SENS_DATA_07   0x50
  83:mpu6050.c     **** #define EXT_SENS_DATA_08   0x51
  84:mpu6050.c     **** #define EXT_SENS_DATA_09   0x52
  85:mpu6050.c     **** #define EXT_SENS_DATA_10   0x53
  86:mpu6050.c     **** #define EXT_SENS_DATA_11   0x54
  87:mpu6050.c     **** #define EXT_SENS_DATA_12   0x55
  88:mpu6050.c     **** #define EXT_SENS_DATA_13   0x56
  89:mpu6050.c     **** #define EXT_SENS_DATA_14   0x57
  90:mpu6050.c     **** #define EXT_SENS_DATA_15   0x58
  91:mpu6050.c     **** #define EXT_SENS_DATA_16   0x59
  92:mpu6050.c     **** #define EXT_SENS_DATA_17   0x5A
  93:mpu6050.c     **** #define EXT_SENS_DATA_18   0x5B
  94:mpu6050.c     **** #define EXT_SENS_DATA_19   0x5C
  95:mpu6050.c     **** #define EXT_SENS_DATA_20   0x5D
  96:mpu6050.c     **** #define EXT_SENS_DATA_21   0x5E
  97:mpu6050.c     **** #define EXT_SENS_DATA_22   0x5F
  98:mpu6050.c     **** #define EXT_SENS_DATA_23   0x60
  99:mpu6050.c     **** #define MOT_DETECT_STATUS  0x61
 100:mpu6050.c     **** #define I2C_SLV0_DO        0x63
 101:mpu6050.c     **** #define I2C_SLV1_DO        0x64
 102:mpu6050.c     **** #define I2C_SLV2_DO        0x65
 103:mpu6050.c     **** #define I2C_SLV3_DO        0x66
 104:mpu6050.c     **** #define I2C_MST_DELAY_CTRL 0x67
 105:mpu6050.c     **** #define SIGNAL_PATH_RESET  0x68
 106:mpu6050.c     **** #define MOT_DETECT_CTRL    0x69
 107:mpu6050.c     **** #define USER_CTRL          0x6A
 108:mpu6050.c     **** #define PWR_MGMT_1         0x6B
 109:mpu6050.c     **** #define PWR_MGMT_2         0x6C
 110:mpu6050.c     **** #define DMP_BANK           0x6D
 111:mpu6050.c     **** #define DMP_RW_PNT         0x6E
 112:mpu6050.c     **** #define DMP_REG            0x6F
 113:mpu6050.c     **** #define DMP_REG_1          0x70
 114:mpu6050.c     **** #define DMP_REG_2          0x71
 115:mpu6050.c     **** #define FIFO_COUNTH        0x72
 116:mpu6050.c     **** #define FIFO_COUNTL        0x73
 117:mpu6050.c     **** #define FIFO_R_W           0x74
 118:mpu6050.c     **** #define WHO_AM_I_MPU6050   0x75
 119:mpu6050.c     **** #define MPU6050_ADDRESS    0x68
 120:mpu6050.c     **** 
 121:mpu6050.c     **** #define AFS_2G                0
 122:mpu6050.c     **** #define AFS_4G                1
 123:mpu6050.c     **** #define AFS_8G                2
 124:mpu6050.c     **** #define AFS_16G               3
 125:mpu6050.c     **** 
 126:mpu6050.c     **** #define GFS_250DPS            0
 127:mpu6050.c     **** #define GFS_500DPS            1
 128:mpu6050.c     **** #define GFS_1000DPS           2
 129:mpu6050.c     **** #define GFS_2000DPS           3
 130:mpu6050.c     **** 
 131:mpu6050.c     **** /* accelerometer and gyroscope scale */
 132:mpu6050.c     **** #define A_SCALE                AFS_2G
 133:mpu6050.c     **** #define G_SCALE                GFS_250DPS
 134:mpu6050.c     **** 
 135:mpu6050.c     **** /* accelerometer and gyroscope resolution */
 136:mpu6050.c     **** #if A_SCALE == AFS_2G
 137:mpu6050.c     **** #define A_RES                  (2.0f / 32768.0f)
 138:mpu6050.c     **** #elif A_SCALE == AFS_4G
 139:mpu6050.c     **** #define A_RES                  (4.0f / 32768.0f)
 140:mpu6050.c     **** #elif A_SCALE == AFS_8G
 141:mpu6050.c     **** #define A_RES                  (8.0f / 32768.0f)
 142:mpu6050.c     **** #elif A_SCALE == AFS_16G
 143:mpu6050.c     **** #define A_RES                  (16.0f / 32768.0f)
 144:mpu6050.c     **** #endif
 145:mpu6050.c     **** 
 146:mpu6050.c     **** #if G_SCALE == GFS_250DPS
 147:mpu6050.c     **** #define G_RES                  (250.0f / 32768.0f)
 148:mpu6050.c     **** #elif G_SCALE == GFS_500DPS
 149:mpu6050.c     **** #define G_RES                  (500.0f / 32768.0f)
 150:mpu6050.c     **** #elif G_SCALE == GFS_1000DPS
 151:mpu6050.c     **** #define G_RES                  (1000.0f / 32768.0f)
 152:mpu6050.c     **** #elif G_SCALE == GFS_2000DPS
 153:mpu6050.c     **** #define G_RES                  (2000.0f / 32768.0f)
 154:mpu6050.c     **** #endif
 155:mpu6050.c     **** 
 156:mpu6050.c     **** static float beta, zeta;
 157:mpu6050.c     **** 
 158:mpu6050.c     **** /* real acceleration values in g's */
 159:mpu6050.c     **** static float ax, ay, az;
 160:mpu6050.c     **** 
 161:mpu6050.c     **** /* real gyroscope values in degrees per second */
 162:mpu6050.c     **** static float gx, gy, gz;
 163:mpu6050.c     **** 
 164:mpu6050.c     **** /* accelerometer and gyroscope bias corrections */
 165:mpu6050.c     **** static float accel_bias[3] = { 0, 0, 0 }, gyro_bias[3] = { 0, 0, 0 };
 166:mpu6050.c     **** static float q[4] = { 1.0f, 0.0f, 0.0f, 0.0f };
 167:mpu6050.c     **** static float pitch, yaw, roll, temperature;
 168:mpu6050.c     **** 
 169:mpu6050.c     **** static int16_t pitch_deg = 0, roll_deg = 0;
 170:mpu6050.c     **** 
 171:mpu6050.c     **** static float time_delta = 0.0f;
 172:mpu6050.c     **** static uint32_t last_update, now;
 173:mpu6050.c     **** 
 174:mpu6050.c     **** static volatile uint32_t timer0_overflow_count;
 175:mpu6050.c     **** uint32_t us(void);
 176:mpu6050.c     **** 
 177:mpu6050.c     **** static void mpu6050_self_test(float *dst);
 178:mpu6050.c     **** static void mpu6050_calibrate(float *gyro_dst, float *accel_dst);
 179:mpu6050.c     **** static void mpu6050_prepare(void);
 180:mpu6050.c     **** static void i2c_write_byte(uint8_t addr, uint8_t cmd, uint8_t data);
 181:mpu6050.c     **** static uint8_t i2c_read_byte(uint8_t addr, uint8_t cmd);
 182:mpu6050.c     **** static void i2c_read_bytes
 183:mpu6050.c     **** 	(uint8_t addr, uint8_t cmd, uint8_t cnt, uint8_t *dst);
 184:mpu6050.c     **** 
 185:mpu6050.c     **** static void quaternion_update
 186:mpu6050.c     **** 		(float ax, float ay, float az, float gx, float gy, float gz);
 187:mpu6050.c     **** 
 188:mpu6050.c     **** static void mpu6050_self_test(float *dst)
 189:mpu6050.c     **** {
 190:mpu6050.c     **** 	uint8_t i, raw[4], self_test[6];
 191:mpu6050.c     **** 	float factory_trim[6];
 192:mpu6050.c     **** 
 193:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, 0xF0);
 194:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG,  0xE0);
 195:mpu6050.c     **** 	_delay_ms(250);
 196:mpu6050.c     **** 
 197:mpu6050.c     **** 	raw[0] = i2c_read_byte(MPU6050_ADDRESS, SELF_TEST_X);
 198:mpu6050.c     **** 	raw[1] = i2c_read_byte(MPU6050_ADDRESS, SELF_TEST_Y);
 199:mpu6050.c     **** 	raw[2] = i2c_read_byte(MPU6050_ADDRESS, SELF_TEST_Z);
 200:mpu6050.c     **** 	raw[3] = i2c_read_byte(MPU6050_ADDRESS, SELF_TEST_A);
 201:mpu6050.c     **** 
 202:mpu6050.c     **** 	self_test[0] = (raw[0] >> 3) | (raw[3] & 0x30) >> 4;
 203:mpu6050.c     **** 	self_test[1] = (raw[1] >> 3) | (raw[3] & 0x0C) >> 2;
 204:mpu6050.c     **** 	self_test[2] = (raw[2] >> 3) | (raw[3] & 0x03);
 205:mpu6050.c     **** 
 206:mpu6050.c     **** 	self_test[3] = raw[0] & 0x1F;
 207:mpu6050.c     **** 	self_test[4] = raw[1] & 0x1F;
 208:mpu6050.c     **** 	self_test[5] = raw[2] & 0x1F;
 209:mpu6050.c     **** 
 210:mpu6050.c     **** 	factory_trim[0] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[0] - 1.0) / 30.0)));
 211:mpu6050.c     **** 	factory_trim[1] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[1] - 1.0) / 30.0)));
 212:mpu6050.c     **** 	factory_trim[2] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[2] - 1.0) / 30.0)));
 213:mpu6050.c     **** 	factory_trim[3] = (25.0 * 131.0) * (pow(1.046, ((float)self_test[3] - 1.0)));
 214:mpu6050.c     **** 	factory_trim[4] = (-25.0 * 131.0) * (pow(1.046, ((float)self_test[4] - 1.0)));
 215:mpu6050.c     **** 	factory_trim[5] = ( 25.0 * 131.0) * (pow(1.046, ((float)self_test[5] - 1.0)));
 216:mpu6050.c     **** 
 217:mpu6050.c     **** 	for(i = 0; i < 6; ++i)
 218:mpu6050.c     **** 	{
 219:mpu6050.c     **** 		dst[i] = 100.0 + 100.0 * ((float)self_test[i] - factory_trim[i]) / factory_trim[i];
 220:mpu6050.c     **** 	}
 221:mpu6050.c     **** }
 222:mpu6050.c     **** 
 223:mpu6050.c     **** static void mpu6050_calibrate(float *gyro_dst, float *accel_dst)
 224:mpu6050.c     **** {
 225:mpu6050.c     **** 	uint8_t i, data[12];
 226:mpu6050.c     **** 	uint16_t packet_count, fifo_count;
 227:mpu6050.c     **** 	int32_t gyro_bias[3] = {0, 0, 0}, accel_bias[3] = {0, 0, 0};
 228:mpu6050.c     **** 	uint32_t mask = 1UL;
 229:mpu6050.c     **** 	uint8_t mask_bit[3] = {0, 0, 0};
 230:mpu6050.c     **** 	uint16_t gyro_sensitivity  = 131, accel_sensitivity = 16384;
 231:mpu6050.c     **** 	int32_t accel_bias_reg[3] = {0, 0, 0};
 232:mpu6050.c     **** 
 233:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, PWR_MGMT_1, 0x80);
 234:mpu6050.c     **** 	_delay_ms(100);
 235:mpu6050.c     **** 
 236:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, PWR_MGMT_1, 0x01);
 237:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, PWR_MGMT_2, 0x00);
 238:mpu6050.c     **** 	_delay_ms(200);
 239:mpu6050.c     **** 
 240:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, INT_ENABLE, 0x00);
 241:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, FIFO_EN, 0x00);
 242:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, PWR_MGMT_1, 0x00);
 243:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, I2C_MST_CTRL, 0x00);
 244:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, USER_CTRL, 0x00);
 245:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, USER_CTRL, 0x0C);
 246:mpu6050.c     **** 	_delay_ms(15);
 247:mpu6050.c     **** 
 248:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, CONFIG, 0x01);
 249:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, SMPLRT_DIV, 0x00);
 250:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, 0x00);
 251:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, 0x00);
 252:mpu6050.c     **** 
 253:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, USER_CTRL, 0x40);
 254:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, FIFO_EN, 0x78);
 255:mpu6050.c     **** 	_delay_ms(80);
 256:mpu6050.c     **** 
 257:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, FIFO_EN, 0x00);
 258:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, FIFO_COUNTH, 2, &data[0]);
 259:mpu6050.c     **** 	fifo_count = ((uint16_t)data[0] << 8) | data[1];
 260:mpu6050.c     **** 	packet_count = fifo_count / 12;
 261:mpu6050.c     **** 
 262:mpu6050.c     **** 	for(i = 0; i < packet_count; ++i)
 263:mpu6050.c     **** 	{
 264:mpu6050.c     **** 		int16_t accel_temp[3] = {0, 0, 0}, gyro_temp[3] = {0, 0, 0};
 265:mpu6050.c     **** 		i2c_read_bytes(MPU6050_ADDRESS, FIFO_R_W, 12, &data[0]);
 266:mpu6050.c     **** 		accel_temp[0] = (int16_t)(((int16_t)data[0] << 8) | data[1]);
 267:mpu6050.c     **** 		accel_temp[1] = (int16_t)(((int16_t)data[2] << 8) | data[3]);
 268:mpu6050.c     **** 		accel_temp[2] = (int16_t)(((int16_t)data[4] << 8) | data[5]);
 269:mpu6050.c     **** 		gyro_temp[0] = (int16_t)(((int16_t)data[6] << 8) | data[7]);
 270:mpu6050.c     **** 		gyro_temp[1] = (int16_t)(((int16_t)data[8] << 8) | data[9]);
 271:mpu6050.c     **** 		gyro_temp[2] = (int16_t)(((int16_t)data[10] << 8) | data[11]);
 272:mpu6050.c     **** 		accel_bias[0] += (int32_t)accel_temp[0];
 273:mpu6050.c     **** 		accel_bias[1] += (int32_t)accel_temp[1];
 274:mpu6050.c     **** 		accel_bias[2] += (int32_t)accel_temp[2];
 275:mpu6050.c     **** 		gyro_bias[0] += (int32_t)gyro_temp[0];
 276:mpu6050.c     **** 		gyro_bias[1] += (int32_t)gyro_temp[1];
 277:mpu6050.c     **** 		gyro_bias[2] += (int32_t)gyro_temp[2];
 278:mpu6050.c     **** 	}
 279:mpu6050.c     **** 
 280:mpu6050.c     **** 	accel_bias[0] /= (int32_t)packet_count;
 281:mpu6050.c     **** 	accel_bias[1] /= (int32_t)packet_count;
 282:mpu6050.c     **** 	accel_bias[2] /= (int32_t)packet_count;
 283:mpu6050.c     **** 
 284:mpu6050.c     **** 	gyro_bias[0] /= (int32_t)packet_count;
 285:mpu6050.c     **** 	gyro_bias[1] /= (int32_t)packet_count;
 286:mpu6050.c     **** 	gyro_bias[2] /= (int32_t)packet_count;
 287:mpu6050.c     **** 
 288:mpu6050.c     **** 	if(accel_bias[2] > 0L)
 289:mpu6050.c     **** 	{
 290:mpu6050.c     **** 		accel_bias[2] -= (int32_t)accel_sensitivity;
 291:mpu6050.c     **** 	}
 292:mpu6050.c     **** 	else
 293:mpu6050.c     **** 	{
 294:mpu6050.c     **** 		accel_bias[2] += (int32_t)accel_sensitivity;
 295:mpu6050.c     **** 	}
 296:mpu6050.c     **** 
 297:mpu6050.c     **** 	data[0] = (-gyro_bias[0] / 4  >> 8) & 0xFF;
 298:mpu6050.c     **** 	data[1] = (-gyro_bias[0] / 4) & 0xFF;
 299:mpu6050.c     **** 	data[2] = (-gyro_bias[1] / 4  >> 8) & 0xFF;
 300:mpu6050.c     **** 	data[3] = (-gyro_bias[1] / 4) & 0xFF;
 301:mpu6050.c     **** 	data[4] = (-gyro_bias[2] / 4  >> 8) & 0xFF;
 302:mpu6050.c     **** 	data[5] = (-gyro_bias[2] / 4) & 0xFF;
 303:mpu6050.c     **** 
 304:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, XG_OFFS_USRH, data[0]);
 305:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, XG_OFFS_USRL, data[1]);
 306:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YG_OFFS_USRH, data[2]);
 307:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YG_OFFS_USRL, data[3]);
 308:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZG_OFFS_USRH, data[4]);
 309:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZG_OFFS_USRL, data[5]);
 310:mpu6050.c     **** 
 311:mpu6050.c     **** 	gyro_dst[0] = (float)gyro_bias[0] / (float)gyro_sensitivity;
 312:mpu6050.c     **** 	gyro_dst[1] = (float)gyro_bias[1] / (float)gyro_sensitivity;
 313:mpu6050.c     **** 	gyro_dst[2] = (float)gyro_bias[2] / (float)gyro_sensitivity;
 314:mpu6050.c     **** 
 315:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, XA_OFFSET_H, 2, &data[0]);
 316:mpu6050.c     **** 	accel_bias_reg[0] = (int16_t) ((int16_t)data[0] << 8) | data[1];
 317:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, YA_OFFSET_H, 2, &data[0]);
 318:mpu6050.c     **** 	accel_bias_reg[1] = (int16_t) ((int16_t)data[0] << 8) | data[1];
 319:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, ZA_OFFSET_H, 2, &data[0]);
 320:mpu6050.c     **** 	accel_bias_reg[2] = (int16_t) ((int16_t)data[0] << 8) | data[1];
 321:mpu6050.c     **** 
 322:mpu6050.c     **** 	for(i = 0; i < 3; ++i)
 323:mpu6050.c     **** 	{
 324:mpu6050.c     **** 		if(accel_bias_reg[i] & mask)
 325:mpu6050.c     **** 		{
 326:mpu6050.c     **** 			mask_bit[i] = 0x01;
 327:mpu6050.c     **** 		}
 328:mpu6050.c     **** 	}
 329:mpu6050.c     **** 
 330:mpu6050.c     **** 	accel_bias_reg[0] -= (accel_bias[0] / 8);
 331:mpu6050.c     **** 	accel_bias_reg[1] -= (accel_bias[1] / 8);
 332:mpu6050.c     **** 	accel_bias_reg[2] -= (accel_bias[2] / 8);
 333:mpu6050.c     **** 
 334:mpu6050.c     **** 	data[0] = (accel_bias_reg[0] >> 8) & 0xFF;
 335:mpu6050.c     **** 	data[1] = (accel_bias_reg[0]) & 0xFF;
 336:mpu6050.c     **** 	data[1] = data[1] | mask_bit[0];
 337:mpu6050.c     **** 	data[2] = (accel_bias_reg[1] >> 8) & 0xFF;
 338:mpu6050.c     **** 	data[3] = (accel_bias_reg[1]) & 0xFF;
 339:mpu6050.c     **** 	data[3] = data[3] | mask_bit[1];
 340:mpu6050.c     **** 	data[4] = (accel_bias_reg[2] >> 8) & 0xFF;
 341:mpu6050.c     **** 	data[5] = (accel_bias_reg[2]) & 0xFF;
 342:mpu6050.c     **** 	data[5] = data[5] | mask_bit[2];
 343:mpu6050.c     **** 
 344:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, XA_OFFSET_H, data[0]);
 345:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, XA_OFFSET_L_TC, data[1]);
 346:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YA_OFFSET_H, data[2]);
 347:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YA_OFFSET_L_TC, data[3]);
 348:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZA_OFFSET_H, data[4]);
 349:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZA_OFFSET_L_TC, data[5]);
 350:mpu6050.c     **** 
 351:mpu6050.c     **** 	accel_dst[0] = (float)accel_bias[0] / (float)accel_sensitivity;
 352:mpu6050.c     **** 	accel_dst[1] = (float)accel_bias[1] / (float)accel_sensitivity;
 353:mpu6050.c     **** 	accel_dst[2] = (float)accel_bias[2] / (float)accel_sensitivity;
 354:mpu6050.c     **** }
 355:mpu6050.c     **** 
 356:mpu6050.c     **** static void mpu6050_prepare(void)
 357:mpu6050.c     **** {
 358:mpu6050.c     **** 	uint8_t c;
 359:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, PWR_MGMT_1, 0x01);
 360:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, CONFIG, 0x03);
 361:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, SMPLRT_DIV, 0x04);
 362:mpu6050.c     **** 	c = i2c_read_byte(MPU6050_ADDRESS, GYRO_CONFIG);
 363:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, c & ~0xE0);
 364:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, c & ~0x18);
 365:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, c | G_SCALE << 3);
 366:mpu6050.c     **** 	c = i2c_read_byte(MPU6050_ADDRESS, ACCEL_CONFIG);
 367:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, c & ~0xE0);
 368:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, c & ~0x18);
 369:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, c | A_SCALE << 3);
 370:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, INT_PIN_CFG, 0x22);
 371:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, INT_ENABLE, 0x01);
 372:mpu6050.c     **** }
 373:mpu6050.c     **** 
 374:mpu6050.c     **** static void i2c_write_byte(uint8_t addr, uint8_t cmd, uint8_t data)
 375:mpu6050.c     **** {
 376:mpu6050.c     **** 	i2c_begin_transmission(addr);
 377:mpu6050.c     **** 	i2c_write(cmd);
 378:mpu6050.c     **** 	i2c_write(data);
 379:mpu6050.c     **** 	i2c_end_transmission();
 380:mpu6050.c     **** }
 381:mpu6050.c     **** 
 382:mpu6050.c     **** static uint8_t i2c_read_byte(uint8_t addr, uint8_t cmd)
 375               	.LM66:
 376               	.LFBB6:
 377               	/* prologue: function */
 378               	/* frame size = 0 */
 379               	/* stack size = 0 */
 380               	.L__stack_usage = 0
 381               	.LBB82:
 382               	.LBB83:
 384               	.Ltext3:
  75:i2c.c         **** 	tx_buf_idx = 0;
 386               	.LM67:
 387 012e 98E6      		ldi r25,lo8(104)
 388 0130 9093 0000 		sts tx_addr,r25
  76:i2c.c         **** 	tx_buf_len = 0;
 390               	.LM68:
 391 0134 1092 0000 		sts tx_buf_idx,__zero_reg__
  77:i2c.c         **** }
 393               	.LM69:
 394 0138 1092 0000 		sts tx_buf_len,__zero_reg__
 395               	.LBE83:
 396               	.LBE82:
 398               	.Ltext4:
 383:mpu6050.c     **** {
 384:mpu6050.c     **** 	i2c_begin_transmission(addr);
 385:mpu6050.c     **** 	i2c_write(cmd);
 400               	.LM70:
 401 013c 0E94 0000 		call i2c_write
 386:mpu6050.c     **** 	i2c_end_transmission();
 403               	.LM71:
 404 0140 0E94 0000 		call i2c_end_transmission.isra.0
 387:mpu6050.c     **** 	i2c_request_from(addr, 1);
 406               	.LM72:
 407 0144 81E0      		ldi r24,lo8(1)
 408 0146 0E94 0000 		call i2c_request_from.constprop.0.isra.0
 388:mpu6050.c     **** 	return i2c_read();
 410               	.LM73:
 411 014a 0C94 0000 		jmp i2c_read
 413               	.Lscope6:
 420               	i2c_read_bytes.constprop.0:
 389:mpu6050.c     **** }
 390:mpu6050.c     **** 
 391:mpu6050.c     **** static void i2c_read_bytes
 422               	.LM74:
 423               	.LFBB7:
 424 014e EF92      		push r14
 425 0150 FF92      		push r15
 426 0152 1F93      		push r17
 427 0154 CF93      		push r28
 428 0156 DF93      		push r29
 429               	/* prologue: function */
 430               	/* frame size = 0 */
 431               	/* stack size = 5 */
 432               	.L__stack_usage = 5
 433 0158 162F      		mov r17,r22
 434 015a EA01      		movw r28,r20
 435               	.LBB88:
 436               	.LBB89:
 438               	.Ltext5:
  75:i2c.c         **** 	tx_buf_idx = 0;
 440               	.LM75:
 441 015c 98E6      		ldi r25,lo8(104)
 442 015e 9093 0000 		sts tx_addr,r25
  76:i2c.c         **** 	tx_buf_len = 0;
 444               	.LM76:
 445 0162 1092 0000 		sts tx_buf_idx,__zero_reg__
  77:i2c.c         **** }
 447               	.LM77:
 448 0166 1092 0000 		sts tx_buf_len,__zero_reg__
 449               	.LBE89:
 450               	.LBE88:
 452               	.Ltext6:
 392:mpu6050.c     **** 	(uint8_t addr, uint8_t cmd, uint8_t cnt, uint8_t *dst)
 393:mpu6050.c     **** {
 394:mpu6050.c     **** 	uint8_t i = 0;
 395:mpu6050.c     **** 	i2c_begin_transmission(addr);
 396:mpu6050.c     **** 	i2c_write(cmd);
 454               	.LM78:
 455 016a 0E94 0000 		call i2c_write
 397:mpu6050.c     **** 	i2c_end_transmission();
 457               	.LM79:
 458 016e 0E94 0000 		call i2c_end_transmission.isra.0
 398:mpu6050.c     **** 	i2c_request_from(addr, cnt);
 460               	.LM80:
 461 0172 812F      		mov r24,r17
 462 0174 0E94 0000 		call i2c_request_from.constprop.0.isra.0
 394:mpu6050.c     **** 	i2c_begin_transmission(addr);
 464               	.LM81:
 465 0178 80E0      		ldi r24,0
 466               	.L37:
 399:mpu6050.c     **** 	while(i2c_available())
 468               	.LM82:
 469 017a 2091 0000 		lds r18,rx_buf_len
 470 017e 9091 0000 		lds r25,rx_buf_idx
 471 0182 2913      		cpse r18,r25
 472 0184 00C0      		rjmp .L38
 473               	/* epilogue start */
 400:mpu6050.c     **** 	{
 401:mpu6050.c     **** 		dst[i++] = i2c_read();
 402:mpu6050.c     **** 	}
 403:mpu6050.c     **** }
 475               	.LM83:
 476 0186 DF91      		pop r29
 477 0188 CF91      		pop r28
 478 018a 1F91      		pop r17
 479 018c FF90      		pop r15
 480 018e EF90      		pop r14
 481 0190 0895      		ret
 482               	.L38:
 401:mpu6050.c     **** 	}
 484               	.LM84:
 485 0192 11E0      		ldi r17,lo8(1)
 486 0194 180F      		add r17,r24
 401:mpu6050.c     **** 	}
 488               	.LM85:
 489 0196 7E01      		movw r14,r28
 490 0198 E80E      		add r14,r24
 491 019a F11C      		adc r15,__zero_reg__
 401:mpu6050.c     **** 	}
 493               	.LM86:
 494 019c 0E94 0000 		call i2c_read
 401:mpu6050.c     **** 	}
 496               	.LM87:
 497 01a0 F701      		movw r30,r14
 498 01a2 8083      		st Z,r24
 401:mpu6050.c     **** 	}
 500               	.LM88:
 501 01a4 812F      		mov r24,r17
 502 01a6 00C0      		rjmp .L37
 504               	.Lscope7:
 510               	i2c_write_byte.constprop.0:
 374:mpu6050.c     **** {
 512               	.LM89:
 513               	.LFBB8:
 514 01a8 CF93      		push r28
 515               	/* prologue: function */
 516               	/* frame size = 0 */
 517               	/* stack size = 1 */
 518               	.L__stack_usage = 1
 519 01aa C62F      		mov r28,r22
 520               	.LBB92:
 521               	.LBB93:
 523               	.Ltext7:
  75:i2c.c         **** 	tx_buf_idx = 0;
 525               	.LM90:
 526 01ac 98E6      		ldi r25,lo8(104)
 527 01ae 9093 0000 		sts tx_addr,r25
  76:i2c.c         **** 	tx_buf_len = 0;
 529               	.LM91:
 530 01b2 1092 0000 		sts tx_buf_idx,__zero_reg__
  77:i2c.c         **** }
 532               	.LM92:
 533 01b6 1092 0000 		sts tx_buf_len,__zero_reg__
 534               	.LBE93:
 535               	.LBE92:
 537               	.Ltext8:
 377:mpu6050.c     **** 	i2c_write(data);
 539               	.LM93:
 540 01ba 0E94 0000 		call i2c_write
 378:mpu6050.c     **** 	i2c_end_transmission();
 542               	.LM94:
 543 01be 8C2F      		mov r24,r28
 544 01c0 0E94 0000 		call i2c_write
 545               	/* epilogue start */
 380:mpu6050.c     **** 
 547               	.LM95:
 548 01c4 CF91      		pop r28
 379:mpu6050.c     **** }
 550               	.LM96:
 551 01c6 0C94 0000 		jmp i2c_end_transmission.isra.0
 553               	.Lscope8:
 556               	.global	__vector_24
 558               	__vector_24:
 560               	.Ltext9:
 208:i2c.c         **** 	{
 209:i2c.c         **** 		/* error: data sent, NACK received */
 210:i2c.c         **** 		return 3;
 211:i2c.c         **** 	}
 212:i2c.c         **** 	else
 213:i2c.c         **** 	{
 214:i2c.c         **** 		/* other error */
 215:i2c.c         **** 		return 4;
 216:i2c.c         **** 	}
 217:i2c.c         **** }
 218:i2c.c         **** 
 219:i2c.c         **** static void i2c_reply_ack(void)
 220:i2c.c         **** {
 221:i2c.c         **** 	TWCR = (1 << TWEN) | (1 << TWIE) | (1 << TWINT) | (1 << TWEA);
 222:i2c.c         **** }
 223:i2c.c         **** 
 224:i2c.c         **** static void i2c_reply_nack(void)
 225:i2c.c         **** {
 226:i2c.c         **** 	TWCR = (1 << TWEN) | (1 << TWIE) | (1 << TWINT);
 227:i2c.c         **** }
 228:i2c.c         **** 
 229:i2c.c         **** SIGNAL(TWI_vect)
 230:i2c.c         **** {
 562               	.LM97:
 563               	.LFBB9:
 564 01ca 1F92      		push r1
 565 01cc 0F92      		push r0
 566 01ce 0FB6      		in r0,__SREG__
 567 01d0 0F92      		push r0
 568 01d2 1124      		clr __zero_reg__
 569 01d4 2F93      		push r18
 570 01d6 3F93      		push r19
 571 01d8 4F93      		push r20
 572 01da 5F93      		push r21
 573 01dc 6F93      		push r22
 574 01de 7F93      		push r23
 575 01e0 8F93      		push r24
 576 01e2 9F93      		push r25
 577 01e4 AF93      		push r26
 578 01e6 BF93      		push r27
 579 01e8 EF93      		push r30
 580 01ea FF93      		push r31
 581               	/* prologue: Signal */
 582               	/* frame size = 0 */
 583               	/* stack size = 15 */
 584               	.L__stack_usage = 15
 231:i2c.c         **** 	switch(TW_STATUS)
 586               	.LM98:
 587 01ec 8091 B900 		lds r24,185
 588 01f0 887F      		andi r24,lo8(-8)
 590               	.LM99:
 591 01f2 8833      		cpi r24,lo8(56)
 592 01f4 01F4      		brne .+2
 593 01f6 00C0      		rjmp .L41
 594 01f8 00F4      		brsh .L42
 595 01fa 8032      		cpi r24,lo8(32)
 596 01fc 01F0      		breq .L50
 597 01fe 00F4      		brsh .L44
 598 0200 8830      		cpi r24,lo8(8)
 599 0202 01F4      		brne .+2
 600 0204 00C0      		rjmp .L45
 601 0206 00F4      		brsh .L46
 602 0208 8823      		tst r24
 603 020a 01F4      		brne .+2
 604 020c 00C0      		rjmp .L47
 605               	.L40:
 606               	/* epilogue start */
 232:i2c.c         **** 	{
 233:i2c.c         **** 		/* all master */
 234:i2c.c         **** 		case TW_START:
 235:i2c.c         **** 			/* sent start condition */
 236:i2c.c         **** 
 237:i2c.c         **** 		case TW_REP_START:
 238:i2c.c         **** 			/* sent repeated start condition */
 239:i2c.c         **** 			TWDR = slave_rw;
 240:i2c.c         **** 			i2c_reply_ack();
 241:i2c.c         **** 			break;
 242:i2c.c         **** 
 243:i2c.c         **** 		/* master transmitter */
 244:i2c.c         **** 		case TW_MT_SLA_ACK:
 245:i2c.c         **** 			/* slave receiver acknowledged address */
 246:i2c.c         **** 
 247:i2c.c         **** 		case TW_MT_DATA_ACK:
 248:i2c.c         **** 			/* slave receiver acknowledged data */
 249:i2c.c         **** 			if(master_buf_idx < master_buf_len)
 250:i2c.c         **** 			{
 251:i2c.c         **** 				TWDR = master_buf[master_buf_idx++];
 252:i2c.c         **** 				i2c_reply_ack();
 253:i2c.c         **** 			}
 254:i2c.c         **** 			else
 255:i2c.c         **** 			{
 256:i2c.c         **** 				i2c_stop();
 257:i2c.c         **** 			}
 258:i2c.c         **** 			break;
 259:i2c.c         **** 
 260:i2c.c         **** 		case TW_MT_SLA_NACK:
 261:i2c.c         **** 			/* address sent, NACK received */
 262:i2c.c         **** 			error = TW_MT_SLA_NACK;
 263:i2c.c         **** 			i2c_stop();
 264:i2c.c         **** 			break;
 265:i2c.c         **** 
 266:i2c.c         **** 		case TW_MT_DATA_NACK:
 267:i2c.c         **** 			/* data sent, NACK received */
 268:i2c.c         **** 			error = TW_MT_DATA_NACK;
 269:i2c.c         **** 			i2c_stop();
 270:i2c.c         **** 			break;
 271:i2c.c         **** 
 272:i2c.c         **** 		case TW_MT_ARB_LOST:
 273:i2c.c         **** 			/* bus arbitration lost */
 274:i2c.c         **** 			error = TW_MT_ARB_LOST;
 275:i2c.c         **** 			i2c_release_bus();
 276:i2c.c         **** 			break;
 277:i2c.c         **** 
 278:i2c.c         **** 		/* master receiver */
 279:i2c.c         **** 		case TW_MR_DATA_ACK:
 280:i2c.c         **** 			/* data received, ACK sent */
 281:i2c.c         **** 			master_buf[master_buf_idx++] = TWDR;
 282:i2c.c         **** 
 283:i2c.c         **** 		case TW_MR_SLA_ACK:
 284:i2c.c         **** 			/* address sent, ACK received */
 285:i2c.c         **** 			if(master_buf_idx < master_buf_len)
 286:i2c.c         **** 			{
 287:i2c.c         **** 				i2c_reply_ack();
 288:i2c.c         **** 			}
 289:i2c.c         **** 			else
 290:i2c.c         **** 			{
 291:i2c.c         **** 				i2c_reply_nack();
 292:i2c.c         **** 			}
 293:i2c.c         **** 			break;
 294:i2c.c         **** 
 295:i2c.c         **** 		case TW_MR_DATA_NACK:
 296:i2c.c         **** 			/* data received, NACK sent */
 297:i2c.c         **** 			master_buf[master_buf_idx++] = TWDR;
 298:i2c.c         **** 
 299:i2c.c         **** 		case TW_MR_SLA_NACK:
 300:i2c.c         **** 			/* address sent, NACK received */
 301:i2c.c         **** 			i2c_stop();
 302:i2c.c         **** 			break;
 303:i2c.c         **** 
 304:i2c.c         **** 		/* all */
 305:i2c.c         **** 		case TW_NO_INFO:
 306:i2c.c         **** 			/* no state information */
 307:i2c.c         **** 			break;
 308:i2c.c         **** 
 309:i2c.c         **** 		case TW_BUS_ERROR:
 310:i2c.c         **** 			/* bus error, illegal stop/start */
 311:i2c.c         **** 			error = TW_BUS_ERROR;
 312:i2c.c         **** 			i2c_stop();
 313:i2c.c         **** 			break;
 314:i2c.c         **** 	}
 315:i2c.c         **** }
 608               	.LM100:
 609 020e FF91      		pop r31
 610 0210 EF91      		pop r30
 611 0212 BF91      		pop r27
 612 0214 AF91      		pop r26
 613 0216 9F91      		pop r25
 614 0218 8F91      		pop r24
 615 021a 7F91      		pop r23
 616 021c 6F91      		pop r22
 617 021e 5F91      		pop r21
 618 0220 4F91      		pop r20
 619 0222 3F91      		pop r19
 620 0224 2F91      		pop r18
 621 0226 0F90      		pop r0
 622 0228 0FBE      		out __SREG__,r0
 623 022a 0F90      		pop r0
 624 022c 1F90      		pop r1
 625 022e 1895      		reti
 626               	.L46:
 231:i2c.c         **** 	switch(TW_STATUS)
 628               	.LM101:
 629 0230 8031      		cpi r24,lo8(16)
 630 0232 01F0      		breq .L45
 631 0234 8831      		cpi r24,lo8(24)
 632 0236 01F4      		brne .L40
 633               	.L49:
 249:i2c.c         **** 			{
 635               	.LM102:
 636 0238 9091 0000 		lds r25,master_buf_idx
 249:i2c.c         **** 			{
 638               	.LM103:
 639 023c 8091 0000 		lds r24,master_buf_len
 640 0240 9817      		cp r25,r24
 641 0242 00F4      		brsh .L77
 251:i2c.c         **** 				i2c_reply_ack();
 643               	.LM104:
 644 0244 E091 0000 		lds r30,master_buf_idx
 645 0248 81E0      		ldi r24,lo8(1)
 646 024a 8E0F      		add r24,r30
 647 024c 8093 0000 		sts master_buf_idx,r24
 648 0250 F0E0      		ldi r31,0
 251:i2c.c         **** 				i2c_reply_ack();
 650               	.LM105:
 651 0252 E050      		subi r30,lo8(-(master_buf))
 652 0254 F040      		sbci r31,hi8(-(master_buf))
 653 0256 8081      		ld r24,Z
 654 0258 00C0      		rjmp .L79
 655               	.L44:
 231:i2c.c         **** 	{
 657               	.LM106:
 658 025a 8832      		cpi r24,lo8(40)
 659 025c 01F0      		breq .L49
 660 025e 8033      		cpi r24,lo8(48)
 661 0260 01F4      		brne .L40
 662               	.L50:
 268:i2c.c         **** 			i2c_stop();
 664               	.LM107:
 665 0262 8093 0000 		sts error,r24
 666 0266 00C0      		rjmp .L77
 667               	.L42:
 231:i2c.c         **** 	{
 669               	.LM108:
 670 0268 8035      		cpi r24,lo8(80)
 671 026a 01F0      		breq .L51
 672 026c 00F4      		brsh .L52
 673 026e 8034      		cpi r24,lo8(64)
 674 0270 01F0      		breq .L53
 675 0272 8834      		cpi r24,lo8(72)
 676 0274 01F4      		brne .L40
 677               	.L77:
 312:i2c.c         **** 			break;
 679               	.LM109:
 680 0276 0E94 0000 		call i2c_stop
 682               	.LM110:
 683 027a 00C0      		rjmp .L40
 684               	.L52:
 231:i2c.c         **** 	{
 686               	.LM111:
 687 027c 8835      		cpi r24,lo8(88)
 688 027e 01F4      		brne .L40
 297:i2c.c         **** 
 690               	.LM112:
 691 0280 E091 0000 		lds r30,master_buf_idx
 692 0284 81E0      		ldi r24,lo8(1)
 693 0286 8E0F      		add r24,r30
 694 0288 8093 0000 		sts master_buf_idx,r24
 297:i2c.c         **** 
 696               	.LM113:
 697 028c 8091 BB00 		lds r24,187
 297:i2c.c         **** 
 699               	.LM114:
 700 0290 F0E0      		ldi r31,0
 297:i2c.c         **** 
 702               	.LM115:
 703 0292 E050      		subi r30,lo8(-(master_buf))
 704 0294 F040      		sbci r31,hi8(-(master_buf))
 705 0296 8083      		st Z,r24
 706 0298 00C0      		rjmp .L77
 707               	.L45:
 239:i2c.c         **** 			i2c_reply_ack();
 709               	.LM116:
 710 029a 8091 0000 		lds r24,slave_rw
 711               	.L79:
 251:i2c.c         **** 				i2c_reply_ack();
 713               	.LM117:
 714 029e 8093 BB00 		sts 187,r24
 715               	.L78:
 716               	.LBB104:
 717               	.LBB105:
 221:i2c.c         **** }
 719               	.LM118:
 720 02a2 85EC      		ldi r24,lo8(-59)
 721               	.L76:
 722               	.LBE105:
 723               	.LBE104:
 724               	.LBB106:
 725               	.LBB107:
 226:i2c.c         **** }
 727               	.LM119:
 728 02a4 8093 BC00 		sts 188,r24
 227:i2c.c         **** 
 730               	.LM120:
 731 02a8 00C0      		rjmp .L40
 732               	.L41:
 733               	.LBE107:
 734               	.LBE106:
 274:i2c.c         **** 			i2c_release_bus();
 736               	.LM121:
 737 02aa 8093 0000 		sts error,r24
 738               	.LBB109:
 739               	.LBB110:
 131:i2c.c         **** 	state = I2C_READY;
 741               	.LM122:
 742 02ae 85EC      		ldi r24,lo8(-59)
 743 02b0 8093 BC00 		sts 188,r24
 132:i2c.c         **** }
 745               	.LM123:
 746 02b4 1092 0000 		sts state,__zero_reg__
 133:i2c.c         **** 
 748               	.LM124:
 749 02b8 00C0      		rjmp .L40
 750               	.L51:
 751               	.LBE110:
 752               	.LBE109:
 281:i2c.c         **** 
 754               	.LM125:
 755 02ba E091 0000 		lds r30,master_buf_idx
 756 02be 81E0      		ldi r24,lo8(1)
 757 02c0 8E0F      		add r24,r30
 758 02c2 8093 0000 		sts master_buf_idx,r24
 281:i2c.c         **** 
 760               	.LM126:
 761 02c6 8091 BB00 		lds r24,187
 281:i2c.c         **** 
 763               	.LM127:
 764 02ca F0E0      		ldi r31,0
 281:i2c.c         **** 
 766               	.LM128:
 767 02cc E050      		subi r30,lo8(-(master_buf))
 768 02ce F040      		sbci r31,hi8(-(master_buf))
 769 02d0 8083      		st Z,r24
 770               	.L53:
 285:i2c.c         **** 			{
 772               	.LM129:
 773 02d2 9091 0000 		lds r25,master_buf_idx
 285:i2c.c         **** 			{
 775               	.LM130:
 776 02d6 8091 0000 		lds r24,master_buf_len
 777 02da 9817      		cp r25,r24
 778 02dc 00F0      		brlo .L78
 779               	.LBB111:
 780               	.LBB108:
 226:i2c.c         **** }
 782               	.LM131:
 783 02de 85E8      		ldi r24,lo8(-123)
 784 02e0 00C0      		rjmp .L76
 785               	.L47:
 786               	.LBE108:
 787               	.LBE111:
 311:i2c.c         **** 			i2c_stop();
 789               	.LM132:
 790 02e2 1092 0000 		sts error,__zero_reg__
 791 02e6 00C0      		rjmp .L77
 793               	.Lscope9:
 795               	.global	__mulsf3
 796               	.global	__floatunsisf
 797               	.global	__subsf3
 798               	.global	__divsf3
 799               	.global	__addsf3
 800               	.global	__ltsf2
 801               	.global	__floatsisf
 802               		.section	.rodata
 803               	.LC0:
 804 0000 00        		.string	""
 805 0001 00        		.string	""
 806 0002 00        		.string	""
 807               		.text
 809               	.global	mpu6050_init
 811               	mpu6050_init:
 813               	.Ltext10:
 404:mpu6050.c     **** 
 405:mpu6050.c     **** static void quaternion_update
 406:mpu6050.c     **** 		(float ax, float ay, float az, float gx, float gy, float gz)
 407:mpu6050.c     **** {
 408:mpu6050.c     **** 	float q1, q2, q3, q4, norm, f1, f2, f3,
 409:mpu6050.c     **** 		g_err_x, g_err_y, g_err_z, g_bias_x, g_bias_y, g_bias_z,
 410:mpu6050.c     **** 		_2q1, _2q2, _2q3, _2q4,
 411:mpu6050.c     **** 		hat_dot1, hat_dot2, hat_dot3, hat_dot4,
 412:mpu6050.c     **** 		j11or24, j12or23, j13or22, j14or21, j32, j33,
 413:mpu6050.c     **** 		q_dot1, q_dot2, q_dot3, q_dot4,
 414:mpu6050.c     **** 		half_q1, half_q2, half_q3, half_q4;
 415:mpu6050.c     **** 
 416:mpu6050.c     **** 	q1 = q[0];
 417:mpu6050.c     **** 	q2 = q[1];
 418:mpu6050.c     **** 	q3 = q[2];
 419:mpu6050.c     **** 	q4 = q[3];
 420:mpu6050.c     **** 
 421:mpu6050.c     **** 	_2q1 = 2.0f * q1;
 422:mpu6050.c     **** 	_2q2 = 2.0f * q2;
 423:mpu6050.c     **** 	_2q3 = 2.0f * q3;
 424:mpu6050.c     **** 	_2q4 = 2.0f * q4;
 425:mpu6050.c     **** 
 426:mpu6050.c     **** 	/* normalize accelerometer movement */
 427:mpu6050.c     **** 	norm = sqrt(ax * ax + ay * ay + az * az);
 428:mpu6050.c     **** 	if(norm == 0.0f)
 429:mpu6050.c     **** 	{
 430:mpu6050.c     **** 		return;
 431:mpu6050.c     **** 	}
 432:mpu6050.c     **** 
 433:mpu6050.c     **** 	norm = 1.0f / norm;
 434:mpu6050.c     **** 	ax *= norm;
 435:mpu6050.c     **** 	ay *= norm;
 436:mpu6050.c     **** 	az *= norm;
 437:mpu6050.c     **** 
 438:mpu6050.c     **** 	/* compute the objective function and jacobian */
 439:mpu6050.c     **** 	f1 = _2q2 * q4 - _2q1 * q3 - ax;
 440:mpu6050.c     **** 	f2 = _2q1 * q2 + _2q3 * q4 - ay;
 441:mpu6050.c     **** 	f3 = 1.0f - _2q2 * q2 - _2q3 * q3 - az;
 442:mpu6050.c     **** 	j11or24 = _2q3;
 443:mpu6050.c     **** 	j12or23 = _2q4;
 444:mpu6050.c     **** 	j13or22 = _2q1;
 445:mpu6050.c     **** 	j14or21 = _2q2;
 446:mpu6050.c     **** 	j32 = 2.0f * j14or21;
 447:mpu6050.c     **** 	j33 = 2.0f * j11or24;
 448:mpu6050.c     **** 
 449:mpu6050.c     **** 	/* compute the gradient */
 450:mpu6050.c     **** 	hat_dot1 = j14or21 * f2 - j11or24 * f1;
 451:mpu6050.c     **** 	hat_dot2 = j12or23 * f1 + j13or22 * f2 - j32 * f3;
 452:mpu6050.c     **** 	hat_dot3 = j12or23 * f2 - j33 *f3 - j13or22 * f1;
 453:mpu6050.c     **** 	hat_dot4 = j14or21 * f1 + j11or24 * f2;
 454:mpu6050.c     **** 
 455:mpu6050.c     **** 	/* normalize gradient */
 456:mpu6050.c     **** 	norm = sqrt(hat_dot1 * hat_dot1 + hat_dot2 * hat_dot2 + hat_dot3 * hat_dot3 + hat_dot4 * hat_dot4)
 457:mpu6050.c     **** 	hat_dot1 /= norm;
 458:mpu6050.c     **** 	hat_dot2 /= norm;
 459:mpu6050.c     **** 	hat_dot3 /= norm;
 460:mpu6050.c     **** 	hat_dot4 /= norm;
 461:mpu6050.c     **** 
 462:mpu6050.c     **** 	/* compute gyroscope biases */
 463:mpu6050.c     **** 	g_err_x = _2q1 * hat_dot2 - _2q2 * hat_dot1 - _2q3 * hat_dot4 + _2q4 * hat_dot3;
 464:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 465:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 466:mpu6050.c     **** 
 467:mpu6050.c     **** 	/* remove gyroscope biases */
 468:mpu6050.c     **** 	g_bias_x = g_err_x * time_delta * zeta;
 469:mpu6050.c     **** 	g_bias_y = g_err_y * time_delta * zeta;
 470:mpu6050.c     **** 	g_bias_z = g_err_z * time_delta * zeta;
 471:mpu6050.c     **** 	gx -= g_bias_x;
 472:mpu6050.c     **** 	gy -= g_bias_y;
 473:mpu6050.c     **** 	gz -= g_bias_z;
 474:mpu6050.c     **** 
 475:mpu6050.c     **** 	half_q1 = 0.5f * q1;
 476:mpu6050.c     **** 	half_q2 = 0.5f * q2;
 477:mpu6050.c     **** 	half_q3 = 0.5f * q3;
 478:mpu6050.c     **** 	half_q4 = 0.5f * q4;
 479:mpu6050.c     **** 
 480:mpu6050.c     **** 	/* compute quaternion derivative */
 481:mpu6050.c     **** 	q_dot1 = -half_q2 * gx - half_q3 * gy - half_q4 * gz;
 482:mpu6050.c     **** 	q_dot2 = half_q1 * gx + half_q3 * gz - half_q4 * gy;
 483:mpu6050.c     **** 	q_dot3 = half_q1 * gy - half_q2 * gz + half_q4 * gx;
 484:mpu6050.c     **** 	q_dot4 = half_q1 * gz + half_q2 * gy - half_q3 * gx;
 485:mpu6050.c     **** 
 486:mpu6050.c     **** 	/* integrate quaternion derivative */
 487:mpu6050.c     **** 	q1 += (q_dot1 - (beta * hat_dot1)) * time_delta;
 488:mpu6050.c     **** 	q2 += (q_dot2 - (beta * hat_dot2)) * time_delta;
 489:mpu6050.c     **** 	q3 += (q_dot3 - (beta * hat_dot3)) * time_delta;
 490:mpu6050.c     **** 	q4 += (q_dot4 - (beta * hat_dot4)) * time_delta;
 491:mpu6050.c     **** 
 492:mpu6050.c     **** 	/* normalize quaternion */
 493:mpu6050.c     **** 	norm = sqrt(q1 * q1 + q2 * q2 + q3 * q3 + q4 * q4);
 494:mpu6050.c     **** 	norm = 1.0f / norm;
 495:mpu6050.c     **** 	q[0] = q1 * norm;
 496:mpu6050.c     **** 	q[1] = q2 * norm;
 497:mpu6050.c     **** 	q[2] = q3 * norm;
 498:mpu6050.c     **** 	q[3] = q4 * norm;
 499:mpu6050.c     **** }
 500:mpu6050.c     **** 
 501:mpu6050.c     **** uint8_t mpu6050_init(void)
 502:mpu6050.c     **** {
 815               	.LM133:
 816               	.LFBB10:
 817 02e8 4F92      		push r4
 818 02ea 5F92      		push r5
 819 02ec 6F92      		push r6
 820 02ee 7F92      		push r7
 821 02f0 8F92      		push r8
 822 02f2 9F92      		push r9
 823 02f4 AF92      		push r10
 824 02f6 BF92      		push r11
 825 02f8 CF92      		push r12
 826 02fa DF92      		push r13
 827 02fc EF92      		push r14
 828 02fe FF92      		push r15
 829 0300 0F93      		push r16
 830 0302 1F93      		push r17
 831 0304 CF93      		push r28
 832 0306 DF93      		push r29
 833 0308 CDB7      		in r28,__SP_L__
 834 030a DEB7      		in r29,__SP_H__
 835 030c CF55      		subi r28,95
 836 030e D109      		sbc r29,__zero_reg__
 837 0310 0FB6      		in __tmp_reg__,__SREG__
 838 0312 F894      		cli
 839 0314 DEBF      		out __SP_H__,r29
 840 0316 0FBE      		out __SREG__,__tmp_reg__
 841 0318 CDBF      		out __SP_L__,r28
 842               	/* prologue: function */
 843               	/* frame size = 95 */
 844               	/* stack size = 111 */
 845               	.L__stack_usage = 111
 503:mpu6050.c     **** 	float self_test[6];
 504:mpu6050.c     **** 	uint8_t c;
 505:mpu6050.c     **** 	TCCR0A = 0;
 847               	.LM134:
 848 031a 14BC      		out 0x24,__zero_reg__
 506:mpu6050.c     **** 	TCCR0B = (1 << CS01) | (1 << CS00);
 850               	.LM135:
 851 031c 83E0      		ldi r24,lo8(3)
 852 031e 85BD      		out 0x25,r24
 507:mpu6050.c     **** 	TIMSK0 = (1 << TOIE0);
 854               	.LM136:
 855 0320 81E0      		ldi r24,lo8(1)
 856 0322 8093 6E00 		sts 110,r24
 508:mpu6050.c     **** 	beta = sqrt(3.0f / 4.0f) * (M_PI * (40.0f / 180.0f));
 858               	.LM137:
 859 0326 60E0      		ldi r22,0
 860 0328 70E0      		ldi r23,0
 861 032a 80E4      		ldi r24,lo8(64)
 862 032c 9FE3      		ldi r25,lo8(63)
 863 032e 0E94 0000 		call sqrt
 864 0332 7B01      		movw r14,r22
 865 0334 8C01      		movw r16,r24
 867               	.LM138:
 868 0336 23EC      		ldi r18,lo8(-61)
 869 0338 38EB      		ldi r19,lo8(-72)
 870 033a 42E3      		ldi r20,lo8(50)
 871 033c 5FE3      		ldi r21,lo8(63)
 872 033e 2196      		adiw r28,64-63
 873 0340 6FAF      		std Y+63,r22
 874 0342 2197      		sbiw r28,64-63
 875 0344 2296      		adiw r28,65-63
 876 0346 FFAE      		std Y+63,r15
 877 0348 2297      		sbiw r28,65-63
 878 034a 2396      		adiw r28,66-63
 879 034c 8FAF      		std Y+63,r24
 880 034e 2397      		sbiw r28,66-63
 881 0350 2496      		adiw r28,67-63
 882 0352 1FAF      		std Y+63,r17
 883 0354 2497      		sbiw r28,67-63
 884 0356 2496      		adiw r28,64-60
 885 0358 6CAD      		ldd r22,Y+60
 886 035a 7DAD      		ldd r23,Y+61
 887 035c 8EAD      		ldd r24,Y+62
 888 035e 9FAD      		ldd r25,Y+63
 889 0360 2497      		sbiw r28,64-60
 890 0362 0E94 0000 		call __mulsf3
 891 0366 6093 0000 		sts beta,r22
 892 036a 7093 0000 		sts beta+1,r23
 893 036e 8093 0000 		sts beta+2,r24
 894 0372 9093 0000 		sts beta+3,r25
 509:mpu6050.c     **** 	zeta = sqrt(3.0f / 4.0f) * (M_PI * (2.0f / 180.0f));
 896               	.LM139:
 897 0376 26E3      		ldi r18,lo8(54)
 898 0378 3AEF      		ldi r19,lo8(-6)
 899 037a 4EE0      		ldi r20,lo8(14)
 900 037c 5DE3      		ldi r21,lo8(61)
 901 037e 2496      		adiw r28,64-60
 902 0380 6CAD      		ldd r22,Y+60
 903 0382 7DAD      		ldd r23,Y+61
 904 0384 8EAD      		ldd r24,Y+62
 905 0386 9FAD      		ldd r25,Y+63
 906 0388 2497      		sbiw r28,64-60
 907 038a 0E94 0000 		call __mulsf3
 908 038e 6093 0000 		sts zeta,r22
 909 0392 7093 0000 		sts zeta+1,r23
 910 0396 8093 0000 		sts zeta+2,r24
 911 039a 9093 0000 		sts zeta+3,r25
 510:mpu6050.c     **** 	if((c = i2c_read_byte(MPU6050_ADDRESS, WHO_AM_I_MPU6050)) != 0x68)
 913               	.LM140:
 914 039e 85E7      		ldi r24,lo8(117)
 915 03a0 0E94 0000 		call i2c_read_byte.constprop.0
 917               	.LM141:
 918 03a4 8836      		cpi r24,lo8(104)
 919 03a6 01F0      		breq .+2
 920 03a8 00C0      		rjmp .L100
 921               	.LBB141:
 922               	.LBB142:
 923               	.LBB143:
 924               	.LBB144:
 193:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG,  0xE0);
 926               	.LM142:
 927 03aa 60EF      		ldi r22,lo8(-16)
 928 03ac 8CE1      		ldi r24,lo8(28)
 929 03ae 0E94 0000 		call i2c_write_byte.constprop.0
 194:mpu6050.c     **** 	_delay_ms(250);
 931               	.LM143:
 932 03b2 60EE      		ldi r22,lo8(-32)
 933 03b4 8BE1      		ldi r24,lo8(27)
 934 03b6 0E94 0000 		call i2c_write_byte.constprop.0
 935 03ba 84EC      		ldi r24,lo8(-60)
 936 03bc 99E0      		ldi r25,lo8(9)
 937               	.LBB145:
 938               	.LBB146:
 939               	.LBB147:
 940               	.LBB148:
 942               	.Ltext11:
   1:/usr/avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/avr/include/util/delay_basic.h **** 
   5:/usr/avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/util/delay_basic.h **** 
   8:/usr/avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/util/delay_basic.h **** 
  11:/usr/avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/util/delay_basic.h ****      distribution.
  15:/usr/avr/include/util/delay_basic.h **** 
  16:/usr/avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/util/delay_basic.h **** 
  20:/usr/avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/util/delay_basic.h **** 
  32:/usr/avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2453 2014-10-19 08:18:11Z saaadhu $ */
  33:/usr/avr/include/util/delay_basic.h **** 
  34:/usr/avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/avr/include/util/delay_basic.h **** 
  37:/usr/avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/avr/include/util/delay_basic.h **** 
  39:/usr/avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
  41:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
  42:/usr/avr/include/util/delay_basic.h **** #endif
  43:/usr/avr/include/util/delay_basic.h **** 
  44:/usr/avr/include/util/delay_basic.h **** /** \file */
  45:/usr/avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/avr/include/util/delay_basic.h ****     \code
  47:/usr/avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/avr/include/util/delay_basic.h ****     \endcode
  49:/usr/avr/include/util/delay_basic.h **** 
  50:/usr/avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/avr/include/util/delay_basic.h **** 
  58:/usr/avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/avr/include/util/delay_basic.h ****     to the overall delay time.
  64:/usr/avr/include/util/delay_basic.h **** 
  65:/usr/avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/avr/include/util/delay_basic.h **** 
  67:/usr/avr/include/util/delay_basic.h **** */
  68:/usr/avr/include/util/delay_basic.h **** 
  69:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/avr/include/util/delay_basic.h **** 
  71:/usr/avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/avr/include/util/delay_basic.h ****     register.
  76:/usr/avr/include/util/delay_basic.h **** 
  77:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/avr/include/util/delay_basic.h **** */
  80:/usr/avr/include/util/delay_basic.h **** void
  81:/usr/avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/avr/include/util/delay_basic.h **** {
  83:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/avr/include/util/delay_basic.h **** 	);
  89:/usr/avr/include/util/delay_basic.h **** }
  90:/usr/avr/include/util/delay_basic.h **** 
  91:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/avr/include/util/delay_basic.h **** 
  93:/usr/avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/avr/include/util/delay_basic.h **** 
  99:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/avr/include/util/delay_basic.h ****  */
 102:/usr/avr/include/util/delay_basic.h **** void
 103:/usr/avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/avr/include/util/delay_basic.h **** {
 105:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
 944               	.LM144:
 945 03be 20E9      		ldi r18,lo8(-112)
 946 03c0 31E0      		ldi r19,lo8(1)
 947               	.L82:
 948 03c2 F901      		movw r30,r18
 949               	/* #APP */
 950               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 951 03c4 3197      		1: sbiw r30,1
 952 03c6 01F4      		brne 1b
 953               	 ;  0 "" 2
 954               	/* #NOAPP */
 955               	.LBE148:
 956               	.LBE147:
 958               	.Ltext12:
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 960               	.LM145:
 961 03c8 0197      		sbiw r24,1
 962 03ca 01F4      		brne .L82
 963               	.LBE146:
 964               	.LBE145:
 966               	.Ltext13:
 197:mpu6050.c     **** 	raw[1] = i2c_read_byte(MPU6050_ADDRESS, SELF_TEST_Y);
 968               	.LM146:
 969 03cc 8DE0      		ldi r24,lo8(13)
 970 03ce 0E94 0000 		call i2c_read_byte.constprop.0
 971 03d2 E82E      		mov r14,r24
 198:mpu6050.c     **** 	raw[2] = i2c_read_byte(MPU6050_ADDRESS, SELF_TEST_Z);
 973               	.LM147:
 974 03d4 8EE0      		ldi r24,lo8(14)
 975 03d6 0E94 0000 		call i2c_read_byte.constprop.0
 976 03da 082F      		mov r16,r24
 199:mpu6050.c     **** 	raw[3] = i2c_read_byte(MPU6050_ADDRESS, SELF_TEST_A);
 978               	.LM148:
 979 03dc 8FE0      		ldi r24,lo8(15)
 980 03de 0E94 0000 		call i2c_read_byte.constprop.0
 981 03e2 182F      		mov r17,r24
 200:mpu6050.c     **** 
 983               	.LM149:
 984 03e4 80E1      		ldi r24,lo8(16)
 985 03e6 0E94 0000 		call i2c_read_byte.constprop.0
 986 03ea 982F      		mov r25,r24
 202:mpu6050.c     **** 	self_test[1] = (raw[1] >> 3) | (raw[3] & 0x0C) >> 2;
 988               	.LM150:
 989 03ec 482F      		mov r20,r24
 990 03ee 50E0      		ldi r21,0
 991 03f0 9A01      		movw r18,r20
 992 03f2 64E0      		ldi r22,4
 993               		1:
 994 03f4 3595      		asr r19
 995 03f6 2795      		ror r18
 996 03f8 6A95      		dec r22
 997 03fa 01F4      		brne 1b
 998 03fc 2370      		andi r18,lo8(3)
 202:mpu6050.c     **** 	self_test[1] = (raw[1] >> 3) | (raw[3] & 0x0C) >> 2;
 1000               	.LM151:
 1001 03fe 8E2D      		mov r24,r14
 1002 0400 8695      		lsr r24
 1003 0402 8695      		lsr r24
 1004 0404 8695      		lsr r24
 1005 0406 282B      		or r18,r24
 202:mpu6050.c     **** 	self_test[1] = (raw[1] >> 3) | (raw[3] & 0x0C) >> 2;
 1007               	.LM152:
 1008 0408 29AB      		std Y+49,r18
 203:mpu6050.c     **** 	self_test[2] = (raw[2] >> 3) | (raw[3] & 0x03);
 1010               	.LM153:
 1011 040a 5595      		asr r21
 1012 040c 4795      		ror r20
 1013 040e 5595      		asr r21
 1014 0410 4795      		ror r20
 1015 0412 4370      		andi r20,lo8(3)
 203:mpu6050.c     **** 	self_test[2] = (raw[2] >> 3) | (raw[3] & 0x03);
 1017               	.LM154:
 1018 0414 F02E      		mov r15,r16
 1019 0416 F694      		lsr r15
 1020 0418 F694      		lsr r15
 1021 041a F694      		lsr r15
 1022 041c F42A      		or r15,r20
 203:mpu6050.c     **** 	self_test[2] = (raw[2] >> 3) | (raw[3] & 0x03);
 1024               	.LM155:
 1025 041e FAAA      		std Y+50,r15
 204:mpu6050.c     **** 
 1027               	.LM156:
 1028 0420 D12E      		mov r13,r17
 1029 0422 D694      		lsr r13
 1030 0424 D694      		lsr r13
 1031 0426 D694      		lsr r13
 204:mpu6050.c     **** 
 1033               	.LM157:
 1034 0428 9370      		andi r25,lo8(3)
 204:mpu6050.c     **** 
 1036               	.LM158:
 1037 042a D92A      		or r13,r25
 204:mpu6050.c     **** 
 1039               	.LM159:
 1040 042c DBAA      		std Y+51,r13
 206:mpu6050.c     **** 	self_test[4] = raw[1] & 0x1F;
 1042               	.LM160:
 1043 042e 3E2D      		mov r19,r14
 1044 0430 3F71      		andi r19,lo8(31)
 1045 0432 E32E      		mov r14,r19
 206:mpu6050.c     **** 	self_test[4] = raw[1] & 0x1F;
 1047               	.LM161:
 1048 0434 3CAB      		std Y+52,r19
 207:mpu6050.c     **** 	self_test[5] = raw[2] & 0x1F;
 1050               	.LM162:
 1051 0436 0F71      		andi r16,lo8(31)
 207:mpu6050.c     **** 	self_test[5] = raw[2] & 0x1F;
 1053               	.LM163:
 1054 0438 0DAB      		std Y+53,r16
 208:mpu6050.c     **** 
 1056               	.LM164:
 1057 043a 1F71      		andi r17,lo8(31)
 208:mpu6050.c     **** 
 1059               	.LM165:
 1060 043c 1EAB      		std Y+54,r17
 210:mpu6050.c     **** 	factory_trim[1] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[1] - 1.0) / 30.0)));
 1062               	.LM166:
 1063 043e 822F      		mov r24,r18
 1064 0440 90E0      		ldi r25,0
 1065 0442 B0E0      		ldi r27,0
 1066 0444 A0E0      		ldi r26,0
 1067 0446 2496      		adiw r28,64-60
 1068 0448 8CAF      		std Y+60,r24
 1069 044a 9DAF      		std Y+61,r25
 1070 044c AEAF      		std Y+62,r26
 1071 044e BFAF      		std Y+63,r27
 1072 0450 2497      		sbiw r28,64-60
 1073 0452 BC01      		movw r22,r24
 1074 0454 CD01      		movw r24,r26
 1075 0456 0E94 0000 		call __floatunsisf
 210:mpu6050.c     **** 	factory_trim[1] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[1] - 1.0) / 30.0)));
 1077               	.LM167:
 1078 045a 20E0      		ldi r18,0
 1079 045c 30E0      		ldi r19,0
 1080 045e 40E8      		ldi r20,lo8(-128)
 1081 0460 5FE3      		ldi r21,lo8(63)
 1082 0462 2196      		adiw r28,64-63
 1083 0464 6FAF      		std Y+63,r22
 1084 0466 2197      		sbiw r28,64-63
 1085 0468 2296      		adiw r28,65-63
 1086 046a 7FAF      		std Y+63,r23
 1087 046c 2297      		sbiw r28,65-63
 1088 046e 2396      		adiw r28,66-63
 1089 0470 8FAF      		std Y+63,r24
 1090 0472 2397      		sbiw r28,66-63
 1091 0474 2496      		adiw r28,67-63
 1092 0476 9FAF      		std Y+63,r25
 1093 0478 2497      		sbiw r28,67-63
 1094 047a 2496      		adiw r28,64-60
 1095 047c 6CAD      		ldd r22,Y+60
 1096 047e 7DAD      		ldd r23,Y+61
 1097 0480 8EAD      		ldd r24,Y+62
 1098 0482 9FAD      		ldd r25,Y+63
 1099 0484 2497      		sbiw r28,64-60
 1100 0486 0E94 0000 		call __subsf3
 210:mpu6050.c     **** 	factory_trim[1] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[1] - 1.0) / 30.0)));
 1102               	.LM168:
 1103 048a 20E0      		ldi r18,0
 1104 048c 30E0      		ldi r19,0
 1105 048e 40EF      		ldi r20,lo8(-16)
 1106 0490 51E4      		ldi r21,lo8(65)
 1107 0492 2196      		adiw r28,64-63
 1108 0494 6FAF      		std Y+63,r22
 1109 0496 2197      		sbiw r28,64-63
 1110 0498 2296      		adiw r28,65-63
 1111 049a 7FAF      		std Y+63,r23
 1112 049c 2297      		sbiw r28,65-63
 1113 049e 2396      		adiw r28,66-63
 1114 04a0 8FAF      		std Y+63,r24
 1115 04a2 2397      		sbiw r28,66-63
 1116 04a4 2496      		adiw r28,67-63
 1117 04a6 9FAF      		std Y+63,r25
 1118 04a8 2497      		sbiw r28,67-63
 1119 04aa 2496      		adiw r28,64-60
 1120 04ac 6CAD      		ldd r22,Y+60
 1121 04ae 7DAD      		ldd r23,Y+61
 1122 04b0 8EAD      		ldd r24,Y+62
 1123 04b2 9FAD      		ldd r25,Y+63
 1124 04b4 2497      		sbiw r28,64-60
 1125 04b6 0E94 0000 		call __divsf3
 1126 04ba 9B01      		movw r18,r22
 1127 04bc AC01      		movw r20,r24
 1128 04be 6DE2      		ldi r22,lo8(45)
 1129 04c0 7DE2      		ldi r23,lo8(45)
 1130 04c2 8DE2      		ldi r24,lo8(45)
 1131 04c4 90E4      		ldi r25,lo8(64)
 1132 04c6 0E94 0000 		call pow
 210:mpu6050.c     **** 	factory_trim[1] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[1] - 1.0) / 30.0)));
 1134               	.LM169:
 1135 04ca 2BE7      		ldi r18,lo8(123)
 1136 04cc 34E1      		ldi r19,lo8(20)
 1137 04ce 4EEA      		ldi r20,lo8(-82)
 1138 04d0 54E4      		ldi r21,lo8(68)
 1139 04d2 2196      		adiw r28,64-63
 1140 04d4 6FAF      		std Y+63,r22
 1141 04d6 2197      		sbiw r28,64-63
 1142 04d8 2296      		adiw r28,65-63
 1143 04da 7FAF      		std Y+63,r23
 1144 04dc 2297      		sbiw r28,65-63
 1145 04de 2396      		adiw r28,66-63
 1146 04e0 8FAF      		std Y+63,r24
 1147 04e2 2397      		sbiw r28,66-63
 1148 04e4 2496      		adiw r28,67-63
 1149 04e6 9FAF      		std Y+63,r25
 1150 04e8 2497      		sbiw r28,67-63
 1151 04ea 2496      		adiw r28,64-60
 1152 04ec 6CAD      		ldd r22,Y+60
 1153 04ee 7DAD      		ldd r23,Y+61
 1154 04f0 8EAD      		ldd r24,Y+62
 1155 04f2 9FAD      		ldd r25,Y+63
 1156 04f4 2497      		sbiw r28,64-60
 1157 04f6 0E94 0000 		call __mulsf3
 1158 04fa 6983      		std Y+1,r22
 1159 04fc 7A83      		std Y+2,r23
 1160 04fe 8B83      		std Y+3,r24
 1161 0500 9C83      		std Y+4,r25
 211:mpu6050.c     **** 	factory_trim[2] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[2] - 1.0) / 30.0)));
 1163               	.LM170:
 1164 0502 2F2D      		mov r18,r15
 1165 0504 30E0      		ldi r19,0
 1166 0506 50E0      		ldi r21,0
 1167 0508 40E0      		ldi r20,0
 1168 050a 2496      		adiw r28,64-60
 1169 050c 2CAF      		std Y+60,r18
 1170 050e 3DAF      		std Y+61,r19
 1171 0510 4EAF      		std Y+62,r20
 1172 0512 5FAF      		std Y+63,r21
 1173 0514 2497      		sbiw r28,64-60
 1174 0516 CA01      		movw r24,r20
 1175 0518 B901      		movw r22,r18
 1176 051a 0E94 0000 		call __floatunsisf
 211:mpu6050.c     **** 	factory_trim[2] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[2] - 1.0) / 30.0)));
 1178               	.LM171:
 1179 051e 20E0      		ldi r18,0
 1180 0520 30E0      		ldi r19,0
 1181 0522 40E8      		ldi r20,lo8(-128)
 1182 0524 5FE3      		ldi r21,lo8(63)
 1183 0526 2196      		adiw r28,64-63
 1184 0528 6FAF      		std Y+63,r22
 1185 052a 2197      		sbiw r28,64-63
 1186 052c 2296      		adiw r28,65-63
 1187 052e 7FAF      		std Y+63,r23
 1188 0530 2297      		sbiw r28,65-63
 1189 0532 2396      		adiw r28,66-63
 1190 0534 8FAF      		std Y+63,r24
 1191 0536 2397      		sbiw r28,66-63
 1192 0538 2496      		adiw r28,67-63
 1193 053a 9FAF      		std Y+63,r25
 1194 053c 2497      		sbiw r28,67-63
 1195 053e 2496      		adiw r28,64-60
 1196 0540 6CAD      		ldd r22,Y+60
 1197 0542 7DAD      		ldd r23,Y+61
 1198 0544 8EAD      		ldd r24,Y+62
 1199 0546 9FAD      		ldd r25,Y+63
 1200 0548 2497      		sbiw r28,64-60
 1201 054a 0E94 0000 		call __subsf3
 211:mpu6050.c     **** 	factory_trim[2] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[2] - 1.0) / 30.0)));
 1203               	.LM172:
 1204 054e 20E0      		ldi r18,0
 1205 0550 30E0      		ldi r19,0
 1206 0552 40EF      		ldi r20,lo8(-16)
 1207 0554 51E4      		ldi r21,lo8(65)
 1208 0556 2196      		adiw r28,64-63
 1209 0558 6FAF      		std Y+63,r22
 1210 055a 2197      		sbiw r28,64-63
 1211 055c 2296      		adiw r28,65-63
 1212 055e 7FAF      		std Y+63,r23
 1213 0560 2297      		sbiw r28,65-63
 1214 0562 2396      		adiw r28,66-63
 1215 0564 8FAF      		std Y+63,r24
 1216 0566 2397      		sbiw r28,66-63
 1217 0568 2496      		adiw r28,67-63
 1218 056a 9FAF      		std Y+63,r25
 1219 056c 2497      		sbiw r28,67-63
 1220 056e 2496      		adiw r28,64-60
 1221 0570 6CAD      		ldd r22,Y+60
 1222 0572 7DAD      		ldd r23,Y+61
 1223 0574 8EAD      		ldd r24,Y+62
 1224 0576 9FAD      		ldd r25,Y+63
 1225 0578 2497      		sbiw r28,64-60
 1226 057a 0E94 0000 		call __divsf3
 1227 057e 9B01      		movw r18,r22
 1228 0580 AC01      		movw r20,r24
 1229 0582 6DE2      		ldi r22,lo8(45)
 1230 0584 7DE2      		ldi r23,lo8(45)
 1231 0586 8DE2      		ldi r24,lo8(45)
 1232 0588 90E4      		ldi r25,lo8(64)
 1233 058a 0E94 0000 		call pow
 211:mpu6050.c     **** 	factory_trim[2] = (4096.0 * 0.34) * (pow((0.92 / 0.34), (((float)self_test[2] - 1.0) / 30.0)));
 1235               	.LM173:
 1236 058e 2BE7      		ldi r18,lo8(123)
 1237 0590 34E1      		ldi r19,lo8(20)
 1238 0592 4EEA      		ldi r20,lo8(-82)
 1239 0594 54E4      		ldi r21,lo8(68)
 1240 0596 2196      		adiw r28,64-63
 1241 0598 6FAF      		std Y+63,r22
 1242 059a 2197      		sbiw r28,64-63
 1243 059c 2296      		adiw r28,65-63
 1244 059e 7FAF      		std Y+63,r23
 1245 05a0 2297      		sbiw r28,65-63
 1246 05a2 2396      		adiw r28,66-63
 1247 05a4 8FAF      		std Y+63,r24
 1248 05a6 2397      		sbiw r28,66-63
 1249 05a8 2496      		adiw r28,67-63
 1250 05aa 9FAF      		std Y+63,r25
 1251 05ac 2497      		sbiw r28,67-63
 1252 05ae 2496      		adiw r28,64-60
 1253 05b0 6CAD      		ldd r22,Y+60
 1254 05b2 7DAD      		ldd r23,Y+61
 1255 05b4 8EAD      		ldd r24,Y+62
 1256 05b6 9FAD      		ldd r25,Y+63
 1257 05b8 2497      		sbiw r28,64-60
 1258 05ba 0E94 0000 		call __mulsf3
 1259 05be 6D83      		std Y+5,r22
 1260 05c0 7E83      		std Y+6,r23
 1261 05c2 8F83      		std Y+7,r24
 1262 05c4 9887      		std Y+8,r25
 212:mpu6050.c     **** 	factory_trim[3] = (25.0 * 131.0) * (pow(1.046, ((float)self_test[3] - 1.0)));
 1264               	.LM174:
 1265 05c6 8D2D      		mov r24,r13
 1266 05c8 90E0      		ldi r25,0
 1267 05ca B0E0      		ldi r27,0
 1268 05cc A0E0      		ldi r26,0
 1269 05ce 2496      		adiw r28,64-60
 1270 05d0 8CAF      		std Y+60,r24
 1271 05d2 9DAF      		std Y+61,r25
 1272 05d4 AEAF      		std Y+62,r26
 1273 05d6 BFAF      		std Y+63,r27
 1274 05d8 2497      		sbiw r28,64-60
 1275 05da BC01      		movw r22,r24
 1276 05dc CD01      		movw r24,r26
 1277 05de 0E94 0000 		call __floatunsisf
 212:mpu6050.c     **** 	factory_trim[3] = (25.0 * 131.0) * (pow(1.046, ((float)self_test[3] - 1.0)));
 1279               	.LM175:
 1280 05e2 20E0      		ldi r18,0
 1281 05e4 30E0      		ldi r19,0
 1282 05e6 40E8      		ldi r20,lo8(-128)
 1283 05e8 5FE3      		ldi r21,lo8(63)
 1284 05ea 2196      		adiw r28,64-63
 1285 05ec 6FAF      		std Y+63,r22
 1286 05ee 2197      		sbiw r28,64-63
 1287 05f0 2296      		adiw r28,65-63
 1288 05f2 7FAF      		std Y+63,r23
 1289 05f4 2297      		sbiw r28,65-63
 1290 05f6 2396      		adiw r28,66-63
 1291 05f8 8FAF      		std Y+63,r24
 1292 05fa 2397      		sbiw r28,66-63
 1293 05fc 2496      		adiw r28,67-63
 1294 05fe 9FAF      		std Y+63,r25
 1295 0600 2497      		sbiw r28,67-63
 1296 0602 2496      		adiw r28,64-60
 1297 0604 6CAD      		ldd r22,Y+60
 1298 0606 7DAD      		ldd r23,Y+61
 1299 0608 8EAD      		ldd r24,Y+62
 1300 060a 9FAD      		ldd r25,Y+63
 1301 060c 2497      		sbiw r28,64-60
 1302 060e 0E94 0000 		call __subsf3
 212:mpu6050.c     **** 	factory_trim[3] = (25.0 * 131.0) * (pow(1.046, ((float)self_test[3] - 1.0)));
 1304               	.LM176:
 1305 0612 20E0      		ldi r18,0
 1306 0614 30E0      		ldi r19,0
 1307 0616 40EF      		ldi r20,lo8(-16)
 1308 0618 51E4      		ldi r21,lo8(65)
 1309 061a 2196      		adiw r28,64-63
 1310 061c 6FAF      		std Y+63,r22
 1311 061e 2197      		sbiw r28,64-63
 1312 0620 2296      		adiw r28,65-63
 1313 0622 7FAF      		std Y+63,r23
 1314 0624 2297      		sbiw r28,65-63
 1315 0626 2396      		adiw r28,66-63
 1316 0628 8FAF      		std Y+63,r24
 1317 062a 2397      		sbiw r28,66-63
 1318 062c 2496      		adiw r28,67-63
 1319 062e 9FAF      		std Y+63,r25
 1320 0630 2497      		sbiw r28,67-63
 1321 0632 2496      		adiw r28,64-60
 1322 0634 6CAD      		ldd r22,Y+60
 1323 0636 7DAD      		ldd r23,Y+61
 1324 0638 8EAD      		ldd r24,Y+62
 1325 063a 9FAD      		ldd r25,Y+63
 1326 063c 2497      		sbiw r28,64-60
 1327 063e 0E94 0000 		call __divsf3
 1328 0642 9B01      		movw r18,r22
 1329 0644 AC01      		movw r20,r24
 1330 0646 6DE2      		ldi r22,lo8(45)
 1331 0648 7DE2      		ldi r23,lo8(45)
 1332 064a 8DE2      		ldi r24,lo8(45)
 1333 064c 90E4      		ldi r25,lo8(64)
 1334 064e 0E94 0000 		call pow
 212:mpu6050.c     **** 	factory_trim[3] = (25.0 * 131.0) * (pow(1.046, ((float)self_test[3] - 1.0)));
 1336               	.LM177:
 1337 0652 2BE7      		ldi r18,lo8(123)
 1338 0654 34E1      		ldi r19,lo8(20)
 1339 0656 4EEA      		ldi r20,lo8(-82)
 1340 0658 54E4      		ldi r21,lo8(68)
 1341 065a 2196      		adiw r28,64-63
 1342 065c 6FAF      		std Y+63,r22
 1343 065e 2197      		sbiw r28,64-63
 1344 0660 2296      		adiw r28,65-63
 1345 0662 7FAF      		std Y+63,r23
 1346 0664 2297      		sbiw r28,65-63
 1347 0666 2396      		adiw r28,66-63
 1348 0668 8FAF      		std Y+63,r24
 1349 066a 2397      		sbiw r28,66-63
 1350 066c 2496      		adiw r28,67-63
 1351 066e 9FAF      		std Y+63,r25
 1352 0670 2497      		sbiw r28,67-63
 1353 0672 2496      		adiw r28,64-60
 1354 0674 6CAD      		ldd r22,Y+60
 1355 0676 7DAD      		ldd r23,Y+61
 1356 0678 8EAD      		ldd r24,Y+62
 1357 067a 9FAD      		ldd r25,Y+63
 1358 067c 2497      		sbiw r28,64-60
 1359 067e 0E94 0000 		call __mulsf3
 1360 0682 6987      		std Y+9,r22
 1361 0684 7A87      		std Y+10,r23
 1362 0686 8B87      		std Y+11,r24
 1363 0688 9C87      		std Y+12,r25
 213:mpu6050.c     **** 	factory_trim[4] = (-25.0 * 131.0) * (pow(1.046, ((float)self_test[4] - 1.0)));
 1365               	.LM178:
 1366 068a 2E2D      		mov r18,r14
 1367 068c 30E0      		ldi r19,0
 1368 068e 50E0      		ldi r21,0
 1369 0690 40E0      		ldi r20,0
 1370 0692 2496      		adiw r28,64-60
 1371 0694 2CAF      		std Y+60,r18
 1372 0696 3DAF      		std Y+61,r19
 1373 0698 4EAF      		std Y+62,r20
 1374 069a 5FAF      		std Y+63,r21
 1375 069c 2497      		sbiw r28,64-60
 1376 069e CA01      		movw r24,r20
 1377 06a0 B901      		movw r22,r18
 1378 06a2 0E94 0000 		call __floatunsisf
 213:mpu6050.c     **** 	factory_trim[4] = (-25.0 * 131.0) * (pow(1.046, ((float)self_test[4] - 1.0)));
 1380               	.LM179:
 1381 06a6 20E0      		ldi r18,0
 1382 06a8 30E0      		ldi r19,0
 1383 06aa 40E8      		ldi r20,lo8(-128)
 1384 06ac 5FE3      		ldi r21,lo8(63)
 1385 06ae 2196      		adiw r28,64-63
 1386 06b0 6FAF      		std Y+63,r22
 1387 06b2 2197      		sbiw r28,64-63
 1388 06b4 2296      		adiw r28,65-63
 1389 06b6 7FAF      		std Y+63,r23
 1390 06b8 2297      		sbiw r28,65-63
 1391 06ba 2396      		adiw r28,66-63
 1392 06bc 8FAF      		std Y+63,r24
 1393 06be 2397      		sbiw r28,66-63
 1394 06c0 2496      		adiw r28,67-63
 1395 06c2 9FAF      		std Y+63,r25
 1396 06c4 2497      		sbiw r28,67-63
 1397 06c6 2496      		adiw r28,64-60
 1398 06c8 6CAD      		ldd r22,Y+60
 1399 06ca 7DAD      		ldd r23,Y+61
 1400 06cc 8EAD      		ldd r24,Y+62
 1401 06ce 9FAD      		ldd r25,Y+63
 1402 06d0 2497      		sbiw r28,64-60
 1403 06d2 0E94 0000 		call __subsf3
 1404 06d6 9B01      		movw r18,r22
 1405 06d8 AC01      		movw r20,r24
 1406 06da 64E5      		ldi r22,lo8(84)
 1407 06dc 73EE      		ldi r23,lo8(-29)
 1408 06de 85E8      		ldi r24,lo8(-123)
 1409 06e0 9FE3      		ldi r25,lo8(63)
 1410 06e2 0E94 0000 		call pow
 213:mpu6050.c     **** 	factory_trim[4] = (-25.0 * 131.0) * (pow(1.046, ((float)self_test[4] - 1.0)));
 1412               	.LM180:
 1413 06e6 20E0      		ldi r18,0
 1414 06e8 30EB      		ldi r19,lo8(-80)
 1415 06ea 4CE4      		ldi r20,lo8(76)
 1416 06ec 55E4      		ldi r21,lo8(69)
 1417 06ee 2196      		adiw r28,64-63
 1418 06f0 6FAF      		std Y+63,r22
 1419 06f2 2197      		sbiw r28,64-63
 1420 06f4 2296      		adiw r28,65-63
 1421 06f6 7FAF      		std Y+63,r23
 1422 06f8 2297      		sbiw r28,65-63
 1423 06fa 2396      		adiw r28,66-63
 1424 06fc 8FAF      		std Y+63,r24
 1425 06fe 2397      		sbiw r28,66-63
 1426 0700 2496      		adiw r28,67-63
 1427 0702 9FAF      		std Y+63,r25
 1428 0704 2497      		sbiw r28,67-63
 1429 0706 2496      		adiw r28,64-60
 1430 0708 6CAD      		ldd r22,Y+60
 1431 070a 7DAD      		ldd r23,Y+61
 1432 070c 8EAD      		ldd r24,Y+62
 1433 070e 9FAD      		ldd r25,Y+63
 1434 0710 2497      		sbiw r28,64-60
 1435 0712 0E94 0000 		call __mulsf3
 1436 0716 6D87      		std Y+13,r22
 1437 0718 7E87      		std Y+14,r23
 1438 071a 8F87      		std Y+15,r24
 1439 071c 988B      		std Y+16,r25
 214:mpu6050.c     **** 	factory_trim[5] = ( 25.0 * 131.0) * (pow(1.046, ((float)self_test[5] - 1.0)));
 1441               	.LM181:
 1442 071e 802F      		mov r24,r16
 1443 0720 90E0      		ldi r25,0
 1444 0722 B0E0      		ldi r27,0
 1445 0724 A0E0      		ldi r26,0
 1446 0726 2496      		adiw r28,64-60
 1447 0728 8CAF      		std Y+60,r24
 1448 072a 9DAF      		std Y+61,r25
 1449 072c AEAF      		std Y+62,r26
 1450 072e BFAF      		std Y+63,r27
 1451 0730 2497      		sbiw r28,64-60
 1452 0732 BC01      		movw r22,r24
 1453 0734 CD01      		movw r24,r26
 1454 0736 0E94 0000 		call __floatunsisf
 214:mpu6050.c     **** 	factory_trim[5] = ( 25.0 * 131.0) * (pow(1.046, ((float)self_test[5] - 1.0)));
 1456               	.LM182:
 1457 073a 20E0      		ldi r18,0
 1458 073c 30E0      		ldi r19,0
 1459 073e 40E8      		ldi r20,lo8(-128)
 1460 0740 5FE3      		ldi r21,lo8(63)
 1461 0742 2196      		adiw r28,64-63
 1462 0744 6FAF      		std Y+63,r22
 1463 0746 2197      		sbiw r28,64-63
 1464 0748 2296      		adiw r28,65-63
 1465 074a 7FAF      		std Y+63,r23
 1466 074c 2297      		sbiw r28,65-63
 1467 074e 2396      		adiw r28,66-63
 1468 0750 8FAF      		std Y+63,r24
 1469 0752 2397      		sbiw r28,66-63
 1470 0754 2496      		adiw r28,67-63
 1471 0756 9FAF      		std Y+63,r25
 1472 0758 2497      		sbiw r28,67-63
 1473 075a 2496      		adiw r28,64-60
 1474 075c 6CAD      		ldd r22,Y+60
 1475 075e 7DAD      		ldd r23,Y+61
 1476 0760 8EAD      		ldd r24,Y+62
 1477 0762 9FAD      		ldd r25,Y+63
 1478 0764 2497      		sbiw r28,64-60
 1479 0766 0E94 0000 		call __subsf3
 1480 076a 9B01      		movw r18,r22
 1481 076c AC01      		movw r20,r24
 1482 076e 64E5      		ldi r22,lo8(84)
 1483 0770 73EE      		ldi r23,lo8(-29)
 1484 0772 85E8      		ldi r24,lo8(-123)
 1485 0774 9FE3      		ldi r25,lo8(63)
 1486 0776 0E94 0000 		call pow
 214:mpu6050.c     **** 	factory_trim[5] = ( 25.0 * 131.0) * (pow(1.046, ((float)self_test[5] - 1.0)));
 1488               	.LM183:
 1489 077a 20E0      		ldi r18,0
 1490 077c 30EB      		ldi r19,lo8(-80)
 1491 077e 4CE4      		ldi r20,lo8(76)
 1492 0780 55EC      		ldi r21,lo8(-59)
 1493 0782 2196      		adiw r28,64-63
 1494 0784 6FAF      		std Y+63,r22
 1495 0786 2197      		sbiw r28,64-63
 1496 0788 2296      		adiw r28,65-63
 1497 078a 7FAF      		std Y+63,r23
 1498 078c 2297      		sbiw r28,65-63
 1499 078e 2396      		adiw r28,66-63
 1500 0790 8FAF      		std Y+63,r24
 1501 0792 2397      		sbiw r28,66-63
 1502 0794 2496      		adiw r28,67-63
 1503 0796 9FAF      		std Y+63,r25
 1504 0798 2497      		sbiw r28,67-63
 1505 079a 2496      		adiw r28,64-60
 1506 079c 6CAD      		ldd r22,Y+60
 1507 079e 7DAD      		ldd r23,Y+61
 1508 07a0 8EAD      		ldd r24,Y+62
 1509 07a2 9FAD      		ldd r25,Y+63
 1510 07a4 2497      		sbiw r28,64-60
 1511 07a6 0E94 0000 		call __mulsf3
 1512 07aa 698B      		std Y+17,r22
 1513 07ac 7A8B      		std Y+18,r23
 1514 07ae 8B8B      		std Y+19,r24
 1515 07b0 9C8B      		std Y+20,r25
 215:mpu6050.c     **** 
 1517               	.LM184:
 1518 07b2 212F      		mov r18,r17
 1519 07b4 30E0      		ldi r19,0
 1520 07b6 50E0      		ldi r21,0
 1521 07b8 40E0      		ldi r20,0
 1522 07ba 2496      		adiw r28,64-60
 1523 07bc 2CAF      		std Y+60,r18
 1524 07be 3DAF      		std Y+61,r19
 1525 07c0 4EAF      		std Y+62,r20
 1526 07c2 5FAF      		std Y+63,r21
 1527 07c4 2497      		sbiw r28,64-60
 1528 07c6 CA01      		movw r24,r20
 1529 07c8 B901      		movw r22,r18
 1530 07ca 0E94 0000 		call __floatunsisf
 215:mpu6050.c     **** 
 1532               	.LM185:
 1533 07ce 20E0      		ldi r18,0
 1534 07d0 30E0      		ldi r19,0
 1535 07d2 40E8      		ldi r20,lo8(-128)
 1536 07d4 5FE3      		ldi r21,lo8(63)
 1537 07d6 2196      		adiw r28,64-63
 1538 07d8 6FAF      		std Y+63,r22
 1539 07da 2197      		sbiw r28,64-63
 1540 07dc 2296      		adiw r28,65-63
 1541 07de 7FAF      		std Y+63,r23
 1542 07e0 2297      		sbiw r28,65-63
 1543 07e2 2396      		adiw r28,66-63
 1544 07e4 8FAF      		std Y+63,r24
 1545 07e6 2397      		sbiw r28,66-63
 1546 07e8 2496      		adiw r28,67-63
 1547 07ea 9FAF      		std Y+63,r25
 1548 07ec 2497      		sbiw r28,67-63
 1549 07ee 2496      		adiw r28,64-60
 1550 07f0 6CAD      		ldd r22,Y+60
 1551 07f2 7DAD      		ldd r23,Y+61
 1552 07f4 8EAD      		ldd r24,Y+62
 1553 07f6 9FAD      		ldd r25,Y+63
 1554 07f8 2497      		sbiw r28,64-60
 1555 07fa 0E94 0000 		call __subsf3
 1556 07fe 9B01      		movw r18,r22
 1557 0800 AC01      		movw r20,r24
 1558 0802 64E5      		ldi r22,lo8(84)
 1559 0804 73EE      		ldi r23,lo8(-29)
 1560 0806 85E8      		ldi r24,lo8(-123)
 1561 0808 9FE3      		ldi r25,lo8(63)
 1562 080a 0E94 0000 		call pow
 215:mpu6050.c     **** 
 1564               	.LM186:
 1565 080e 20E0      		ldi r18,0
 1566 0810 30EB      		ldi r19,lo8(-80)
 1567 0812 4CE4      		ldi r20,lo8(76)
 1568 0814 55E4      		ldi r21,lo8(69)
 1569 0816 2196      		adiw r28,64-63
 1570 0818 6FAF      		std Y+63,r22
 1571 081a 2197      		sbiw r28,64-63
 1572 081c 2296      		adiw r28,65-63
 1573 081e 7FAF      		std Y+63,r23
 1574 0820 2297      		sbiw r28,65-63
 1575 0822 2396      		adiw r28,66-63
 1576 0824 8FAF      		std Y+63,r24
 1577 0826 2397      		sbiw r28,66-63
 1578 0828 2496      		adiw r28,67-63
 1579 082a 9FAF      		std Y+63,r25
 1580 082c 2497      		sbiw r28,67-63
 1581 082e 2496      		adiw r28,64-60
 1582 0830 6CAD      		ldd r22,Y+60
 1583 0832 7DAD      		ldd r23,Y+61
 1584 0834 8EAD      		ldd r24,Y+62
 1585 0836 9FAD      		ldd r25,Y+63
 1586 0838 2497      		sbiw r28,64-60
 1587 083a 0E94 0000 		call __mulsf3
 1588 083e 6D8B      		std Y+21,r22
 1589 0840 7E8B      		std Y+22,r23
 1590 0842 8F8B      		std Y+23,r24
 1591 0844 988F      		std Y+24,r25
 1592 0846 7E01      		movw r14,r28
 1593 0848 31E3      		ldi r19,49
 1594 084a E30E      		add r14,r19
 1595 084c F11C      		adc r15,__zero_reg__
 1596 084e AE01      		movw r20,r28
 1597 0850 4F5F      		subi r20,-1
 1598 0852 5F4F      		sbci r21,-1
 1599 0854 5A01      		movw r10,r20
 1600 0856 6E01      		movw r12,r28
 1601 0858 59E1      		ldi r21,25
 1602 085a C50E      		add r12,r21
 1603 085c D11C      		adc r13,__zero_reg__
 1604 085e 4E01      		movw r8,r28
 1605 0860 87E3      		ldi r24,55
 1606 0862 880E      		add r8,r24
 1607 0864 911C      		adc r9,__zero_reg__
 1608 0866 8701      		movw r16,r14
 1609               	.L83:
 219:mpu6050.c     **** 	}
 1611               	.LM187:
 1612 0868 D701      		movw r26,r14
 1613 086a 8D91      		ld r24,X+
 1614 086c 7D01      		movw r14,r26
 219:mpu6050.c     **** 	}
 1616               	.LM188:
 1617 086e F501      		movw r30,r10
 1618 0870 4190      		ld r4,Z+
 1619 0872 5190      		ld r5,Z+
 1620 0874 6190      		ld r6,Z+
 1621 0876 7190      		ld r7,Z+
 1622 0878 5F01      		movw r10,r30
 219:mpu6050.c     **** 	}
 1624               	.LM189:
 1625 087a 282F      		mov r18,r24
 1626 087c 30E0      		ldi r19,0
 1627 087e 50E0      		ldi r21,0
 1628 0880 40E0      		ldi r20,0
 1629 0882 2496      		adiw r28,64-60
 1630 0884 2CAF      		std Y+60,r18
 1631 0886 3DAF      		std Y+61,r19
 1632 0888 4EAF      		std Y+62,r20
 1633 088a 5FAF      		std Y+63,r21
 1634 088c 2497      		sbiw r28,64-60
 1635 088e CA01      		movw r24,r20
 1636 0890 B901      		movw r22,r18
 1637 0892 0E94 0000 		call __floatunsisf
 219:mpu6050.c     **** 	}
 1639               	.LM190:
 1640 0896 A301      		movw r20,r6
 1641 0898 9201      		movw r18,r4
 1642 089a 2196      		adiw r28,64-63
 1643 089c 6FAF      		std Y+63,r22
 1644 089e 2197      		sbiw r28,64-63
 1645 08a0 2296      		adiw r28,65-63
 1646 08a2 7FAF      		std Y+63,r23
 1647 08a4 2297      		sbiw r28,65-63
 1648 08a6 2396      		adiw r28,66-63
 1649 08a8 8FAF      		std Y+63,r24
 1650 08aa 2397      		sbiw r28,66-63
 1651 08ac 2496      		adiw r28,67-63
 1652 08ae 9FAF      		std Y+63,r25
 1653 08b0 2497      		sbiw r28,67-63
 1654 08b2 2496      		adiw r28,64-60
 1655 08b4 6CAD      		ldd r22,Y+60
 1656 08b6 7DAD      		ldd r23,Y+61
 1657 08b8 8EAD      		ldd r24,Y+62
 1658 08ba 9FAD      		ldd r25,Y+63
 1659 08bc 2497      		sbiw r28,64-60
 1660 08be 0E94 0000 		call __subsf3
 219:mpu6050.c     **** 	}
 1662               	.LM191:
 1663 08c2 20E0      		ldi r18,0
 1664 08c4 30E0      		ldi r19,0
 1665 08c6 48EC      		ldi r20,lo8(-56)
 1666 08c8 52E4      		ldi r21,lo8(66)
 1667 08ca 2196      		adiw r28,64-63
 1668 08cc 6FAF      		std Y+63,r22
 1669 08ce 2197      		sbiw r28,64-63
 1670 08d0 2296      		adiw r28,65-63
 1671 08d2 7FAF      		std Y+63,r23
 1672 08d4 2297      		sbiw r28,65-63
 1673 08d6 2396      		adiw r28,66-63
 1674 08d8 8FAF      		std Y+63,r24
 1675 08da 2397      		sbiw r28,66-63
 1676 08dc 2496      		adiw r28,67-63
 1677 08de 9FAF      		std Y+63,r25
 1678 08e0 2497      		sbiw r28,67-63
 1679 08e2 2496      		adiw r28,64-60
 1680 08e4 6CAD      		ldd r22,Y+60
 1681 08e6 7DAD      		ldd r23,Y+61
 1682 08e8 8EAD      		ldd r24,Y+62
 1683 08ea 9FAD      		ldd r25,Y+63
 1684 08ec 2497      		sbiw r28,64-60
 1685 08ee 0E94 0000 		call __mulsf3
 219:mpu6050.c     **** 	}
 1687               	.LM192:
 1688 08f2 A301      		movw r20,r6
 1689 08f4 9201      		movw r18,r4
 1690 08f6 2196      		adiw r28,64-63
 1691 08f8 6FAF      		std Y+63,r22
 1692 08fa 2197      		sbiw r28,64-63
 1693 08fc 2296      		adiw r28,65-63
 1694 08fe 7FAF      		std Y+63,r23
 1695 0900 2297      		sbiw r28,65-63
 1696 0902 2396      		adiw r28,66-63
 1697 0904 8FAF      		std Y+63,r24
 1698 0906 2397      		sbiw r28,66-63
 1699 0908 2496      		adiw r28,67-63
 1700 090a 9FAF      		std Y+63,r25
 1701 090c 2497      		sbiw r28,67-63
 1702 090e 2496      		adiw r28,64-60
 1703 0910 6CAD      		ldd r22,Y+60
 1704 0912 7DAD      		ldd r23,Y+61
 1705 0914 8EAD      		ldd r24,Y+62
 1706 0916 9FAD      		ldd r25,Y+63
 1707 0918 2497      		sbiw r28,64-60
 1708 091a 0E94 0000 		call __divsf3
 219:mpu6050.c     **** 	}
 1710               	.LM193:
 1711 091e 20E0      		ldi r18,0
 1712 0920 30E0      		ldi r19,0
 1713 0922 48EC      		ldi r20,lo8(-56)
 1714 0924 52E4      		ldi r21,lo8(66)
 1715 0926 2196      		adiw r28,64-63
 1716 0928 6FAF      		std Y+63,r22
 1717 092a 2197      		sbiw r28,64-63
 1718 092c 2296      		adiw r28,65-63
 1719 092e 7FAF      		std Y+63,r23
 1720 0930 2297      		sbiw r28,65-63
 1721 0932 2396      		adiw r28,66-63
 1722 0934 8FAF      		std Y+63,r24
 1723 0936 2397      		sbiw r28,66-63
 1724 0938 2496      		adiw r28,67-63
 1725 093a 9FAF      		std Y+63,r25
 1726 093c 2497      		sbiw r28,67-63
 1727 093e 2496      		adiw r28,64-60
 1728 0940 6CAD      		ldd r22,Y+60
 1729 0942 7DAD      		ldd r23,Y+61
 1730 0944 8EAD      		ldd r24,Y+62
 1731 0946 9FAD      		ldd r25,Y+63
 1732 0948 2497      		sbiw r28,64-60
 1733 094a 0E94 0000 		call __addsf3
 1734 094e 2496      		adiw r28,64-60
 1735 0950 6CAF      		std Y+60,r22
 1736 0952 7DAF      		std Y+61,r23
 1737 0954 8EAF      		std Y+62,r24
 1738 0956 9FAF      		std Y+63,r25
 1739 0958 2497      		sbiw r28,64-60
 219:mpu6050.c     **** 	}
 1741               	.LM194:
 1742 095a D601      		movw r26,r12
 1743 095c 6D93      		st X+,r22
 1744 095e 7D93      		st X+,r23
 1745 0960 8D93      		st X+,r24
 1746 0962 9D93      		st X+,r25
 1747 0964 6D01      		movw r12,r26
 217:mpu6050.c     **** 	{
 1749               	.LM195:
 1750 0966 E814      		cp r14,r8
 1751 0968 F904      		cpc r15,r9
 1752 096a 01F0      		breq .+2
 1753 096c 00C0      		rjmp .L83
 1754               	.LBE144:
 1755               	.LBE143:
 511:mpu6050.c     **** 	{
 512:mpu6050.c     **** 		return 1;
 513:mpu6050.c     **** 	}
 514:mpu6050.c     **** 
 515:mpu6050.c     **** 	mpu6050_self_test(self_test);
 516:mpu6050.c     **** 	if(!(self_test[0] < 1.0f && self_test[1] < 1.0f &&
 1757               	.LM196:
 1758 096e 20E0      		ldi r18,0
 1759 0970 30E0      		ldi r19,0
 1760 0972 40E8      		ldi r20,lo8(-128)
 1761 0974 5FE3      		ldi r21,lo8(63)
 1762 0976 698D      		ldd r22,Y+25
 1763 0978 7A8D      		ldd r23,Y+26
 1764 097a 8B8D      		ldd r24,Y+27
 1765 097c 9C8D      		ldd r25,Y+28
 1766 097e 0E94 0000 		call __ltsf2
 1767 0982 87FF      		sbrs r24,7
 1768 0984 00C0      		rjmp .L100
 1770               	.LM197:
 1771 0986 20E0      		ldi r18,0
 1772 0988 30E0      		ldi r19,0
 1773 098a 40E8      		ldi r20,lo8(-128)
 1774 098c 5FE3      		ldi r21,lo8(63)
 1775 098e 6D8D      		ldd r22,Y+29
 1776 0990 7E8D      		ldd r23,Y+30
 1777 0992 8F8D      		ldd r24,Y+31
 1778 0994 98A1      		ldd r25,Y+32
 1779 0996 0E94 0000 		call __ltsf2
 1780 099a 87FF      		sbrs r24,7
 1781 099c 00C0      		rjmp .L100
 1783               	.LM198:
 1784 099e 20E0      		ldi r18,0
 1785 09a0 30E0      		ldi r19,0
 1786 09a2 40E8      		ldi r20,lo8(-128)
 1787 09a4 5FE3      		ldi r21,lo8(63)
 1788 09a6 69A1      		ldd r22,Y+33
 1789 09a8 7AA1      		ldd r23,Y+34
 1790 09aa 8BA1      		ldd r24,Y+35
 1791 09ac 9CA1      		ldd r25,Y+36
 1792 09ae 0E94 0000 		call __ltsf2
 1793 09b2 87FF      		sbrs r24,7
 1794 09b4 00C0      		rjmp .L100
 517:mpu6050.c     **** 		self_test[2] < 1.0f && self_test[3] < 1.0f &&
 1796               	.LM199:
 1797 09b6 20E0      		ldi r18,0
 1798 09b8 30E0      		ldi r19,0
 1799 09ba 40E8      		ldi r20,lo8(-128)
 1800 09bc 5FE3      		ldi r21,lo8(63)
 1801 09be 6DA1      		ldd r22,Y+37
 1802 09c0 7EA1      		ldd r23,Y+38
 1803 09c2 8FA1      		ldd r24,Y+39
 1804 09c4 98A5      		ldd r25,Y+40
 1805 09c6 0E94 0000 		call __ltsf2
 1806 09ca 87FF      		sbrs r24,7
 1807 09cc 00C0      		rjmp .L100
 1809               	.LM200:
 1810 09ce 20E0      		ldi r18,0
 1811 09d0 30E0      		ldi r19,0
 1812 09d2 40E8      		ldi r20,lo8(-128)
 1813 09d4 5FE3      		ldi r21,lo8(63)
 1814 09d6 69A5      		ldd r22,Y+41
 1815 09d8 7AA5      		ldd r23,Y+42
 1816 09da 8BA5      		ldd r24,Y+43
 1817 09dc 9CA5      		ldd r25,Y+44
 1818 09de 0E94 0000 		call __ltsf2
 1819 09e2 87FF      		sbrs r24,7
 1820 09e4 00C0      		rjmp .L100
 516:mpu6050.c     **** 		self_test[2] < 1.0f && self_test[3] < 1.0f &&
 1822               	.LM201:
 1823 09e6 20E0      		ldi r18,0
 1824 09e8 30E0      		ldi r19,0
 1825 09ea 40E8      		ldi r20,lo8(-128)
 1826 09ec 5FE3      		ldi r21,lo8(63)
 1827 09ee 6DA5      		ldd r22,Y+45
 1828 09f0 7EA5      		ldd r23,Y+46
 1829 09f2 8FA5      		ldd r24,Y+47
 1830 09f4 98A9      		ldd r25,Y+48
 1831 09f6 0E94 0000 		call __ltsf2
 1832 09fa 87FF      		sbrs r24,7
 1833 09fc 00C0      		rjmp .L100
 1834               	.LBB149:
 1835               	.LBB150:
 229:mpu6050.c     **** 	uint16_t gyro_sensitivity  = 131, accel_sensitivity = 16384;
 1837               	.LM202:
 1838 09fe 8091 0000 		lds r24,.LC0
 1839 0a02 9091 0000 		lds r25,.LC0+1
 1840 0a06 A091 0000 		lds r26,.LC0+2
 1841 0a0a 8DAF      		std Y+61,r24
 1842 0a0c 9EAF      		std Y+62,r25
 1843 0a0e AFAF      		std Y+63,r26
 231:mpu6050.c     **** 
 1845               	.LM203:
 1846 0a10 1982      		std Y+1,__zero_reg__
 1847 0a12 1A82      		std Y+2,__zero_reg__
 1848 0a14 1B82      		std Y+3,__zero_reg__
 1849 0a16 1C82      		std Y+4,__zero_reg__
 1850 0a18 1D82      		std Y+5,__zero_reg__
 1851 0a1a 1E82      		std Y+6,__zero_reg__
 1852 0a1c 1F82      		std Y+7,__zero_reg__
 1853 0a1e 1886      		std Y+8,__zero_reg__
 1854 0a20 1986      		std Y+9,__zero_reg__
 1855 0a22 1A86      		std Y+10,__zero_reg__
 1856 0a24 1B86      		std Y+11,__zero_reg__
 1857 0a26 1C86      		std Y+12,__zero_reg__
 233:mpu6050.c     **** 	_delay_ms(100);
 1859               	.LM204:
 1860 0a28 60E8      		ldi r22,lo8(-128)
 1861 0a2a 8BE6      		ldi r24,lo8(107)
 1862 0a2c 0E94 0000 		call i2c_write_byte.constprop.0
 1863 0a30 88EE      		ldi r24,lo8(-24)
 1864 0a32 93E0      		ldi r25,lo8(3)
 1865               	.LBB151:
 1866               	.LBB152:
 1867               	.LBB153:
 1868               	.LBB154:
 1870               	.Ltext14:
 1872               	.LM205:
 1873 0a34 20E9      		ldi r18,lo8(-112)
 1874 0a36 31E0      		ldi r19,lo8(1)
 1875               	.L91:
 1876 0a38 F901      		movw r30,r18
 1877               	/* #APP */
 1878               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 1879 0a3a 3197      		1: sbiw r30,1
 1880 0a3c 01F4      		brne 1b
 1881               	 ;  0 "" 2
 1882               	/* #NOAPP */
 1883               	.LBE154:
 1884               	.LBE153:
 1886               	.Ltext15:
 1888               	.LM206:
 1889 0a3e 0197      		sbiw r24,1
 1890 0a40 01F4      		brne .L91
 1891               	.LBE152:
 1892               	.LBE151:
 1894               	.Ltext16:
 236:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, PWR_MGMT_2, 0x00);
 1896               	.LM207:
 1897 0a42 61E0      		ldi r22,lo8(1)
 1898 0a44 8BE6      		ldi r24,lo8(107)
 1899 0a46 0E94 0000 		call i2c_write_byte.constprop.0
 237:mpu6050.c     **** 	_delay_ms(200);
 1901               	.LM208:
 1902 0a4a 60E0      		ldi r22,0
 1903 0a4c 8CE6      		ldi r24,lo8(108)
 1904 0a4e 0E94 0000 		call i2c_write_byte.constprop.0
 1905 0a52 80ED      		ldi r24,lo8(-48)
 1906 0a54 97E0      		ldi r25,lo8(7)
 1907               	.LBB155:
 1908               	.LBB156:
 1909               	.LBB157:
 1910               	.LBB158:
 1912               	.Ltext17:
 1914               	.LM209:
 1915 0a56 20E9      		ldi r18,lo8(-112)
 1916 0a58 31E0      		ldi r19,lo8(1)
 1917               	.L92:
 1918 0a5a F901      		movw r30,r18
 1919               	/* #APP */
 1920               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 1921 0a5c 3197      		1: sbiw r30,1
 1922 0a5e 01F4      		brne 1b
 1923               	 ;  0 "" 2
 1924               	/* #NOAPP */
 1925               	.LBE158:
 1926               	.LBE157:
 1928               	.Ltext18:
 1930               	.LM210:
 1931 0a60 0197      		sbiw r24,1
 1932 0a62 01F4      		brne .L92
 1933               	.LBE156:
 1934               	.LBE155:
 1936               	.Ltext19:
 240:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, FIFO_EN, 0x00);
 1938               	.LM211:
 1939 0a64 60E0      		ldi r22,0
 1940 0a66 88E3      		ldi r24,lo8(56)
 1941 0a68 0E94 0000 		call i2c_write_byte.constprop.0
 241:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, PWR_MGMT_1, 0x00);
 1943               	.LM212:
 1944 0a6c 60E0      		ldi r22,0
 1945 0a6e 83E2      		ldi r24,lo8(35)
 1946 0a70 0E94 0000 		call i2c_write_byte.constprop.0
 242:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, I2C_MST_CTRL, 0x00);
 1948               	.LM213:
 1949 0a74 60E0      		ldi r22,0
 1950 0a76 8BE6      		ldi r24,lo8(107)
 1951 0a78 0E94 0000 		call i2c_write_byte.constprop.0
 243:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, USER_CTRL, 0x00);
 1953               	.LM214:
 1954 0a7c 60E0      		ldi r22,0
 1955 0a7e 84E2      		ldi r24,lo8(36)
 1956 0a80 0E94 0000 		call i2c_write_byte.constprop.0
 244:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, USER_CTRL, 0x0C);
 1958               	.LM215:
 1959 0a84 60E0      		ldi r22,0
 1960 0a86 8AE6      		ldi r24,lo8(106)
 1961 0a88 0E94 0000 		call i2c_write_byte.constprop.0
 245:mpu6050.c     **** 	_delay_ms(15);
 1963               	.LM216:
 1964 0a8c 6CE0      		ldi r22,lo8(12)
 1965 0a8e 8AE6      		ldi r24,lo8(106)
 1966 0a90 0E94 0000 		call i2c_write_byte.constprop.0
 1967               	.LBB159:
 1968               	.LBB160:
 1969               	.LBB161:
 1970               	.LBB162:
 1972               	.Ltext20:
 1974               	.LM217:
 1975 0a94 80E6      		ldi r24,lo8(96)
 1976 0a96 9AEE      		ldi r25,lo8(-22)
 1977               	/* #APP */
 1978               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 1979 0a98 0197      		1: sbiw r24,1
 1980 0a9a 01F4      		brne 1b
 1981               	 ;  0 "" 2
 1982               	/* #NOAPP */
 1983               	.LBE162:
 1984               	.LBE161:
 1985               	.LBE160:
 1986               	.LBE159:
 1988               	.Ltext21:
 248:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, SMPLRT_DIV, 0x00);
 1990               	.LM218:
 1991 0a9c 61E0      		ldi r22,lo8(1)
 1992 0a9e 8AE1      		ldi r24,lo8(26)
 1993 0aa0 0E94 0000 		call i2c_write_byte.constprop.0
 249:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, 0x00);
 1995               	.LM219:
 1996 0aa4 60E0      		ldi r22,0
 1997 0aa6 89E1      		ldi r24,lo8(25)
 1998 0aa8 0E94 0000 		call i2c_write_byte.constprop.0
 250:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, 0x00);
 2000               	.LM220:
 2001 0aac 60E0      		ldi r22,0
 2002 0aae 8BE1      		ldi r24,lo8(27)
 2003 0ab0 0E94 0000 		call i2c_write_byte.constprop.0
 251:mpu6050.c     **** 
 2005               	.LM221:
 2006 0ab4 60E0      		ldi r22,0
 2007 0ab6 8CE1      		ldi r24,lo8(28)
 2008 0ab8 0E94 0000 		call i2c_write_byte.constprop.0
 253:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, FIFO_EN, 0x78);
 2010               	.LM222:
 2011 0abc 60E4      		ldi r22,lo8(64)
 2012 0abe 8AE6      		ldi r24,lo8(106)
 2013 0ac0 0E94 0000 		call i2c_write_byte.constprop.0
 254:mpu6050.c     **** 	_delay_ms(80);
 2015               	.LM223:
 2016 0ac4 68E7      		ldi r22,lo8(120)
 2017 0ac6 83E2      		ldi r24,lo8(35)
 2018 0ac8 0E94 0000 		call i2c_write_byte.constprop.0
 2019 0acc 80E2      		ldi r24,lo8(32)
 2020 0ace 93E0      		ldi r25,lo8(3)
 2021               	.LBB163:
 2022               	.LBB164:
 2023               	.LBB165:
 2024               	.LBB166:
 2026               	.Ltext22:
 2028               	.LM224:
 2029 0ad0 20E9      		ldi r18,lo8(-112)
 2030 0ad2 31E0      		ldi r19,lo8(1)
 2031               	.L93:
 2032 0ad4 F901      		movw r30,r18
 2033               	/* #APP */
 2034               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 2035 0ad6 3197      		1: sbiw r30,1
 2036 0ad8 01F4      		brne 1b
 2037               	 ;  0 "" 2
 2038               	/* #NOAPP */
 2039               	.LBE166:
 2040               	.LBE165:
 2042               	.Ltext23:
 2044               	.LM225:
 2045 0ada 0197      		sbiw r24,1
 2046 0adc 01F4      		brne .L93
 2047               	.LBE164:
 2048               	.LBE163:
 2050               	.Ltext24:
 257:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, FIFO_COUNTH, 2, &data[0]);
 2052               	.LM226:
 2053 0ade 60E0      		ldi r22,0
 2054 0ae0 83E2      		ldi r24,lo8(35)
 2055 0ae2 0E94 0000 		call i2c_write_byte.constprop.0
 258:mpu6050.c     **** 	fifo_count = ((uint16_t)data[0] << 8) | data[1];
 2057               	.LM227:
 2058 0ae6 A801      		movw r20,r16
 2059 0ae8 62E0      		ldi r22,lo8(2)
 2060 0aea 82E7      		ldi r24,lo8(114)
 2061 0aec 0E94 0000 		call i2c_read_bytes.constprop.0
 260:mpu6050.c     **** 
 2063               	.LM228:
 2064 0af0 89A9      		ldd r24,Y+49
 2065 0af2 9AA9      		ldd r25,Y+50
 2066 0af4 9827      		eor r25,r24
 2067 0af6 8927      		eor r24,r25
 2068 0af8 9827      		eor r25,r24
 2069 0afa 6CE0      		ldi r22,lo8(12)
 2070 0afc 70E0      		ldi r23,0
 2071 0afe 0E94 0000 		call __udivmodhi4
 2072 0b02 6B01      		movw r12,r22
 227:mpu6050.c     **** 	uint32_t mask = 1UL;
 2074               	.LM229:
 2075 0b04 2C96      		adiw r28,72-60
 2076 0b06 1CAE      		std Y+60,__zero_reg__
 2077 0b08 1DAE      		std Y+61,__zero_reg__
 2078 0b0a 1EAE      		std Y+62,__zero_reg__
 2079 0b0c 1FAE      		std Y+63,__zero_reg__
 2080 0b0e 2C97      		sbiw r28,72-60
 2081 0b10 2896      		adiw r28,68-60
 2082 0b12 1CAE      		std Y+60,__zero_reg__
 2083 0b14 1DAE      		std Y+61,__zero_reg__
 2084 0b16 1EAE      		std Y+62,__zero_reg__
 2085 0b18 1FAE      		std Y+63,__zero_reg__
 2086 0b1a 2897      		sbiw r28,68-60
 2087 0b1c 2496      		adiw r28,64-60
 2088 0b1e 1CAE      		std Y+60,__zero_reg__
 2089 0b20 1DAE      		std Y+61,__zero_reg__
 2090 0b22 1EAE      		std Y+62,__zero_reg__
 2091 0b24 1FAE      		std Y+63,__zero_reg__
 2092 0b26 2497      		sbiw r28,64-60
 227:mpu6050.c     **** 	uint32_t mask = 1UL;
 2094               	.LM230:
 2095 0b28 6896      		adiw r28,84-60
 2096 0b2a 1CAE      		std Y+60,__zero_reg__
 2097 0b2c 1DAE      		std Y+61,__zero_reg__
 2098 0b2e 1EAE      		std Y+62,__zero_reg__
 2099 0b30 1FAE      		std Y+63,__zero_reg__
 2100 0b32 6897      		sbiw r28,84-60
 2101 0b34 6496      		adiw r28,80-60
 2102 0b36 1CAE      		std Y+60,__zero_reg__
 2103 0b38 1DAE      		std Y+61,__zero_reg__
 2104 0b3a 1EAE      		std Y+62,__zero_reg__
 2105 0b3c 1FAE      		std Y+63,__zero_reg__
 2106 0b3e 6497      		sbiw r28,80-60
 2107 0b40 6096      		adiw r28,76-60
 2108 0b42 1CAE      		std Y+60,__zero_reg__
 2109 0b44 1DAE      		std Y+61,__zero_reg__
 2110 0b46 1EAE      		std Y+62,__zero_reg__
 2111 0b48 1FAE      		std Y+63,__zero_reg__
 2112 0b4a 6097      		sbiw r28,76-60
 262:mpu6050.c     **** 	{
 2114               	.LM231:
 2115 0b4c F12C      		mov r15,__zero_reg__
 2116               	.L94:
 262:mpu6050.c     **** 	{
 2118               	.LM232:
 2119 0b4e FC14      		cp r15,r12
 2120 0b50 1D04      		cpc __zero_reg__,r13
 2121 0b52 00F4      		brsh .+2
 2122 0b54 00C0      		rjmp .L95
 280:mpu6050.c     **** 	accel_bias[1] /= (int32_t)packet_count;
 2124               	.LM233:
 2125 0b56 F12C      		mov r15,__zero_reg__
 2126 0b58 E12C      		mov r14,__zero_reg__
 280:mpu6050.c     **** 	accel_bias[1] /= (int32_t)packet_count;
 2128               	.LM234:
 2129 0b5a 2496      		adiw r28,64-60
 2130 0b5c 6CAD      		ldd r22,Y+60
 2131 0b5e 7DAD      		ldd r23,Y+61
 2132 0b60 8EAD      		ldd r24,Y+62
 2133 0b62 9FAD      		ldd r25,Y+63
 2134 0b64 2497      		sbiw r28,64-60
 2135 0b66 A701      		movw r20,r14
 2136 0b68 9601      		movw r18,r12
 2137 0b6a 0E94 0000 		call __divmodsi4
 2138 0b6e 6C96      		adiw r28,88-60
 2139 0b70 2CAF      		std Y+60,r18
 2140 0b72 3DAF      		std Y+61,r19
 2141 0b74 4EAF      		std Y+62,r20
 2142 0b76 5FAF      		std Y+63,r21
 2143 0b78 6C97      		sbiw r28,88-60
 281:mpu6050.c     **** 	accel_bias[2] /= (int32_t)packet_count;
 2145               	.LM235:
 2146 0b7a 2896      		adiw r28,68-60
 2147 0b7c 6CAD      		ldd r22,Y+60
 2148 0b7e 7DAD      		ldd r23,Y+61
 2149 0b80 8EAD      		ldd r24,Y+62
 2150 0b82 9FAD      		ldd r25,Y+63
 2151 0b84 2897      		sbiw r28,68-60
 2152 0b86 A701      		movw r20,r14
 2153 0b88 9601      		movw r18,r12
 2154 0b8a 0E94 0000 		call __divmodsi4
 2155 0b8e A096      		adiw r28,92-60
 2156 0b90 2CAF      		std Y+60,r18
 2157 0b92 3DAF      		std Y+61,r19
 2158 0b94 4EAF      		std Y+62,r20
 2159 0b96 5FAF      		std Y+63,r21
 2160 0b98 A097      		sbiw r28,92-60
 282:mpu6050.c     **** 
 2162               	.LM236:
 2163 0b9a 2C96      		adiw r28,72-60
 2164 0b9c 6CAD      		ldd r22,Y+60
 2165 0b9e 7DAD      		ldd r23,Y+61
 2166 0ba0 8EAD      		ldd r24,Y+62
 2167 0ba2 9FAD      		ldd r25,Y+63
 2168 0ba4 2C97      		sbiw r28,72-60
 2169 0ba6 A701      		movw r20,r14
 2170 0ba8 9601      		movw r18,r12
 2171 0baa 0E94 0000 		call __divmodsi4
 2172 0bae 4901      		movw r8,r18
 2173 0bb0 5A01      		movw r10,r20
 284:mpu6050.c     **** 	gyro_bias[1] /= (int32_t)packet_count;
 2175               	.LM237:
 2176 0bb2 6096      		adiw r28,76-60
 2177 0bb4 6CAD      		ldd r22,Y+60
 2178 0bb6 7DAD      		ldd r23,Y+61
 2179 0bb8 8EAD      		ldd r24,Y+62
 2180 0bba 9FAD      		ldd r25,Y+63
 2181 0bbc 6097      		sbiw r28,76-60
 2182 0bbe A701      		movw r20,r14
 2183 0bc0 9601      		movw r18,r12
 2184 0bc2 0E94 0000 		call __divmodsi4
 2185 0bc6 2496      		adiw r28,64-60
 2186 0bc8 2CAF      		std Y+60,r18
 2187 0bca 3DAF      		std Y+61,r19
 2188 0bcc 4EAF      		std Y+62,r20
 2189 0bce 5FAF      		std Y+63,r21
 2190 0bd0 2497      		sbiw r28,64-60
 285:mpu6050.c     **** 	gyro_bias[2] /= (int32_t)packet_count;
 2192               	.LM238:
 2193 0bd2 6496      		adiw r28,80-60
 2194 0bd4 6CAD      		ldd r22,Y+60
 2195 0bd6 7DAD      		ldd r23,Y+61
 2196 0bd8 8EAD      		ldd r24,Y+62
 2197 0bda 9FAD      		ldd r25,Y+63
 2198 0bdc 6497      		sbiw r28,80-60
 2199 0bde A701      		movw r20,r14
 2200 0be0 9601      		movw r18,r12
 2201 0be2 0E94 0000 		call __divmodsi4
 2202 0be6 2C96      		adiw r28,72-60
 2203 0be8 2CAF      		std Y+60,r18
 2204 0bea 3DAF      		std Y+61,r19
 2205 0bec 4EAF      		std Y+62,r20
 2206 0bee 5FAF      		std Y+63,r21
 2207 0bf0 2C97      		sbiw r28,72-60
 286:mpu6050.c     **** 
 2209               	.LM239:
 2210 0bf2 6896      		adiw r28,84-60
 2211 0bf4 6CAD      		ldd r22,Y+60
 2212 0bf6 7DAD      		ldd r23,Y+61
 2213 0bf8 8EAD      		ldd r24,Y+62
 2214 0bfa 9FAD      		ldd r25,Y+63
 2215 0bfc 6897      		sbiw r28,84-60
 2216 0bfe A701      		movw r20,r14
 2217 0c00 9601      		movw r18,r12
 2218 0c02 0E94 0000 		call __divmodsi4
 2219 0c06 6096      		adiw r28,76-60
 2220 0c08 2CAF      		std Y+60,r18
 2221 0c0a 3DAF      		std Y+61,r19
 2222 0c0c 4EAF      		std Y+62,r20
 2223 0c0e 5FAF      		std Y+63,r21
 2224 0c10 6097      		sbiw r28,76-60
 288:mpu6050.c     **** 	{
 2226               	.LM240:
 2227 0c12 1814      		cp __zero_reg__,r8
 2228 0c14 1904      		cpc __zero_reg__,r9
 2229 0c16 1A04      		cpc __zero_reg__,r10
 2230 0c18 1B04      		cpc __zero_reg__,r11
 2231 0c1a 04F0      		brlt .+2
 2232 0c1c 00C0      		rjmp .L96
 290:mpu6050.c     **** 	}
 2234               	.LM241:
 2235 0c1e D501      		movw r26,r10
 2236 0c20 C401      		movw r24,r8
 2237 0c22 9054      		subi r25,64
 2238 0c24 A109      		sbc r26,__zero_reg__
 2239 0c26 B109      		sbc r27,__zero_reg__
 2240 0c28 2896      		adiw r28,68-60
 2241 0c2a 8CAF      		std Y+60,r24
 2242 0c2c 9DAF      		std Y+61,r25
 2243 0c2e AEAF      		std Y+62,r26
 2244 0c30 BFAF      		std Y+63,r27
 2245 0c32 2897      		sbiw r28,68-60
 2246               	.L97:
 297:mpu6050.c     **** 	data[1] = (-gyro_bias[0] / 4) & 0xFF;
 2248               	.LM242:
 2249 0c34 24E0      		ldi r18,lo8(4)
 2250 0c36 822E      		mov r8,r18
 2251 0c38 912C      		mov r9,__zero_reg__
 2252 0c3a A12C      		mov r10,__zero_reg__
 2253 0c3c B12C      		mov r11,__zero_reg__
 2254 0c3e 2496      		adiw r28,64-60
 2255 0c40 6CAD      		ldd r22,Y+60
 2256 0c42 7DAD      		ldd r23,Y+61
 2257 0c44 8EAD      		ldd r24,Y+62
 2258 0c46 9FAD      		ldd r25,Y+63
 2259 0c48 2497      		sbiw r28,64-60
 2260 0c4a A501      		movw r20,r10
 2261 0c4c 9401      		movw r18,r8
 2262 0c4e 0E94 0000 		call __divmodsi4
 2263 0c52 6901      		movw r12,r18
 2264 0c54 7A01      		movw r14,r20
 2265 0c56 F094      		com r15
 2266 0c58 E094      		com r14
 2267 0c5a D094      		com r13
 2268 0c5c C094      		com r12
 2269 0c5e C11C      		adc r12,__zero_reg__
 2270 0c60 D11C      		adc r13,__zero_reg__
 2271 0c62 E11C      		adc r14,__zero_reg__
 2272 0c64 F11C      		adc r15,__zero_reg__
 297:mpu6050.c     **** 	data[1] = (-gyro_bias[0] / 4) & 0xFF;
 2274               	.LM243:
 2275 0c66 9C2D      		mov r25,r12
 2276 0c68 8D2D      		mov r24,r13
 2277 0c6a 9AAB      		std Y+50,r25
 2278 0c6c 89AB      		std Y+49,r24
 299:mpu6050.c     **** 	data[3] = (-gyro_bias[1] / 4) & 0xFF;
 2280               	.LM244:
 2281 0c6e 2C96      		adiw r28,72-60
 2282 0c70 6CAD      		ldd r22,Y+60
 2283 0c72 7DAD      		ldd r23,Y+61
 2284 0c74 8EAD      		ldd r24,Y+62
 2285 0c76 9FAD      		ldd r25,Y+63
 2286 0c78 2C97      		sbiw r28,72-60
 2287 0c7a A501      		movw r20,r10
 2288 0c7c 9401      		movw r18,r8
 2289 0c7e 0E94 0000 		call __divmodsi4
 2290 0c82 5095      		com r21
 2291 0c84 4095      		com r20
 2292 0c86 3095      		com r19
 2293 0c88 2195      		neg r18
 2294 0c8a 3F4F      		sbci r19,lo8(-1)
 2295 0c8c 4F4F      		sbci r20,lo8(-1)
 2296 0c8e 5F4F      		sbci r21,lo8(-1)
 299:mpu6050.c     **** 	data[3] = (-gyro_bias[1] / 4) & 0xFF;
 2298               	.LM245:
 2299 0c90 3227      		eor r19,r18
 2300 0c92 2327      		eor r18,r19
 2301 0c94 3227      		eor r19,r18
 2302 0c96 3CAB      		std Y+52,r19
 2303 0c98 2BAB      		std Y+51,r18
 301:mpu6050.c     **** 	data[5] = (-gyro_bias[2] / 4) & 0xFF;
 2305               	.LM246:
 2306 0c9a 6096      		adiw r28,76-60
 2307 0c9c 6CAD      		ldd r22,Y+60
 2308 0c9e 7DAD      		ldd r23,Y+61
 2309 0ca0 8EAD      		ldd r24,Y+62
 2310 0ca2 9FAD      		ldd r25,Y+63
 2311 0ca4 6097      		sbiw r28,76-60
 2312 0ca6 A501      		movw r20,r10
 2313 0ca8 9401      		movw r18,r8
 2314 0caa 0E94 0000 		call __divmodsi4
 2315 0cae 5095      		com r21
 2316 0cb0 4095      		com r20
 2317 0cb2 3095      		com r19
 2318 0cb4 2195      		neg r18
 2319 0cb6 3F4F      		sbci r19,lo8(-1)
 2320 0cb8 4F4F      		sbci r20,lo8(-1)
 2321 0cba 5F4F      		sbci r21,lo8(-1)
 301:mpu6050.c     **** 	data[5] = (-gyro_bias[2] / 4) & 0xFF;
 2323               	.LM247:
 2324 0cbc 3227      		eor r19,r18
 2325 0cbe 2327      		eor r18,r19
 2326 0cc0 3227      		eor r19,r18
 2327 0cc2 3EAB      		std Y+54,r19
 2328 0cc4 2DAB      		std Y+53,r18
 297:mpu6050.c     **** 	data[1] = (-gyro_bias[0] / 4) & 0xFF;
 2330               	.LM248:
 2331 0cc6 9927      		clr r25
 2332 0cc8 F7FC      		sbrc r15,7
 2333 0cca 9A95      		dec r25
 2334 0ccc 8F2D      		mov r24,r15
 2335 0cce 7E2D      		mov r23,r14
 2336 0cd0 6D2D      		mov r22,r13
 304:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, XG_OFFS_USRL, data[1]);
 2338               	.LM249:
 2339 0cd2 83E1      		ldi r24,lo8(19)
 2340 0cd4 0E94 0000 		call i2c_write_byte.constprop.0
 305:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YG_OFFS_USRH, data[2]);
 2342               	.LM250:
 2343 0cd8 6AA9      		ldd r22,Y+50
 2344 0cda 84E1      		ldi r24,lo8(20)
 2345 0cdc 0E94 0000 		call i2c_write_byte.constprop.0
 306:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YG_OFFS_USRL, data[3]);
 2347               	.LM251:
 2348 0ce0 6BA9      		ldd r22,Y+51
 2349 0ce2 85E1      		ldi r24,lo8(21)
 2350 0ce4 0E94 0000 		call i2c_write_byte.constprop.0
 307:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZG_OFFS_USRH, data[4]);
 2352               	.LM252:
 2353 0ce8 6CA9      		ldd r22,Y+52
 2354 0cea 86E1      		ldi r24,lo8(22)
 2355 0cec 0E94 0000 		call i2c_write_byte.constprop.0
 308:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZG_OFFS_USRL, data[5]);
 2357               	.LM253:
 2358 0cf0 6DA9      		ldd r22,Y+53
 2359 0cf2 87E1      		ldi r24,lo8(23)
 2360 0cf4 0E94 0000 		call i2c_write_byte.constprop.0
 309:mpu6050.c     **** 
 2362               	.LM254:
 2363 0cf8 6EA9      		ldd r22,Y+54
 2364 0cfa 88E1      		ldi r24,lo8(24)
 2365 0cfc 0E94 0000 		call i2c_write_byte.constprop.0
 311:mpu6050.c     **** 	gyro_dst[1] = (float)gyro_bias[1] / (float)gyro_sensitivity;
 2367               	.LM255:
 2368 0d00 2496      		adiw r28,64-60
 2369 0d02 6CAD      		ldd r22,Y+60
 2370 0d04 7DAD      		ldd r23,Y+61
 2371 0d06 8EAD      		ldd r24,Y+62
 2372 0d08 9FAD      		ldd r25,Y+63
 2373 0d0a 2497      		sbiw r28,64-60
 2374 0d0c 0E94 0000 		call __floatsisf
 311:mpu6050.c     **** 	gyro_dst[1] = (float)gyro_bias[1] / (float)gyro_sensitivity;
 2376               	.LM256:
 2377 0d10 20E0      		ldi r18,0
 2378 0d12 30E0      		ldi r19,0
 2379 0d14 43E0      		ldi r20,lo8(3)
 2380 0d16 53E4      		ldi r21,lo8(67)
 2381 0d18 2196      		adiw r28,64-63
 2382 0d1a 6FAF      		std Y+63,r22
 2383 0d1c 2197      		sbiw r28,64-63
 2384 0d1e 2296      		adiw r28,65-63
 2385 0d20 7FAF      		std Y+63,r23
 2386 0d22 2297      		sbiw r28,65-63
 2387 0d24 2396      		adiw r28,66-63
 2388 0d26 8FAF      		std Y+63,r24
 2389 0d28 2397      		sbiw r28,66-63
 2390 0d2a 2496      		adiw r28,67-63
 2391 0d2c 9FAF      		std Y+63,r25
 2392 0d2e 2497      		sbiw r28,67-63
 2393 0d30 2496      		adiw r28,64-60
 2394 0d32 6CAD      		ldd r22,Y+60
 2395 0d34 7DAD      		ldd r23,Y+61
 2396 0d36 8EAD      		ldd r24,Y+62
 2397 0d38 9FAD      		ldd r25,Y+63
 2398 0d3a 2497      		sbiw r28,64-60
 2399 0d3c 0E94 0000 		call __divsf3
 2400 0d40 6093 0000 		sts gyro_bias,r22
 2401 0d44 7093 0000 		sts gyro_bias+1,r23
 2402 0d48 8093 0000 		sts gyro_bias+2,r24
 2403 0d4c 9093 0000 		sts gyro_bias+3,r25
 312:mpu6050.c     **** 	gyro_dst[2] = (float)gyro_bias[2] / (float)gyro_sensitivity;
 2405               	.LM257:
 2406 0d50 2C96      		adiw r28,72-60
 2407 0d52 6CAD      		ldd r22,Y+60
 2408 0d54 7DAD      		ldd r23,Y+61
 2409 0d56 8EAD      		ldd r24,Y+62
 2410 0d58 9FAD      		ldd r25,Y+63
 2411 0d5a 2C97      		sbiw r28,72-60
 2412 0d5c 0E94 0000 		call __floatsisf
 312:mpu6050.c     **** 	gyro_dst[2] = (float)gyro_bias[2] / (float)gyro_sensitivity;
 2414               	.LM258:
 2415 0d60 20E0      		ldi r18,0
 2416 0d62 30E0      		ldi r19,0
 2417 0d64 43E0      		ldi r20,lo8(3)
 2418 0d66 53E4      		ldi r21,lo8(67)
 2419 0d68 2196      		adiw r28,64-63
 2420 0d6a 6FAF      		std Y+63,r22
 2421 0d6c 2197      		sbiw r28,64-63
 2422 0d6e 2296      		adiw r28,65-63
 2423 0d70 7FAF      		std Y+63,r23
 2424 0d72 2297      		sbiw r28,65-63
 2425 0d74 2396      		adiw r28,66-63
 2426 0d76 8FAF      		std Y+63,r24
 2427 0d78 2397      		sbiw r28,66-63
 2428 0d7a 2496      		adiw r28,67-63
 2429 0d7c 9FAF      		std Y+63,r25
 2430 0d7e 2497      		sbiw r28,67-63
 2431 0d80 2496      		adiw r28,64-60
 2432 0d82 6CAD      		ldd r22,Y+60
 2433 0d84 7DAD      		ldd r23,Y+61
 2434 0d86 8EAD      		ldd r24,Y+62
 2435 0d88 9FAD      		ldd r25,Y+63
 2436 0d8a 2497      		sbiw r28,64-60
 2437 0d8c 0E94 0000 		call __divsf3
 2438 0d90 6093 0000 		sts gyro_bias+4,r22
 2439 0d94 7093 0000 		sts gyro_bias+4+1,r23
 2440 0d98 8093 0000 		sts gyro_bias+4+2,r24
 2441 0d9c 9093 0000 		sts gyro_bias+4+3,r25
 313:mpu6050.c     **** 
 2443               	.LM259:
 2444 0da0 6096      		adiw r28,76-60
 2445 0da2 6CAD      		ldd r22,Y+60
 2446 0da4 7DAD      		ldd r23,Y+61
 2447 0da6 8EAD      		ldd r24,Y+62
 2448 0da8 9FAD      		ldd r25,Y+63
 2449 0daa 6097      		sbiw r28,76-60
 2450 0dac 0E94 0000 		call __floatsisf
 313:mpu6050.c     **** 
 2452               	.LM260:
 2453 0db0 20E0      		ldi r18,0
 2454 0db2 30E0      		ldi r19,0
 2455 0db4 43E0      		ldi r20,lo8(3)
 2456 0db6 53E4      		ldi r21,lo8(67)
 2457 0db8 2196      		adiw r28,64-63
 2458 0dba 6FAF      		std Y+63,r22
 2459 0dbc 2197      		sbiw r28,64-63
 2460 0dbe 2296      		adiw r28,65-63
 2461 0dc0 7FAF      		std Y+63,r23
 2462 0dc2 2297      		sbiw r28,65-63
 2463 0dc4 2396      		adiw r28,66-63
 2464 0dc6 8FAF      		std Y+63,r24
 2465 0dc8 2397      		sbiw r28,66-63
 2466 0dca 2496      		adiw r28,67-63
 2467 0dcc 9FAF      		std Y+63,r25
 2468 0dce 2497      		sbiw r28,67-63
 2469 0dd0 2496      		adiw r28,64-60
 2470 0dd2 6CAD      		ldd r22,Y+60
 2471 0dd4 7DAD      		ldd r23,Y+61
 2472 0dd6 8EAD      		ldd r24,Y+62
 2473 0dd8 9FAD      		ldd r25,Y+63
 2474 0dda 2497      		sbiw r28,64-60
 2475 0ddc 0E94 0000 		call __divsf3
 2476 0de0 6093 0000 		sts gyro_bias+8,r22
 2477 0de4 7093 0000 		sts gyro_bias+8+1,r23
 2478 0de8 8093 0000 		sts gyro_bias+8+2,r24
 2479 0dec 9093 0000 		sts gyro_bias+8+3,r25
 315:mpu6050.c     **** 	accel_bias_reg[0] = (int16_t) ((int16_t)data[0] << 8) | data[1];
 2481               	.LM261:
 2482 0df0 A801      		movw r20,r16
 2483 0df2 62E0      		ldi r22,lo8(2)
 2484 0df4 86E0      		ldi r24,lo8(6)
 2485 0df6 0E94 0000 		call i2c_read_bytes.constprop.0
 316:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, YA_OFFSET_H, 2, &data[0]);
 2487               	.LM262:
 2488 0dfa 49A8      		ldd r4,Y+49
 2489 0dfc 5AA8      		ldd r5,Y+50
 2490 0dfe 5424      		eor r5,r4
 2491 0e00 4524      		eor r4,r5
 2492 0e02 5424      		eor r5,r4
 2493 0e04 052C      		mov __tmp_reg__,r5
 2494 0e06 000C      		lsl r0
 2495 0e08 6608      		sbc r6,r6
 2496 0e0a 7708      		sbc r7,r7
 316:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, YA_OFFSET_H, 2, &data[0]);
 2498               	.LM263:
 2499 0e0c 4982      		std Y+1,r4
 2500 0e0e 5A82      		std Y+2,r5
 2501 0e10 6B82      		std Y+3,r6
 2502 0e12 7C82      		std Y+4,r7
 317:mpu6050.c     **** 	accel_bias_reg[1] = (int16_t) ((int16_t)data[0] << 8) | data[1];
 2504               	.LM264:
 2505 0e14 A801      		movw r20,r16
 2506 0e16 62E0      		ldi r22,lo8(2)
 2507 0e18 88E0      		ldi r24,lo8(8)
 2508 0e1a 0E94 0000 		call i2c_read_bytes.constprop.0
 318:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, ZA_OFFSET_H, 2, &data[0]);
 2510               	.LM265:
 2511 0e1e 89A8      		ldd r8,Y+49
 2512 0e20 9AA8      		ldd r9,Y+50
 2513 0e22 9824      		eor r9,r8
 2514 0e24 8924      		eor r8,r9
 2515 0e26 9824      		eor r9,r8
 2516 0e28 092C      		mov __tmp_reg__,r9
 2517 0e2a 000C      		lsl r0
 2518 0e2c AA08      		sbc r10,r10
 2519 0e2e BB08      		sbc r11,r11
 318:mpu6050.c     **** 	i2c_read_bytes(MPU6050_ADDRESS, ZA_OFFSET_H, 2, &data[0]);
 2521               	.LM266:
 2522 0e30 8D82      		std Y+5,r8
 2523 0e32 9E82      		std Y+6,r9
 2524 0e34 AF82      		std Y+7,r10
 2525 0e36 B886      		std Y+8,r11
 319:mpu6050.c     **** 	accel_bias_reg[2] = (int16_t) ((int16_t)data[0] << 8) | data[1];
 2527               	.LM267:
 2528 0e38 A801      		movw r20,r16
 2529 0e3a 62E0      		ldi r22,lo8(2)
 2530 0e3c 8AE0      		ldi r24,lo8(10)
 2531 0e3e 0E94 0000 		call i2c_read_bytes.constprop.0
 320:mpu6050.c     **** 
 2533               	.LM268:
 2534 0e42 C9A8      		ldd r12,Y+49
 2535 0e44 DAA8      		ldd r13,Y+50
 2536 0e46 DC24      		eor r13,r12
 2537 0e48 CD24      		eor r12,r13
 2538 0e4a DC24      		eor r13,r12
 2539 0e4c C601      		movw r24,r12
 2540 0e4e DD0C      		lsl r13
 2541 0e50 AA0B      		sbc r26,r26
 2542 0e52 BB0B      		sbc r27,r27
 2543 0e54 2496      		adiw r28,64-60
 2544 0e56 8CAF      		std Y+60,r24
 2545 0e58 9DAF      		std Y+61,r25
 2546 0e5a AEAF      		std Y+62,r26
 2547 0e5c BFAF      		std Y+63,r27
 2548 0e5e 2497      		sbiw r28,64-60
 320:mpu6050.c     **** 
 2550               	.LM269:
 2551 0e60 8987      		std Y+9,r24
 2552 0e62 9A87      		std Y+10,r25
 2553 0e64 AB87      		std Y+11,r26
 2554 0e66 BC87      		std Y+12,r27
 2555 0e68 FE01      		movw r30,r28
 2556 0e6a 3196      		adiw r30,1
 2557 0e6c DE01      		movw r26,r28
 2558 0e6e DD96      		adiw r26,61
 2559 0e70 CE01      		movw r24,r28
 2560 0e72 0D96      		adiw r24,13
 326:mpu6050.c     **** 		}
 2562               	.LM270:
 2563 0e74 21E0      		ldi r18,lo8(1)
 2564               	.L99:
 324:mpu6050.c     **** 		{
 2566               	.LM271:
 2567 0e76 4191      		ld r20,Z+
 2568 0e78 5191      		ld r21,Z+
 2569 0e7a 6191      		ld r22,Z+
 2570 0e7c 7191      		ld r23,Z+
 324:mpu6050.c     **** 		{
 2572               	.LM272:
 2573 0e7e 40FD      		sbrc r20,0
 326:mpu6050.c     **** 		}
 2575               	.LM273:
 2576 0e80 2C93      		st X,r18
 2577               	.L98:
 322:mpu6050.c     **** 	{
 2579               	.LM274:
 2580 0e82 1196      		adiw r26,1
 2581 0e84 E817      		cp r30,r24
 2582 0e86 F907      		cpc r31,r25
 2583 0e88 01F4      		brne .L99
 330:mpu6050.c     **** 	accel_bias_reg[1] -= (accel_bias[1] / 8);
 2585               	.LM275:
 2586 0e8a 88E0      		ldi r24,lo8(8)
 2587 0e8c C82E      		mov r12,r24
 2588 0e8e D12C      		mov r13,__zero_reg__
 2589 0e90 E12C      		mov r14,__zero_reg__
 2590 0e92 F12C      		mov r15,__zero_reg__
 2591 0e94 6C96      		adiw r28,88-60
 2592 0e96 6CAD      		ldd r22,Y+60
 2593 0e98 7DAD      		ldd r23,Y+61
 2594 0e9a 8EAD      		ldd r24,Y+62
 2595 0e9c 9FAD      		ldd r25,Y+63
 2596 0e9e 6C97      		sbiw r28,88-60
 2597 0ea0 A701      		movw r20,r14
 2598 0ea2 9601      		movw r18,r12
 2599 0ea4 0E94 0000 		call __divmodsi4
 330:mpu6050.c     **** 	accel_bias_reg[1] -= (accel_bias[1] / 8);
 2601               	.LM276:
 2602 0ea8 421A      		sub r4,r18
 2603 0eaa 530A      		sbc r5,r19
 2604 0eac 640A      		sbc r6,r20
 2605 0eae 750A      		sbc r7,r21
 331:mpu6050.c     **** 	accel_bias_reg[2] -= (accel_bias[2] / 8);
 2607               	.LM277:
 2608 0eb0 A096      		adiw r28,92-60
 2609 0eb2 6CAD      		ldd r22,Y+60
 2610 0eb4 7DAD      		ldd r23,Y+61
 2611 0eb6 8EAD      		ldd r24,Y+62
 2612 0eb8 9FAD      		ldd r25,Y+63
 2613 0eba A097      		sbiw r28,92-60
 2614 0ebc A701      		movw r20,r14
 2615 0ebe 9601      		movw r18,r12
 2616 0ec0 0E94 0000 		call __divmodsi4
 331:mpu6050.c     **** 	accel_bias_reg[2] -= (accel_bias[2] / 8);
 2618               	.LM278:
 2619 0ec4 821A      		sub r8,r18
 2620 0ec6 930A      		sbc r9,r19
 2621 0ec8 A40A      		sbc r10,r20
 2622 0eca B50A      		sbc r11,r21
 332:mpu6050.c     **** 
 2624               	.LM279:
 2625 0ecc 2896      		adiw r28,68-60
 2626 0ece 6CAD      		ldd r22,Y+60
 2627 0ed0 7DAD      		ldd r23,Y+61
 2628 0ed2 8EAD      		ldd r24,Y+62
 2629 0ed4 9FAD      		ldd r25,Y+63
 2630 0ed6 2897      		sbiw r28,68-60
 2631 0ed8 A701      		movw r20,r14
 2632 0eda 9601      		movw r18,r12
 2633 0edc 0E94 0000 		call __divmodsi4
 332:mpu6050.c     **** 
 2635               	.LM280:
 2636 0ee0 2496      		adiw r28,64-60
 2637 0ee2 CCAC      		ldd r12,Y+60
 2638 0ee4 DDAC      		ldd r13,Y+61
 2639 0ee6 EEAC      		ldd r14,Y+62
 2640 0ee8 FFAC      		ldd r15,Y+63
 2641 0eea 2497      		sbiw r28,64-60
 2642 0eec C21A      		sub r12,r18
 2643 0eee D30A      		sbc r13,r19
 2644 0ef0 E40A      		sbc r14,r20
 2645 0ef2 F50A      		sbc r15,r21
 334:mpu6050.c     **** 	data[1] = (accel_bias_reg[0]) & 0xFF;
 2647               	.LM281:
 2648 0ef4 9927      		clr r25
 2649 0ef6 77FC      		sbrc r7,7
 2650 0ef8 9A95      		dec r25
 2651 0efa 872D      		mov r24,r7
 2652 0efc 762D      		mov r23,r6
 2653 0efe 652D      		mov r22,r5
 334:mpu6050.c     **** 	data[1] = (accel_bias_reg[0]) & 0xFF;
 2655               	.LM282:
 2656 0f00 69AB      		std Y+49,r22
 336:mpu6050.c     **** 	data[2] = (accel_bias_reg[1] >> 8) & 0xFF;
 2658               	.LM283:
 2659 0f02 2DAD      		ldd r18,Y+61
 2660 0f04 422A      		or r4,r18
 2661 0f06 4AAA      		std Y+50,r4
 337:mpu6050.c     **** 	data[3] = (accel_bias_reg[1]) & 0xFF;
 2663               	.LM284:
 2664 0f08 9BAA      		std Y+51,r9
 339:mpu6050.c     **** 	data[4] = (accel_bias_reg[2] >> 8) & 0xFF;
 2666               	.LM285:
 2667 0f0a 2EAD      		ldd r18,Y+62
 2668 0f0c 822A      		or r8,r18
 2669 0f0e 8CAA      		std Y+52,r8
 340:mpu6050.c     **** 	data[5] = (accel_bias_reg[2]) & 0xFF;
 2671               	.LM286:
 2672 0f10 DDAA      		std Y+53,r13
 342:mpu6050.c     **** 
 2674               	.LM287:
 2675 0f12 2FAD      		ldd r18,Y+63
 2676 0f14 C22A      		or r12,r18
 2677 0f16 CEAA      		std Y+54,r12
 344:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, XA_OFFSET_L_TC, data[1]);
 2679               	.LM288:
 2680 0f18 86E0      		ldi r24,lo8(6)
 2681 0f1a 0E94 0000 		call i2c_write_byte.constprop.0
 345:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YA_OFFSET_H, data[2]);
 2683               	.LM289:
 2684 0f1e 6AA9      		ldd r22,Y+50
 2685 0f20 87E0      		ldi r24,lo8(7)
 2686 0f22 0E94 0000 		call i2c_write_byte.constprop.0
 346:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, YA_OFFSET_L_TC, data[3]);
 2688               	.LM290:
 2689 0f26 6BA9      		ldd r22,Y+51
 2690 0f28 88E0      		ldi r24,lo8(8)
 2691 0f2a 0E94 0000 		call i2c_write_byte.constprop.0
 347:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZA_OFFSET_H, data[4]);
 2693               	.LM291:
 2694 0f2e 6CA9      		ldd r22,Y+52
 2695 0f30 89E0      		ldi r24,lo8(9)
 2696 0f32 0E94 0000 		call i2c_write_byte.constprop.0
 348:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ZA_OFFSET_L_TC, data[5]);
 2698               	.LM292:
 2699 0f36 6DA9      		ldd r22,Y+53
 2700 0f38 8AE0      		ldi r24,lo8(10)
 2701 0f3a 0E94 0000 		call i2c_write_byte.constprop.0
 349:mpu6050.c     **** 
 2703               	.LM293:
 2704 0f3e 6EA9      		ldd r22,Y+54
 2705 0f40 8BE0      		ldi r24,lo8(11)
 2706 0f42 0E94 0000 		call i2c_write_byte.constprop.0
 351:mpu6050.c     **** 	accel_dst[1] = (float)accel_bias[1] / (float)accel_sensitivity;
 2708               	.LM294:
 2709 0f46 6C96      		adiw r28,88-60
 2710 0f48 6CAD      		ldd r22,Y+60
 2711 0f4a 7DAD      		ldd r23,Y+61
 2712 0f4c 8EAD      		ldd r24,Y+62
 2713 0f4e 9FAD      		ldd r25,Y+63
 2714 0f50 6C97      		sbiw r28,88-60
 2715 0f52 0E94 0000 		call __floatsisf
 351:mpu6050.c     **** 	accel_dst[1] = (float)accel_bias[1] / (float)accel_sensitivity;
 2717               	.LM295:
 2718 0f56 20E0      		ldi r18,0
 2719 0f58 30E0      		ldi r19,0
 2720 0f5a 40E8      		ldi r20,lo8(-128)
 2721 0f5c 58E3      		ldi r21,lo8(56)
 2722 0f5e 2196      		adiw r28,64-63
 2723 0f60 6FAF      		std Y+63,r22
 2724 0f62 2197      		sbiw r28,64-63
 2725 0f64 2296      		adiw r28,65-63
 2726 0f66 7FAF      		std Y+63,r23
 2727 0f68 2297      		sbiw r28,65-63
 2728 0f6a 2396      		adiw r28,66-63
 2729 0f6c 8FAF      		std Y+63,r24
 2730 0f6e 2397      		sbiw r28,66-63
 2731 0f70 2496      		adiw r28,67-63
 2732 0f72 9FAF      		std Y+63,r25
 2733 0f74 2497      		sbiw r28,67-63
 2734 0f76 2496      		adiw r28,64-60
 2735 0f78 6CAD      		ldd r22,Y+60
 2736 0f7a 7DAD      		ldd r23,Y+61
 2737 0f7c 8EAD      		ldd r24,Y+62
 2738 0f7e 9FAD      		ldd r25,Y+63
 2739 0f80 2497      		sbiw r28,64-60
 2740 0f82 0E94 0000 		call __mulsf3
 2741 0f86 6093 0000 		sts accel_bias,r22
 2742 0f8a 7093 0000 		sts accel_bias+1,r23
 2743 0f8e 8093 0000 		sts accel_bias+2,r24
 2744 0f92 9093 0000 		sts accel_bias+3,r25
 352:mpu6050.c     **** 	accel_dst[2] = (float)accel_bias[2] / (float)accel_sensitivity;
 2746               	.LM296:
 2747 0f96 A096      		adiw r28,92-60
 2748 0f98 6CAD      		ldd r22,Y+60
 2749 0f9a 7DAD      		ldd r23,Y+61
 2750 0f9c 8EAD      		ldd r24,Y+62
 2751 0f9e 9FAD      		ldd r25,Y+63
 2752 0fa0 A097      		sbiw r28,92-60
 2753 0fa2 0E94 0000 		call __floatsisf
 352:mpu6050.c     **** 	accel_dst[2] = (float)accel_bias[2] / (float)accel_sensitivity;
 2755               	.LM297:
 2756 0fa6 20E0      		ldi r18,0
 2757 0fa8 30E0      		ldi r19,0
 2758 0faa 40E8      		ldi r20,lo8(-128)
 2759 0fac 58E3      		ldi r21,lo8(56)
 2760 0fae 2196      		adiw r28,64-63
 2761 0fb0 6FAF      		std Y+63,r22
 2762 0fb2 2197      		sbiw r28,64-63
 2763 0fb4 2296      		adiw r28,65-63
 2764 0fb6 7FAF      		std Y+63,r23
 2765 0fb8 2297      		sbiw r28,65-63
 2766 0fba 2396      		adiw r28,66-63
 2767 0fbc 8FAF      		std Y+63,r24
 2768 0fbe 2397      		sbiw r28,66-63
 2769 0fc0 2496      		adiw r28,67-63
 2770 0fc2 9FAF      		std Y+63,r25
 2771 0fc4 2497      		sbiw r28,67-63
 2772 0fc6 2496      		adiw r28,64-60
 2773 0fc8 6CAD      		ldd r22,Y+60
 2774 0fca 7DAD      		ldd r23,Y+61
 2775 0fcc 8EAD      		ldd r24,Y+62
 2776 0fce 9FAD      		ldd r25,Y+63
 2777 0fd0 2497      		sbiw r28,64-60
 2778 0fd2 0E94 0000 		call __mulsf3
 2779 0fd6 6093 0000 		sts accel_bias+4,r22
 2780 0fda 7093 0000 		sts accel_bias+4+1,r23
 2781 0fde 8093 0000 		sts accel_bias+4+2,r24
 2782 0fe2 9093 0000 		sts accel_bias+4+3,r25
 353:mpu6050.c     **** }
 2784               	.LM298:
 2785 0fe6 2896      		adiw r28,68-60
 2786 0fe8 6CAD      		ldd r22,Y+60
 2787 0fea 7DAD      		ldd r23,Y+61
 2788 0fec 8EAD      		ldd r24,Y+62
 2789 0fee 9FAD      		ldd r25,Y+63
 2790 0ff0 2897      		sbiw r28,68-60
 2791 0ff2 0E94 0000 		call __floatsisf
 353:mpu6050.c     **** }
 2793               	.LM299:
 2794 0ff6 20E0      		ldi r18,0
 2795 0ff8 30E0      		ldi r19,0
 2796 0ffa 40E8      		ldi r20,lo8(-128)
 2797 0ffc 58E3      		ldi r21,lo8(56)
 2798 0ffe 2196      		adiw r28,64-63
 2799 1000 6FAF      		std Y+63,r22
 2800 1002 2197      		sbiw r28,64-63
 2801 1004 2296      		adiw r28,65-63
 2802 1006 7FAF      		std Y+63,r23
 2803 1008 2297      		sbiw r28,65-63
 2804 100a 2396      		adiw r28,66-63
 2805 100c 8FAF      		std Y+63,r24
 2806 100e 2397      		sbiw r28,66-63
 2807 1010 2496      		adiw r28,67-63
 2808 1012 9FAF      		std Y+63,r25
 2809 1014 2497      		sbiw r28,67-63
 2810 1016 2496      		adiw r28,64-60
 2811 1018 6CAD      		ldd r22,Y+60
 2812 101a 7DAD      		ldd r23,Y+61
 2813 101c 8EAD      		ldd r24,Y+62
 2814 101e 9FAD      		ldd r25,Y+63
 2815 1020 2497      		sbiw r28,64-60
 2816 1022 0E94 0000 		call __mulsf3
 2817 1026 6093 0000 		sts accel_bias+8,r22
 2818 102a 7093 0000 		sts accel_bias+8+1,r23
 2819 102e 8093 0000 		sts accel_bias+8+2,r24
 2820 1032 9093 0000 		sts accel_bias+8+3,r25
 2821               	.LBE150:
 2822               	.LBE149:
 2823               	.LBB169:
 2824               	.LBB170:
 359:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, CONFIG, 0x03);
 2826               	.LM300:
 2827 1036 61E0      		ldi r22,lo8(1)
 2828 1038 8BE6      		ldi r24,lo8(107)
 2829 103a 0E94 0000 		call i2c_write_byte.constprop.0
 360:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, SMPLRT_DIV, 0x04);
 2831               	.LM301:
 2832 103e 63E0      		ldi r22,lo8(3)
 2833 1040 8AE1      		ldi r24,lo8(26)
 2834 1042 0E94 0000 		call i2c_write_byte.constprop.0
 361:mpu6050.c     **** 	c = i2c_read_byte(MPU6050_ADDRESS, GYRO_CONFIG);
 2836               	.LM302:
 2837 1046 64E0      		ldi r22,lo8(4)
 2838 1048 89E1      		ldi r24,lo8(25)
 2839 104a 0E94 0000 		call i2c_write_byte.constprop.0
 362:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, c & ~0xE0);
 2841               	.LM303:
 2842 104e 8BE1      		ldi r24,lo8(27)
 2843 1050 0E94 0000 		call i2c_read_byte.constprop.0
 2844 1054 182F      		mov r17,r24
 363:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, c & ~0x18);
 2846               	.LM304:
 2847 1056 682F      		mov r22,r24
 2848 1058 6F71      		andi r22,lo8(31)
 2849 105a 8BE1      		ldi r24,lo8(27)
 2850 105c 0E94 0000 		call i2c_write_byte.constprop.0
 364:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, GYRO_CONFIG, c | G_SCALE << 3);
 2852               	.LM305:
 2853 1060 612F      		mov r22,r17
 2854 1062 677E      		andi r22,lo8(-25)
 2855 1064 8BE1      		ldi r24,lo8(27)
 2856 1066 0E94 0000 		call i2c_write_byte.constprop.0
 365:mpu6050.c     **** 	c = i2c_read_byte(MPU6050_ADDRESS, ACCEL_CONFIG);
 2858               	.LM306:
 2859 106a 612F      		mov r22,r17
 2860 106c 8BE1      		ldi r24,lo8(27)
 2861 106e 0E94 0000 		call i2c_write_byte.constprop.0
 366:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, c & ~0xE0);
 2863               	.LM307:
 2864 1072 8CE1      		ldi r24,lo8(28)
 2865 1074 0E94 0000 		call i2c_read_byte.constprop.0
 2866 1078 182F      		mov r17,r24
 367:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, c & ~0x18);
 2868               	.LM308:
 2869 107a 682F      		mov r22,r24
 2870 107c 6F71      		andi r22,lo8(31)
 2871 107e 8CE1      		ldi r24,lo8(28)
 2872 1080 0E94 0000 		call i2c_write_byte.constprop.0
 368:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, ACCEL_CONFIG, c | A_SCALE << 3);
 2874               	.LM309:
 2875 1084 612F      		mov r22,r17
 2876 1086 677E      		andi r22,lo8(-25)
 2877 1088 8CE1      		ldi r24,lo8(28)
 2878 108a 0E94 0000 		call i2c_write_byte.constprop.0
 369:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, INT_PIN_CFG, 0x22);
 2880               	.LM310:
 2881 108e 612F      		mov r22,r17
 2882 1090 8CE1      		ldi r24,lo8(28)
 2883 1092 0E94 0000 		call i2c_write_byte.constprop.0
 370:mpu6050.c     **** 	i2c_write_byte(MPU6050_ADDRESS, INT_ENABLE, 0x01);
 2885               	.LM311:
 2886 1096 62E2      		ldi r22,lo8(34)
 2887 1098 87E3      		ldi r24,lo8(55)
 2888 109a 0E94 0000 		call i2c_write_byte.constprop.0
 371:mpu6050.c     **** }
 2890               	.LM312:
 2891 109e 61E0      		ldi r22,lo8(1)
 2892 10a0 88E3      		ldi r24,lo8(56)
 2893 10a2 0E94 0000 		call i2c_write_byte.constprop.0
 2894               	.LBE170:
 2895               	.LBE169:
 518:mpu6050.c     **** 		self_test[4] < 1.0f && self_test[5] < 1.0f))
 519:mpu6050.c     **** 	{
 520:mpu6050.c     **** 		return 1;
 521:mpu6050.c     **** 	}
 522:mpu6050.c     **** 
 523:mpu6050.c     **** 	mpu6050_calibrate(gyro_bias, accel_bias);
 524:mpu6050.c     **** 	mpu6050_prepare();
 525:mpu6050.c     **** 	return 0;
 2897               	.LM313:
 2898 10a6 80E0      		ldi r24,0
 2899               	.L80:
 2900               	/* epilogue start */
 2901               	.LBE142:
 2902               	.LBE141:
 526:mpu6050.c     **** }
 2904               	.LM314:
 2905 10a8 C15A      		subi r28,-95
 2906 10aa DF4F      		sbci r29,-1
 2907 10ac 0FB6      		in __tmp_reg__,__SREG__
 2908 10ae F894      		cli
 2909 10b0 DEBF      		out __SP_H__,r29
 2910 10b2 0FBE      		out __SREG__,__tmp_reg__
 2911 10b4 CDBF      		out __SP_L__,r28
 2912 10b6 DF91      		pop r29
 2913 10b8 CF91      		pop r28
 2914 10ba 1F91      		pop r17
 2915 10bc 0F91      		pop r16
 2916 10be FF90      		pop r15
 2917 10c0 EF90      		pop r14
 2918 10c2 DF90      		pop r13
 2919 10c4 CF90      		pop r12
 2920 10c6 BF90      		pop r11
 2921 10c8 AF90      		pop r10
 2922 10ca 9F90      		pop r9
 2923 10cc 8F90      		pop r8
 2924 10ce 7F90      		pop r7
 2925 10d0 6F90      		pop r6
 2926 10d2 5F90      		pop r5
 2927 10d4 4F90      		pop r4
 2928 10d6 0895      		ret
 2929               	.L95:
 2930               	.LBB173:
 2931               	.LBB172:
 2932               	.LBB171:
 2933               	.LBB168:
 2934               	.LBB167:
 265:mpu6050.c     **** 		accel_temp[0] = (int16_t)(((int16_t)data[0] << 8) | data[1]);
 2936               	.LM315:
 2937 10d8 AE01      		movw r20,r28
 2938 10da 4F5C      		subi r20,-49
 2939 10dc 5F4F      		sbci r21,-1
 2940 10de 6CE0      		ldi r22,lo8(12)
 2941 10e0 84E7      		ldi r24,lo8(116)
 2942 10e2 0E94 0000 		call i2c_read_bytes.constprop.0
 272:mpu6050.c     **** 		accel_bias[1] += (int32_t)accel_temp[1];
 2944               	.LM316:
 2945 10e6 89A9      		ldd r24,Y+49
 2946 10e8 9AA9      		ldd r25,Y+50
 2947 10ea 9827      		eor r25,r24
 2948 10ec 8927      		eor r24,r25
 2949 10ee 9827      		eor r25,r24
 2950 10f0 092E      		mov __tmp_reg__,r25
 2951 10f2 000C      		lsl r0
 2952 10f4 AA0B      		sbc r26,r26
 2953 10f6 BB0B      		sbc r27,r27
 272:mpu6050.c     **** 		accel_bias[1] += (int32_t)accel_temp[1];
 2955               	.LM317:
 2956 10f8 2496      		adiw r28,64-60
 2957 10fa 2CAD      		ldd r18,Y+60
 2958 10fc 3DAD      		ldd r19,Y+61
 2959 10fe 4EAD      		ldd r20,Y+62
 2960 1100 5FAD      		ldd r21,Y+63
 2961 1102 2497      		sbiw r28,64-60
 2962 1104 280F      		add r18,r24
 2963 1106 391F      		adc r19,r25
 2964 1108 4A1F      		adc r20,r26
 2965 110a 5B1F      		adc r21,r27
 2966 110c 2496      		adiw r28,64-60
 2967 110e 2CAF      		std Y+60,r18
 2968 1110 3DAF      		std Y+61,r19
 2969 1112 4EAF      		std Y+62,r20
 2970 1114 5FAF      		std Y+63,r21
 2971 1116 2497      		sbiw r28,64-60
 273:mpu6050.c     **** 		accel_bias[2] += (int32_t)accel_temp[2];
 2973               	.LM318:
 2974 1118 8BA9      		ldd r24,Y+51
 2975 111a 9CA9      		ldd r25,Y+52
 2976 111c 9827      		eor r25,r24
 2977 111e 8927      		eor r24,r25
 2978 1120 9827      		eor r25,r24
 2979 1122 092E      		mov __tmp_reg__,r25
 2980 1124 000C      		lsl r0
 2981 1126 AA0B      		sbc r26,r26
 2982 1128 BB0B      		sbc r27,r27
 273:mpu6050.c     **** 		accel_bias[2] += (int32_t)accel_temp[2];
 2984               	.LM319:
 2985 112a 2896      		adiw r28,68-60
 2986 112c 2CAD      		ldd r18,Y+60
 2987 112e 3DAD      		ldd r19,Y+61
 2988 1130 4EAD      		ldd r20,Y+62
 2989 1132 5FAD      		ldd r21,Y+63
 2990 1134 2897      		sbiw r28,68-60
 2991 1136 280F      		add r18,r24
 2992 1138 391F      		adc r19,r25
 2993 113a 4A1F      		adc r20,r26
 2994 113c 5B1F      		adc r21,r27
 2995 113e 2896      		adiw r28,68-60
 2996 1140 2CAF      		std Y+60,r18
 2997 1142 3DAF      		std Y+61,r19
 2998 1144 4EAF      		std Y+62,r20
 2999 1146 5FAF      		std Y+63,r21
 3000 1148 2897      		sbiw r28,68-60
 274:mpu6050.c     **** 		gyro_bias[0] += (int32_t)gyro_temp[0];
 3002               	.LM320:
 3003 114a 8DA9      		ldd r24,Y+53
 3004 114c 9EA9      		ldd r25,Y+54
 3005 114e 9827      		eor r25,r24
 3006 1150 8927      		eor r24,r25
 3007 1152 9827      		eor r25,r24
 3008 1154 092E      		mov __tmp_reg__,r25
 3009 1156 000C      		lsl r0
 3010 1158 AA0B      		sbc r26,r26
 3011 115a BB0B      		sbc r27,r27
 274:mpu6050.c     **** 		gyro_bias[0] += (int32_t)gyro_temp[0];
 3013               	.LM321:
 3014 115c 2C96      		adiw r28,72-60
 3015 115e 2CAD      		ldd r18,Y+60
 3016 1160 3DAD      		ldd r19,Y+61
 3017 1162 4EAD      		ldd r20,Y+62
 3018 1164 5FAD      		ldd r21,Y+63
 3019 1166 2C97      		sbiw r28,72-60
 3020 1168 280F      		add r18,r24
 3021 116a 391F      		adc r19,r25
 3022 116c 4A1F      		adc r20,r26
 3023 116e 5B1F      		adc r21,r27
 3024 1170 2C96      		adiw r28,72-60
 3025 1172 2CAF      		std Y+60,r18
 3026 1174 3DAF      		std Y+61,r19
 3027 1176 4EAF      		std Y+62,r20
 3028 1178 5FAF      		std Y+63,r21
 3029 117a 2C97      		sbiw r28,72-60
 275:mpu6050.c     **** 		gyro_bias[1] += (int32_t)gyro_temp[1];
 3031               	.LM322:
 3032 117c 8FA9      		ldd r24,Y+55
 3033 117e 98AD      		ldd r25,Y+56
 3034 1180 9827      		eor r25,r24
 3035 1182 8927      		eor r24,r25
 3036 1184 9827      		eor r25,r24
 3037 1186 092E      		mov __tmp_reg__,r25
 3038 1188 000C      		lsl r0
 3039 118a AA0B      		sbc r26,r26
 3040 118c BB0B      		sbc r27,r27
 275:mpu6050.c     **** 		gyro_bias[1] += (int32_t)gyro_temp[1];
 3042               	.LM323:
 3043 118e 6096      		adiw r28,76-60
 3044 1190 2CAD      		ldd r18,Y+60
 3045 1192 3DAD      		ldd r19,Y+61
 3046 1194 4EAD      		ldd r20,Y+62
 3047 1196 5FAD      		ldd r21,Y+63
 3048 1198 6097      		sbiw r28,76-60
 3049 119a 280F      		add r18,r24
 3050 119c 391F      		adc r19,r25
 3051 119e 4A1F      		adc r20,r26
 3052 11a0 5B1F      		adc r21,r27
 3053 11a2 6096      		adiw r28,76-60
 3054 11a4 2CAF      		std Y+60,r18
 3055 11a6 3DAF      		std Y+61,r19
 3056 11a8 4EAF      		std Y+62,r20
 3057 11aa 5FAF      		std Y+63,r21
 3058 11ac 6097      		sbiw r28,76-60
 276:mpu6050.c     **** 		gyro_bias[2] += (int32_t)gyro_temp[2];
 3060               	.LM324:
 3061 11ae 89AD      		ldd r24,Y+57
 3062 11b0 9AAD      		ldd r25,Y+58
 3063 11b2 9827      		eor r25,r24
 3064 11b4 8927      		eor r24,r25
 3065 11b6 9827      		eor r25,r24
 3066 11b8 092E      		mov __tmp_reg__,r25
 3067 11ba 000C      		lsl r0
 3068 11bc AA0B      		sbc r26,r26
 3069 11be BB0B      		sbc r27,r27
 276:mpu6050.c     **** 		gyro_bias[2] += (int32_t)gyro_temp[2];
 3071               	.LM325:
 3072 11c0 6496      		adiw r28,80-60
 3073 11c2 2CAD      		ldd r18,Y+60
 3074 11c4 3DAD      		ldd r19,Y+61
 3075 11c6 4EAD      		ldd r20,Y+62
 3076 11c8 5FAD      		ldd r21,Y+63
 3077 11ca 6497      		sbiw r28,80-60
 3078 11cc 280F      		add r18,r24
 3079 11ce 391F      		adc r19,r25
 3080 11d0 4A1F      		adc r20,r26
 3081 11d2 5B1F      		adc r21,r27
 3082 11d4 6496      		adiw r28,80-60
 3083 11d6 2CAF      		std Y+60,r18
 3084 11d8 3DAF      		std Y+61,r19
 3085 11da 4EAF      		std Y+62,r20
 3086 11dc 5FAF      		std Y+63,r21
 3087 11de 6497      		sbiw r28,80-60
 277:mpu6050.c     **** 	}
 3089               	.LM326:
 3090 11e0 8BAD      		ldd r24,Y+59
 3091 11e2 9CAD      		ldd r25,Y+60
 3092 11e4 9827      		eor r25,r24
 3093 11e6 8927      		eor r24,r25
 3094 11e8 9827      		eor r25,r24
 3095 11ea 092E      		mov __tmp_reg__,r25
 3096 11ec 000C      		lsl r0
 3097 11ee AA0B      		sbc r26,r26
 3098 11f0 BB0B      		sbc r27,r27
 277:mpu6050.c     **** 	}
 3100               	.LM327:
 3101 11f2 6896      		adiw r28,84-60
 3102 11f4 2CAD      		ldd r18,Y+60
 3103 11f6 3DAD      		ldd r19,Y+61
 3104 11f8 4EAD      		ldd r20,Y+62
 3105 11fa 5FAD      		ldd r21,Y+63
 3106 11fc 6897      		sbiw r28,84-60
 3107 11fe 280F      		add r18,r24
 3108 1200 391F      		adc r19,r25
 3109 1202 4A1F      		adc r20,r26
 3110 1204 5B1F      		adc r21,r27
 3111 1206 6896      		adiw r28,84-60
 3112 1208 2CAF      		std Y+60,r18
 3113 120a 3DAF      		std Y+61,r19
 3114 120c 4EAF      		std Y+62,r20
 3115 120e 5FAF      		std Y+63,r21
 3116 1210 6897      		sbiw r28,84-60
 3117               	.LBE167:
 262:mpu6050.c     **** 	{
 3119               	.LM328:
 3120 1212 F394      		inc r15
 3121 1214 00C0      		rjmp .L94
 3122               	.L96:
 294:mpu6050.c     **** 	}
 3124               	.LM329:
 3125 1216 A501      		movw r20,r10
 3126 1218 9401      		movw r18,r8
 3127 121a 305C      		subi r19,-64
 3128 121c 4F4F      		sbci r20,-1
 3129 121e 5F4F      		sbci r21,-1
 3130 1220 2896      		adiw r28,68-60
 3131 1222 2CAF      		std Y+60,r18
 3132 1224 3DAF      		std Y+61,r19
 3133 1226 4EAF      		std Y+62,r20
 3134 1228 5FAF      		std Y+63,r21
 3135 122a 2897      		sbiw r28,68-60
 3136 122c 00C0      		rjmp .L97
 3137               	.L100:
 3138               	.LBE168:
 3139               	.LBE171:
 3140               	.LBE172:
 3141               	.LBE173:
 512:mpu6050.c     **** 	}
 3143               	.LM330:
 3144 122e 81E0      		ldi r24,lo8(1)
 3145 1230 00C0      		rjmp .L80
 3174               	.Lscope10:
 3179               	.global	us
 3181               	us:
 527:mpu6050.c     **** 
 528:mpu6050.c     **** void mpu6050_update(void)
 529:mpu6050.c     **** {
 530:mpu6050.c     **** 	/* check if new data is available */
 531:mpu6050.c     **** 	if(i2c_read_byte(MPU6050_ADDRESS, INT_STATUS) & 0x01)
 532:mpu6050.c     **** 	{
 533:mpu6050.c     **** 		/* get accelerometer, gyroscope and temperature data */
 534:mpu6050.c     **** 		uint8_t raw[14];
 535:mpu6050.c     **** 		i2c_read_bytes(MPU6050_ADDRESS, ACCEL_XOUT_H, 14, raw);
 536:mpu6050.c     **** 		ax = (float)((int16_t)((raw[0] << 8) | raw[1])) * A_RES;
 537:mpu6050.c     **** 		ay = (float)((int16_t)((raw[2] << 8) | raw[3])) * A_RES;
 538:mpu6050.c     **** 		az = (float)((int16_t)((raw[4] << 8) | raw[5])) * A_RES;
 539:mpu6050.c     **** 		temperature = ((float)(((int16_t)raw[6]) << 8 | raw[7])) / 340.0f + 36.53f;
 540:mpu6050.c     **** 		gx = (float)((int16_t)((raw[8] << 8) | raw[9])) * G_RES;
 541:mpu6050.c     **** 		gy = (float)((int16_t)((raw[10] << 8) | raw[11])) * G_RES;
 542:mpu6050.c     **** 		gz = (float)((int16_t)((raw[12] << 8) | raw[13])) * G_RES;
 543:mpu6050.c     **** 	}
 544:mpu6050.c     **** 
 545:mpu6050.c     **** 	now = us();
 546:mpu6050.c     **** 	time_delta = ((now - last_update) / 1000000.0f);
 547:mpu6050.c     **** 	last_update = now;
 548:mpu6050.c     **** 	quaternion_update(ax, ay, az, gx * M_PI / 180.0f, gy * M_PI / 180.0f, gz * M_PI / 180.0f);
 549:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 550:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 551:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 552:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 553:mpu6050.c     **** 	roll_deg = (int16_t)roll;
 554:mpu6050.c     **** }
 555:mpu6050.c     **** 
 556:mpu6050.c     **** /* timer */
 557:mpu6050.c     **** uint32_t us(void)
 558:mpu6050.c     **** {
 3183               	.LM331:
 3184               	.LFBB11:
 3185 1232 CF93      		push r28
 3186 1234 DF93      		push r29
 3187 1236 00D0      		rcall .
 3188 1238 00D0      		rcall .
 3189 123a CDB7      		in r28,__SP_L__
 3190 123c DEB7      		in r29,__SP_H__
 3191               	/* prologue: function */
 3192               	/* frame size = 4 */
 3193               	/* stack size = 6 */
 3194               	.L__stack_usage = 6
 559:mpu6050.c     **** 	uint32_t m;
 560:mpu6050.c     **** 	uint8_t sreg = SREG, t;
 3196               	.LM332:
 3197 123e 3FB7      		in r19,__SREG__
 561:mpu6050.c     **** 
 562:mpu6050.c     **** 	cli();
 3199               	.LM333:
 3200               	/* #APP */
 3201               	 ;  562 "mpu6050.c" 1
 3202 1240 F894      		cli
 3203               	 ;  0 "" 2
 563:mpu6050.c     **** 	m = timer0_overflow_count;
 3205               	.LM334:
 3206               	/* #NOAPP */
 3207 1242 8091 0000 		lds r24,timer0_overflow_count
 3208 1246 9091 0000 		lds r25,timer0_overflow_count+1
 3209 124a A091 0000 		lds r26,timer0_overflow_count+2
 3210 124e B091 0000 		lds r27,timer0_overflow_count+3
 564:mpu6050.c     **** 	t = TCNT0;
 3212               	.LM335:
 3213 1252 26B5      		in r18,0x26
 565:mpu6050.c     **** 	if((TIFR0 & (1 << TOV0)) && (t < 255))
 3215               	.LM336:
 3216 1254 A89B      		sbis 0x15,0
 3217 1256 00C0      		rjmp .L129
 3219               	.LM337:
 3220 1258 2F3F      		cpi r18,lo8(-1)
 3221 125a 01F0      		breq .L129
 566:mpu6050.c     **** 	{
 567:mpu6050.c     **** 		m++;
 3223               	.LM338:
 3224 125c 0196      		adiw r24,1
 3225 125e A11D      		adc r26,__zero_reg__
 3226 1260 B11D      		adc r27,__zero_reg__
 3227               	.L129:
 568:mpu6050.c     **** 	}
 569:mpu6050.c     **** 
 570:mpu6050.c     **** 	SREG = sreg;
 3229               	.LM339:
 3230 1262 3FBF      		out __SREG__,r19
 571:mpu6050.c     **** 	return ((m << 8) + t) * (64 / (F_CPU / 1000000));
 3232               	.LM340:
 3233 1264 BA2F      		mov r27,r26
 3234 1266 A92F      		mov r26,r25
 3235 1268 982F      		mov r25,r24
 3236 126a 8827      		clr r24
 3238               	.LM341:
 3239 126c 820F      		add r24,r18
 3240 126e 911D      		adc r25,__zero_reg__
 3241 1270 A11D      		adc r26,__zero_reg__
 3242 1272 B11D      		adc r27,__zero_reg__
 3244               	.LM342:
 3245 1274 9C01      		movw r18,r24
 3246 1276 AD01      		movw r20,r26
 3247 1278 62E0      		ldi r22,2
 3248               		1:
 3249 127a 220F      		lsl r18
 3250 127c 331F      		rol r19
 3251 127e 441F      		rol r20
 3252 1280 551F      		rol r21
 3253 1282 6A95      		dec r22
 3254 1284 01F4      		brne 1b
 572:mpu6050.c     **** }
 3256               	.LM343:
 3257 1286 CA01      		movw r24,r20
 3258 1288 B901      		movw r22,r18
 3259               	/* epilogue start */
 3260 128a 0F90      		pop __tmp_reg__
 3261 128c 0F90      		pop __tmp_reg__
 3262 128e 0F90      		pop __tmp_reg__
 3263 1290 0F90      		pop __tmp_reg__
 3264 1292 DF91      		pop r29
 3265 1294 CF91      		pop r28
 3266 1296 0895      		ret
 3273               	.Lscope11:
 3275               	.global	__eqsf2
 3276               	.global	__fixsfsi
 3280               	.global	mpu6050_update
 3282               	mpu6050_update:
 529:mpu6050.c     **** 	/* check if new data is available */
 3284               	.LM344:
 3285               	.LFBB12:
 3286 1298 2F92      		push r2
 3287 129a 3F92      		push r3
 3288 129c 4F92      		push r4
 3289 129e 5F92      		push r5
 3290 12a0 6F92      		push r6
 3291 12a2 7F92      		push r7
 3292 12a4 8F92      		push r8
 3293 12a6 9F92      		push r9
 3294 12a8 AF92      		push r10
 3295 12aa BF92      		push r11
 3296 12ac CF92      		push r12
 3297 12ae DF92      		push r13
 3298 12b0 EF92      		push r14
 3299 12b2 FF92      		push r15
 3300 12b4 0F93      		push r16
 3301 12b6 1F93      		push r17
 3302 12b8 CF93      		push r28
 3303 12ba DF93      		push r29
 3304 12bc CDB7      		in r28,__SP_L__
 3305 12be DEB7      		in r29,__SP_H__
 3306 12c0 CC56      		subi r28,108
 3307 12c2 D109      		sbc r29,__zero_reg__
 3308 12c4 0FB6      		in __tmp_reg__,__SREG__
 3309 12c6 F894      		cli
 3310 12c8 DEBF      		out __SP_H__,r29
 3311 12ca 0FBE      		out __SREG__,__tmp_reg__
 3312 12cc CDBF      		out __SP_L__,r28
 3313               	/* prologue: function */
 3314               	/* frame size = 108 */
 3315               	/* stack size = 126 */
 3316               	.L__stack_usage = 126
 531:mpu6050.c     **** 	{
 3318               	.LM345:
 3319 12ce 8AE3      		ldi r24,lo8(58)
 3320 12d0 0E94 0000 		call i2c_read_byte.constprop.0
 531:mpu6050.c     **** 	{
 3322               	.LM346:
 3323 12d4 80FF      		sbrs r24,0
 3324 12d6 00C0      		rjmp .L137
 3325               	.LBB177:
 535:mpu6050.c     **** 		ax = (float)((int16_t)((raw[0] << 8) | raw[1])) * A_RES;
 3327               	.LM347:
 3328 12d8 AE01      		movw r20,r28
 3329 12da 4F5F      		subi r20,-1
 3330 12dc 5F4F      		sbci r21,-1
 3331 12de 6EE0      		ldi r22,lo8(14)
 3332 12e0 8BE3      		ldi r24,lo8(59)
 3333 12e2 0E94 0000 		call i2c_read_bytes.constprop.0
 536:mpu6050.c     **** 		ay = (float)((int16_t)((raw[2] << 8) | raw[3])) * A_RES;
 3335               	.LM348:
 3336 12e6 8981      		ldd r24,Y+1
 3337 12e8 9A81      		ldd r25,Y+2
 3338 12ea 9827      		eor r25,r24
 3339 12ec 8927      		eor r24,r25
 3340 12ee 9827      		eor r25,r24
 3341 12f0 9C01      		movw r18,r24
 3342 12f2 990F      		lsl r25
 3343 12f4 440B      		sbc r20,r20
 3344 12f6 550B      		sbc r21,r21
 3345 12f8 2F87      		std Y+15,r18
 3346 12fa 388B      		std Y+16,r19
 3347 12fc 498B      		std Y+17,r20
 3348 12fe 5A8B      		std Y+18,r21
 3349 1300 CA01      		movw r24,r20
 3350 1302 B901      		movw r22,r18
 3351 1304 0E94 0000 		call __floatsisf
 536:mpu6050.c     **** 		ay = (float)((int16_t)((raw[2] << 8) | raw[3])) * A_RES;
 3353               	.LM349:
 3354 1308 20E0      		ldi r18,0
 3355 130a 30E0      		ldi r19,0
 3356 130c 40E8      		ldi r20,lo8(-128)
 3357 130e 58E3      		ldi r21,lo8(56)
 3358 1310 6F87      		std Y+15,r22
 3359 1312 788B      		std Y+16,r23
 3360 1314 898B      		std Y+17,r24
 3361 1316 9A8B      		std Y+18,r25
 3362 1318 6F85      		ldd r22,Y+15
 3363 131a 7889      		ldd r23,Y+16
 3364 131c 8989      		ldd r24,Y+17
 3365 131e 9A89      		ldd r25,Y+18
 3366 1320 0E94 0000 		call __mulsf3
 3367 1324 6093 0000 		sts ax,r22
 3368 1328 7093 0000 		sts ax+1,r23
 3369 132c 8093 0000 		sts ax+2,r24
 3370 1330 9093 0000 		sts ax+3,r25
 537:mpu6050.c     **** 		az = (float)((int16_t)((raw[4] << 8) | raw[5])) * A_RES;
 3372               	.LM350:
 3373 1334 8B81      		ldd r24,Y+3
 3374 1336 9C81      		ldd r25,Y+4
 3375 1338 9827      		eor r25,r24
 3376 133a 8927      		eor r24,r25
 3377 133c 9827      		eor r25,r24
 3378 133e 9C01      		movw r18,r24
 3379 1340 990F      		lsl r25
 3380 1342 440B      		sbc r20,r20
 3381 1344 550B      		sbc r21,r21
 3382 1346 2F87      		std Y+15,r18
 3383 1348 388B      		std Y+16,r19
 3384 134a 498B      		std Y+17,r20
 3385 134c 5A8B      		std Y+18,r21
 3386 134e CA01      		movw r24,r20
 3387 1350 B901      		movw r22,r18
 3388 1352 0E94 0000 		call __floatsisf
 537:mpu6050.c     **** 		az = (float)((int16_t)((raw[4] << 8) | raw[5])) * A_RES;
 3390               	.LM351:
 3391 1356 20E0      		ldi r18,0
 3392 1358 30E0      		ldi r19,0
 3393 135a 40E8      		ldi r20,lo8(-128)
 3394 135c 58E3      		ldi r21,lo8(56)
 3395 135e 6F87      		std Y+15,r22
 3396 1360 788B      		std Y+16,r23
 3397 1362 898B      		std Y+17,r24
 3398 1364 9A8B      		std Y+18,r25
 3399 1366 6F85      		ldd r22,Y+15
 3400 1368 7889      		ldd r23,Y+16
 3401 136a 8989      		ldd r24,Y+17
 3402 136c 9A89      		ldd r25,Y+18
 3403 136e 0E94 0000 		call __mulsf3
 3404 1372 6093 0000 		sts ay,r22
 3405 1376 7093 0000 		sts ay+1,r23
 3406 137a 8093 0000 		sts ay+2,r24
 3407 137e 9093 0000 		sts ay+3,r25
 538:mpu6050.c     **** 		temperature = ((float)(((int16_t)raw[6]) << 8 | raw[7])) / 340.0f + 36.53f;
 3409               	.LM352:
 3410 1382 8D81      		ldd r24,Y+5
 3411 1384 9E81      		ldd r25,Y+6
 3412 1386 9827      		eor r25,r24
 3413 1388 8927      		eor r24,r25
 3414 138a 9827      		eor r25,r24
 3415 138c 9C01      		movw r18,r24
 3416 138e 990F      		lsl r25
 3417 1390 440B      		sbc r20,r20
 3418 1392 550B      		sbc r21,r21
 3419 1394 2F87      		std Y+15,r18
 3420 1396 388B      		std Y+16,r19
 3421 1398 498B      		std Y+17,r20
 3422 139a 5A8B      		std Y+18,r21
 3423 139c CA01      		movw r24,r20
 3424 139e B901      		movw r22,r18
 3425 13a0 0E94 0000 		call __floatsisf
 538:mpu6050.c     **** 		temperature = ((float)(((int16_t)raw[6]) << 8 | raw[7])) / 340.0f + 36.53f;
 3427               	.LM353:
 3428 13a4 20E0      		ldi r18,0
 3429 13a6 30E0      		ldi r19,0
 3430 13a8 40E8      		ldi r20,lo8(-128)
 3431 13aa 58E3      		ldi r21,lo8(56)
 3432 13ac 6F87      		std Y+15,r22
 3433 13ae 788B      		std Y+16,r23
 3434 13b0 898B      		std Y+17,r24
 3435 13b2 9A8B      		std Y+18,r25
 3436 13b4 6F85      		ldd r22,Y+15
 3437 13b6 7889      		ldd r23,Y+16
 3438 13b8 8989      		ldd r24,Y+17
 3439 13ba 9A89      		ldd r25,Y+18
 3440 13bc 0E94 0000 		call __mulsf3
 3441 13c0 6093 0000 		sts az,r22
 3442 13c4 7093 0000 		sts az+1,r23
 3443 13c8 8093 0000 		sts az+2,r24
 3444 13cc 9093 0000 		sts az+3,r25
 539:mpu6050.c     **** 		gx = (float)((int16_t)((raw[8] << 8) | raw[9])) * G_RES;
 3446               	.LM354:
 3447 13d0 8F81      		ldd r24,Y+7
 3448 13d2 9885      		ldd r25,Y+8
 3449 13d4 9827      		eor r25,r24
 3450 13d6 8927      		eor r24,r25
 3451 13d8 9827      		eor r25,r24
 3452 13da 9C01      		movw r18,r24
 3453 13dc 990F      		lsl r25
 3454 13de 440B      		sbc r20,r20
 3455 13e0 550B      		sbc r21,r21
 3456 13e2 2F87      		std Y+15,r18
 3457 13e4 388B      		std Y+16,r19
 3458 13e6 498B      		std Y+17,r20
 3459 13e8 5A8B      		std Y+18,r21
 3460 13ea CA01      		movw r24,r20
 3461 13ec B901      		movw r22,r18
 3462 13ee 0E94 0000 		call __floatsisf
 539:mpu6050.c     **** 		gx = (float)((int16_t)((raw[8] << 8) | raw[9])) * G_RES;
 3464               	.LM355:
 3465 13f2 20E0      		ldi r18,0
 3466 13f4 30E0      		ldi r19,0
 3467 13f6 4AEA      		ldi r20,lo8(-86)
 3468 13f8 53E4      		ldi r21,lo8(67)
 3469 13fa 6F87      		std Y+15,r22
 3470 13fc 788B      		std Y+16,r23
 3471 13fe 898B      		std Y+17,r24
 3472 1400 9A8B      		std Y+18,r25
 3473 1402 6F85      		ldd r22,Y+15
 3474 1404 7889      		ldd r23,Y+16
 3475 1406 8989      		ldd r24,Y+17
 3476 1408 9A89      		ldd r25,Y+18
 3477 140a 0E94 0000 		call __divsf3
 539:mpu6050.c     **** 		gx = (float)((int16_t)((raw[8] << 8) | raw[9])) * G_RES;
 3479               	.LM356:
 3480 140e 28EB      		ldi r18,lo8(-72)
 3481 1410 3EE1      		ldi r19,lo8(30)
 3482 1412 42E1      		ldi r20,lo8(18)
 3483 1414 52E4      		ldi r21,lo8(66)
 3484 1416 6F87      		std Y+15,r22
 3485 1418 788B      		std Y+16,r23
 3486 141a 898B      		std Y+17,r24
 3487 141c 9A8B      		std Y+18,r25
 3488 141e 6F85      		ldd r22,Y+15
 3489 1420 7889      		ldd r23,Y+16
 3490 1422 8989      		ldd r24,Y+17
 3491 1424 9A89      		ldd r25,Y+18
 3492 1426 0E94 0000 		call __addsf3
 3493 142a 6093 0000 		sts temperature,r22
 3494 142e 7093 0000 		sts temperature+1,r23
 3495 1432 8093 0000 		sts temperature+2,r24
 3496 1436 9093 0000 		sts temperature+3,r25
 540:mpu6050.c     **** 		gy = (float)((int16_t)((raw[10] << 8) | raw[11])) * G_RES;
 3498               	.LM357:
 3499 143a 8985      		ldd r24,Y+9
 3500 143c 9A85      		ldd r25,Y+10
 3501 143e 9827      		eor r25,r24
 3502 1440 8927      		eor r24,r25
 3503 1442 9827      		eor r25,r24
 3504 1444 9C01      		movw r18,r24
 3505 1446 990F      		lsl r25
 3506 1448 440B      		sbc r20,r20
 3507 144a 550B      		sbc r21,r21
 3508 144c 2F87      		std Y+15,r18
 3509 144e 388B      		std Y+16,r19
 3510 1450 498B      		std Y+17,r20
 3511 1452 5A8B      		std Y+18,r21
 3512 1454 CA01      		movw r24,r20
 3513 1456 B901      		movw r22,r18
 3514 1458 0E94 0000 		call __floatsisf
 540:mpu6050.c     **** 		gy = (float)((int16_t)((raw[10] << 8) | raw[11])) * G_RES;
 3516               	.LM358:
 3517 145c 20E0      		ldi r18,0
 3518 145e 30E0      		ldi r19,0
 3519 1460 4AEF      		ldi r20,lo8(-6)
 3520 1462 5BE3      		ldi r21,lo8(59)
 3521 1464 6F87      		std Y+15,r22
 3522 1466 788B      		std Y+16,r23
 3523 1468 898B      		std Y+17,r24
 3524 146a 9A8B      		std Y+18,r25
 3525 146c 6F85      		ldd r22,Y+15
 3526 146e 7889      		ldd r23,Y+16
 3527 1470 8989      		ldd r24,Y+17
 3528 1472 9A89      		ldd r25,Y+18
 3529 1474 0E94 0000 		call __mulsf3
 3530 1478 6093 0000 		sts gx,r22
 3531 147c 7093 0000 		sts gx+1,r23
 3532 1480 8093 0000 		sts gx+2,r24
 3533 1484 9093 0000 		sts gx+3,r25
 541:mpu6050.c     **** 		gz = (float)((int16_t)((raw[12] << 8) | raw[13])) * G_RES;
 3535               	.LM359:
 3536 1488 8B85      		ldd r24,Y+11
 3537 148a 9C85      		ldd r25,Y+12
 3538 148c 9827      		eor r25,r24
 3539 148e 8927      		eor r24,r25
 3540 1490 9827      		eor r25,r24
 3541 1492 9C01      		movw r18,r24
 3542 1494 990F      		lsl r25
 3543 1496 440B      		sbc r20,r20
 3544 1498 550B      		sbc r21,r21
 3545 149a 2F87      		std Y+15,r18
 3546 149c 388B      		std Y+16,r19
 3547 149e 498B      		std Y+17,r20
 3548 14a0 5A8B      		std Y+18,r21
 3549 14a2 CA01      		movw r24,r20
 3550 14a4 B901      		movw r22,r18
 3551 14a6 0E94 0000 		call __floatsisf
 541:mpu6050.c     **** 		gz = (float)((int16_t)((raw[12] << 8) | raw[13])) * G_RES;
 3553               	.LM360:
 3554 14aa 20E0      		ldi r18,0
 3555 14ac 30E0      		ldi r19,0
 3556 14ae 4AEF      		ldi r20,lo8(-6)
 3557 14b0 5BE3      		ldi r21,lo8(59)
 3558 14b2 6F87      		std Y+15,r22
 3559 14b4 788B      		std Y+16,r23
 3560 14b6 898B      		std Y+17,r24
 3561 14b8 9A8B      		std Y+18,r25
 3562 14ba 6F85      		ldd r22,Y+15
 3563 14bc 7889      		ldd r23,Y+16
 3564 14be 8989      		ldd r24,Y+17
 3565 14c0 9A89      		ldd r25,Y+18
 3566 14c2 0E94 0000 		call __mulsf3
 3567 14c6 6093 0000 		sts gy,r22
 3568 14ca 7093 0000 		sts gy+1,r23
 3569 14ce 8093 0000 		sts gy+2,r24
 3570 14d2 9093 0000 		sts gy+3,r25
 542:mpu6050.c     **** 	}
 3572               	.LM361:
 3573 14d6 8D85      		ldd r24,Y+13
 3574 14d8 9E85      		ldd r25,Y+14
 3575 14da 9827      		eor r25,r24
 3576 14dc 8927      		eor r24,r25
 3577 14de 9827      		eor r25,r24
 3578 14e0 9C01      		movw r18,r24
 3579 14e2 990F      		lsl r25
 3580 14e4 440B      		sbc r20,r20
 3581 14e6 550B      		sbc r21,r21
 3582 14e8 2F87      		std Y+15,r18
 3583 14ea 388B      		std Y+16,r19
 3584 14ec 498B      		std Y+17,r20
 3585 14ee 5A8B      		std Y+18,r21
 3586 14f0 CA01      		movw r24,r20
 3587 14f2 B901      		movw r22,r18
 3588 14f4 0E94 0000 		call __floatsisf
 542:mpu6050.c     **** 	}
 3590               	.LM362:
 3591 14f8 20E0      		ldi r18,0
 3592 14fa 30E0      		ldi r19,0
 3593 14fc 4AEF      		ldi r20,lo8(-6)
 3594 14fe 5BE3      		ldi r21,lo8(59)
 3595 1500 6F87      		std Y+15,r22
 3596 1502 788B      		std Y+16,r23
 3597 1504 898B      		std Y+17,r24
 3598 1506 9A8B      		std Y+18,r25
 3599 1508 6F85      		ldd r22,Y+15
 3600 150a 7889      		ldd r23,Y+16
 3601 150c 8989      		ldd r24,Y+17
 3602 150e 9A89      		ldd r25,Y+18
 3603 1510 0E94 0000 		call __mulsf3
 3604 1514 6093 0000 		sts gz,r22
 3605 1518 7093 0000 		sts gz+1,r23
 3606 151c 8093 0000 		sts gz+2,r24
 3607 1520 9093 0000 		sts gz+3,r25
 3608               	.L137:
 3609               	.LBE177:
 545:mpu6050.c     **** 	time_delta = ((now - last_update) / 1000000.0f);
 3611               	.LM363:
 3612 1524 0E94 0000 		call us
 3613 1528 6B01      		movw r12,r22
 3614 152a 7C01      		movw r14,r24
 546:mpu6050.c     **** 	last_update = now;
 3616               	.LM364:
 3617 152c 8091 0000 		lds r24,last_update
 3618 1530 9091 0000 		lds r25,last_update+1
 3619 1534 A091 0000 		lds r26,last_update+2
 3620 1538 B091 0000 		lds r27,last_update+3
 3621 153c A701      		movw r20,r14
 3622 153e 9601      		movw r18,r12
 3623 1540 281B      		sub r18,r24
 3624 1542 390B      		sbc r19,r25
 3625 1544 4A0B      		sbc r20,r26
 3626 1546 5B0B      		sbc r21,r27
 3627 1548 2F87      		std Y+15,r18
 3628 154a 388B      		std Y+16,r19
 3629 154c 498B      		std Y+17,r20
 3630 154e 5A8B      		std Y+18,r21
 546:mpu6050.c     **** 	last_update = now;
 3632               	.LM365:
 3633 1550 CA01      		movw r24,r20
 3634 1552 B901      		movw r22,r18
 3635 1554 0E94 0000 		call __floatunsisf
 3636 1558 20E0      		ldi r18,0
 3637 155a 34E2      		ldi r19,lo8(36)
 3638 155c 44E7      		ldi r20,lo8(116)
 3639 155e 59E4      		ldi r21,lo8(73)
 3640 1560 6F87      		std Y+15,r22
 3641 1562 788B      		std Y+16,r23
 3642 1564 898B      		std Y+17,r24
 3643 1566 9A8B      		std Y+18,r25
 3644 1568 6F85      		ldd r22,Y+15
 3645 156a 7889      		ldd r23,Y+16
 3646 156c 8989      		ldd r24,Y+17
 3647 156e 9A89      		ldd r25,Y+18
 3648 1570 0E94 0000 		call __divsf3
 3649 1574 69AF      		std Y+57,r22
 3650 1576 7AAF      		std Y+58,r23
 3651 1578 8BAF      		std Y+59,r24
 3652 157a 9CAF      		std Y+60,r25
 546:mpu6050.c     **** 	last_update = now;
 3654               	.LM366:
 3655 157c CB01      		movw r24,r22
 3656 157e ABAD      		ldd r26,Y+59
 3657 1580 BCAD      		ldd r27,Y+60
 3658 1582 8093 0000 		sts time_delta,r24
 3659 1586 9093 0000 		sts time_delta+1,r25
 3660 158a A093 0000 		sts time_delta+2,r26
 3661 158e B093 0000 		sts time_delta+3,r27
 547:mpu6050.c     **** 	quaternion_update(ax, ay, az, gx * M_PI / 180.0f, gy * M_PI / 180.0f, gz * M_PI / 180.0f);
 3663               	.LM367:
 3664 1592 C092 0000 		sts last_update,r12
 3665 1596 D092 0000 		sts last_update+1,r13
 3666 159a E092 0000 		sts last_update+2,r14
 3667 159e F092 0000 		sts last_update+3,r15
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 3669               	.LM368:
 3670 15a2 8091 0000 		lds r24,az
 3671 15a6 9091 0000 		lds r25,az+1
 3672 15aa A091 0000 		lds r26,az+2
 3673 15ae B091 0000 		lds r27,az+3
 3674 15b2 8BA7      		std Y+43,r24
 3675 15b4 9CA7      		std Y+44,r25
 3676 15b6 ADA7      		std Y+45,r26
 3677 15b8 BEA7      		std Y+46,r27
 3678 15ba 2091 0000 		lds r18,ay
 3679 15be 3091 0000 		lds r19,ay+1
 3680 15c2 4091 0000 		lds r20,ay+2
 3681 15c6 5091 0000 		lds r21,ay+3
 3682 15ca 2FA7      		std Y+47,r18
 3683 15cc 38AB      		std Y+48,r19
 3684 15ce 49AB      		std Y+49,r20
 3685 15d0 5AAB      		std Y+50,r21
 3686 15d2 8091 0000 		lds r24,ax
 3687 15d6 9091 0000 		lds r25,ax+1
 3688 15da A091 0000 		lds r26,ax+2
 3689 15de B091 0000 		lds r27,ax+3
 3690 15e2 8B8F      		std Y+27,r24
 3691 15e4 9C8F      		std Y+28,r25
 3692 15e6 AD8F      		std Y+29,r26
 3693 15e8 BE8F      		std Y+30,r27
 3694               	.LBB178:
 3695               	.LBB179:
 427:mpu6050.c     **** 	if(norm == 0.0f)
 3697               	.LM369:
 3698 15ea 9C01      		movw r18,r24
 3699 15ec AD01      		movw r20,r26
 3700 15ee CD01      		movw r24,r26
 3701 15f0 B901      		movw r22,r18
 3702 15f2 0E94 0000 		call __mulsf3
 3703 15f6 7B01      		movw r14,r22
 3704 15f8 8C01      		movw r16,r24
 427:mpu6050.c     **** 	if(norm == 0.0f)
 3706               	.LM370:
 3707 15fa 2FA5      		ldd r18,Y+47
 3708 15fc 38A9      		ldd r19,Y+48
 3709 15fe 49A9      		ldd r20,Y+49
 3710 1600 5AA9      		ldd r21,Y+50
 3711 1602 CA01      		movw r24,r20
 3712 1604 B901      		movw r22,r18
 3713 1606 0E94 0000 		call __mulsf3
 427:mpu6050.c     **** 	if(norm == 0.0f)
 3715               	.LM371:
 3716 160a 9B01      		movw r18,r22
 3717 160c AC01      		movw r20,r24
 3718 160e EF86      		std Y+15,r14
 3719 1610 F88A      		std Y+16,r15
 3720 1612 098B      		std Y+17,r16
 3721 1614 1A8B      		std Y+18,r17
 3722 1616 6F85      		ldd r22,Y+15
 3723 1618 7889      		ldd r23,Y+16
 3724 161a 8989      		ldd r24,Y+17
 3725 161c 9A89      		ldd r25,Y+18
 3726 161e 0E94 0000 		call __addsf3
 3727 1622 7B01      		movw r14,r22
 3728 1624 8C01      		movw r16,r24
 427:mpu6050.c     **** 	if(norm == 0.0f)
 3730               	.LM372:
 3731 1626 2BA5      		ldd r18,Y+43
 3732 1628 3CA5      		ldd r19,Y+44
 3733 162a 4DA5      		ldd r20,Y+45
 3734 162c 5EA5      		ldd r21,Y+46
 3735 162e CA01      		movw r24,r20
 3736 1630 B901      		movw r22,r18
 3737 1632 0E94 0000 		call __mulsf3
 427:mpu6050.c     **** 	if(norm == 0.0f)
 3739               	.LM373:
 3740 1636 9B01      		movw r18,r22
 3741 1638 AC01      		movw r20,r24
 3742 163a EF86      		std Y+15,r14
 3743 163c F88A      		std Y+16,r15
 3744 163e 098B      		std Y+17,r16
 3745 1640 1A8B      		std Y+18,r17
 3746 1642 6F85      		ldd r22,Y+15
 3747 1644 7889      		ldd r23,Y+16
 3748 1646 8989      		ldd r24,Y+17
 3749 1648 9A89      		ldd r25,Y+18
 3750 164a 0E94 0000 		call __addsf3
 427:mpu6050.c     **** 	if(norm == 0.0f)
 3752               	.LM374:
 3753 164e 6F87      		std Y+15,r22
 3754 1650 788B      		std Y+16,r23
 3755 1652 898B      		std Y+17,r24
 3756 1654 9A8B      		std Y+18,r25
 3757 1656 6F85      		ldd r22,Y+15
 3758 1658 7889      		ldd r23,Y+16
 3759 165a 8989      		ldd r24,Y+17
 3760 165c 9A89      		ldd r25,Y+18
 3761 165e 0E94 0000 		call sqrt
 3762 1662 7B01      		movw r14,r22
 3763 1664 8C01      		movw r16,r24
 428:mpu6050.c     **** 	{
 3765               	.LM375:
 3766 1666 20E0      		ldi r18,0
 3767 1668 30E0      		ldi r19,0
 3768 166a A901      		movw r20,r18
 3769 166c 6F87      		std Y+15,r22
 3770 166e F88A      		std Y+16,r15
 3771 1670 898B      		std Y+17,r24
 3772 1672 1A8B      		std Y+18,r17
 3773 1674 6F85      		ldd r22,Y+15
 3774 1676 7889      		ldd r23,Y+16
 3775 1678 8989      		ldd r24,Y+17
 3776 167a 9A89      		ldd r25,Y+18
 3777 167c 0E94 0000 		call __eqsf2
 3778 1680 8823      		tst r24
 3779 1682 01F4      		brne .+4
 3780 1684 0C94 0000 		jmp .L138
 3781               	.LBE179:
 3782               	.LBE178:
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 3784               	.LM376:
 3785 1688 2091 0000 		lds r18,gz
 3786 168c 3091 0000 		lds r19,gz+1
 3787 1690 4091 0000 		lds r20,gz+2
 3788 1694 5091 0000 		lds r21,gz+3
 3789 1698 AD96      		adiw r28,105-60
 3790 169a 2CAF      		std Y+60,r18
 3791 169c 3DAF      		std Y+61,r19
 3792 169e 4EAF      		std Y+62,r20
 3793 16a0 5FAF      		std Y+63,r21
 3794 16a2 AD97      		sbiw r28,105-60
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 3796               	.LM377:
 3797 16a4 8091 0000 		lds r24,gy
 3798 16a8 9091 0000 		lds r25,gy+1
 3799 16ac A091 0000 		lds r26,gy+2
 3800 16b0 B091 0000 		lds r27,gy+3
 3801 16b4 A396      		adiw r28,95-60
 3802 16b6 8CAF      		std Y+60,r24
 3803 16b8 9DAF      		std Y+61,r25
 3804 16ba AEAF      		std Y+62,r26
 3805 16bc BFAF      		std Y+63,r27
 3806 16be A397      		sbiw r28,95-60
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 3808               	.LM378:
 3809 16c0 2091 0000 		lds r18,gx
 3810 16c4 3091 0000 		lds r19,gx+1
 3811 16c8 4091 0000 		lds r20,gx+2
 3812 16cc 5091 0000 		lds r21,gx+3
 3813 16d0 6F96      		adiw r28,91-60
 3814 16d2 2CAF      		std Y+60,r18
 3815 16d4 3DAF      		std Y+61,r19
 3816 16d6 4EAF      		std Y+62,r20
 3817 16d8 5FAF      		std Y+63,r21
 3818 16da 6F97      		sbiw r28,91-60
 3819               	.LBB184:
 3820               	.LBB180:
 416:mpu6050.c     **** 	q2 = q[1];
 3822               	.LM379:
 3823 16dc 8091 0000 		lds r24,q
 3824 16e0 9091 0000 		lds r25,q+1
 3825 16e4 A091 0000 		lds r26,q+2
 3826 16e8 B091 0000 		lds r27,q+3
 3827 16ec 2996      		adiw r28,69-60
 3828 16ee 8CAF      		std Y+60,r24
 3829 16f0 9DAF      		std Y+61,r25
 3830 16f2 AEAF      		std Y+62,r26
 3831 16f4 BFAF      		std Y+63,r27
 3832 16f6 2997      		sbiw r28,69-60
 417:mpu6050.c     **** 	q3 = q[2];
 3834               	.LM380:
 3835 16f8 2091 0000 		lds r18,q+4
 3836 16fc 3091 0000 		lds r19,q+4+1
 3837 1700 4091 0000 		lds r20,q+4+2
 3838 1704 5091 0000 		lds r21,q+4+3
 3839 1708 2196      		adiw r28,61-60
 3840 170a 2CAF      		std Y+60,r18
 3841 170c 3DAF      		std Y+61,r19
 3842 170e 4EAF      		std Y+62,r20
 3843 1710 5FAF      		std Y+63,r21
 3844 1712 2197      		sbiw r28,61-60
 418:mpu6050.c     **** 	q4 = q[3];
 3846               	.LM381:
 3847 1714 8091 0000 		lds r24,q+8
 3848 1718 9091 0000 		lds r25,q+8+1
 3849 171c A091 0000 		lds r26,q+8+2
 3850 1720 B091 0000 		lds r27,q+8+3
 3851 1724 6396      		adiw r28,79-60
 3852 1726 8CAF      		std Y+60,r24
 3853 1728 9DAF      		std Y+61,r25
 3854 172a AEAF      		std Y+62,r26
 3855 172c BFAF      		std Y+63,r27
 3856 172e 6397      		sbiw r28,79-60
 419:mpu6050.c     **** 
 3858               	.LM382:
 3859 1730 2091 0000 		lds r18,q+12
 3860 1734 3091 0000 		lds r19,q+12+1
 3861 1738 4091 0000 		lds r20,q+12+2
 3862 173c 5091 0000 		lds r21,q+12+3
 3863 1740 6796      		adiw r28,83-60
 3864 1742 2CAF      		std Y+60,r18
 3865 1744 3DAF      		std Y+61,r19
 3866 1746 4EAF      		std Y+62,r20
 3867 1748 5FAF      		std Y+63,r21
 3868 174a 6797      		sbiw r28,83-60
 421:mpu6050.c     **** 	_2q2 = 2.0f * q2;
 3870               	.LM383:
 3871 174c 2996      		adiw r28,69-60
 3872 174e 2CAD      		ldd r18,Y+60
 3873 1750 3DAD      		ldd r19,Y+61
 3874 1752 4EAD      		ldd r20,Y+62
 3875 1754 5FAD      		ldd r21,Y+63
 3876 1756 2997      		sbiw r28,69-60
 3877 1758 CA01      		movw r24,r20
 3878 175a B901      		movw r22,r18
 3879 175c 0E94 0000 		call __addsf3
 3880 1760 6F8B      		std Y+23,r22
 3881 1762 7EAB      		std Y+54,r23
 3882 1764 8FAB      		std Y+55,r24
 3883 1766 98AF      		std Y+56,r25
 422:mpu6050.c     **** 	_2q3 = 2.0f * q3;
 3885               	.LM384:
 3886 1768 2196      		adiw r28,61-60
 3887 176a 2CAD      		ldd r18,Y+60
 3888 176c 3DAD      		ldd r19,Y+61
 3889 176e 4EAD      		ldd r20,Y+62
 3890 1770 5FAD      		ldd r21,Y+63
 3891 1772 2197      		sbiw r28,61-60
 3892 1774 CA01      		movw r24,r20
 3893 1776 B901      		movw r22,r18
 3894 1778 0E94 0000 		call __addsf3
 3895 177c 6F87      		std Y+15,r22
 3896 177e 7F8F      		std Y+31,r23
 3897 1780 8BA3      		std Y+35,r24
 3898 1782 9FA3      		std Y+39,r25
 423:mpu6050.c     **** 	_2q4 = 2.0f * q4;
 3900               	.LM385:
 3901 1784 6396      		adiw r28,79-60
 3902 1786 2CAD      		ldd r18,Y+60
 3903 1788 3DAD      		ldd r19,Y+61
 3904 178a 4EAD      		ldd r20,Y+62
 3905 178c 5FAD      		ldd r21,Y+63
 3906 178e 6397      		sbiw r28,79-60
 3907 1790 CA01      		movw r24,r20
 3908 1792 B901      		movw r22,r18
 3909 1794 0E94 0000 		call __addsf3
 3910 1798 1B01      		movw r2,r22
 3911 179a 2C01      		movw r4,r24
 424:mpu6050.c     **** 
 3913               	.LM386:
 3914 179c 6796      		adiw r28,83-60
 3915 179e 2CAD      		ldd r18,Y+60
 3916 17a0 3DAD      		ldd r19,Y+61
 3917 17a2 4EAD      		ldd r20,Y+62
 3918 17a4 5FAD      		ldd r21,Y+63
 3919 17a6 6797      		sbiw r28,83-60
 3920 17a8 CA01      		movw r24,r20
 3921 17aa B901      		movw r22,r18
 3922 17ac 0E94 0000 		call __addsf3
 3923 17b0 2296      		adiw r28,65-63
 3924 17b2 6FAF      		std Y+63,r22
 3925 17b4 2297      		sbiw r28,65-63
 3926 17b6 2396      		adiw r28,66-63
 3927 17b8 7FAF      		std Y+63,r23
 3928 17ba 2397      		sbiw r28,66-63
 3929 17bc 2496      		adiw r28,67-63
 3930 17be 8FAF      		std Y+63,r24
 3931 17c0 2497      		sbiw r28,67-63
 3932 17c2 2596      		adiw r28,68-63
 3933 17c4 9FAF      		std Y+63,r25
 3934 17c6 2597      		sbiw r28,68-63
 433:mpu6050.c     **** 	ax *= norm;
 3936               	.LM387:
 3937 17c8 9701      		movw r18,r14
 3938 17ca A801      		movw r20,r16
 3939 17cc 60E0      		ldi r22,0
 3940 17ce 70E0      		ldi r23,0
 3941 17d0 80E8      		ldi r24,lo8(-128)
 3942 17d2 9FE3      		ldi r25,lo8(63)
 3943 17d4 0E94 0000 		call __divsf3
 3944 17d8 5B01      		movw r10,r22
 3945 17da 6C01      		movw r12,r24
 439:mpu6050.c     **** 	f2 = _2q1 * q2 + _2q3 * q4 - ay;
 3947               	.LM388:
 3948 17dc 2F85      		ldd r18,Y+15
 3949 17de 3F8D      		ldd r19,Y+31
 3950 17e0 4BA1      		ldd r20,Y+35
 3951 17e2 5FA1      		ldd r21,Y+39
 3952 17e4 6796      		adiw r28,83-60
 3953 17e6 6CAD      		ldd r22,Y+60
 3954 17e8 7DAD      		ldd r23,Y+61
 3955 17ea 8EAD      		ldd r24,Y+62
 3956 17ec 9FAD      		ldd r25,Y+63
 3957 17ee 6797      		sbiw r28,83-60
 3958 17f0 0E94 0000 		call __mulsf3
 3959 17f4 7B01      		movw r14,r22
 3960 17f6 8C01      		movw r16,r24
 439:mpu6050.c     **** 	f2 = _2q1 * q2 + _2q3 * q4 - ay;
 3962               	.LM389:
 3963 17f8 2F89      		ldd r18,Y+23
 3964 17fa 3EA9      		ldd r19,Y+54
 3965 17fc 4FA9      		ldd r20,Y+55
 3966 17fe 58AD      		ldd r21,Y+56
 3967 1800 6396      		adiw r28,79-60
 3968 1802 6CAD      		ldd r22,Y+60
 3969 1804 7DAD      		ldd r23,Y+61
 3970 1806 8EAD      		ldd r24,Y+62
 3971 1808 9FAD      		ldd r25,Y+63
 3972 180a 6397      		sbiw r28,79-60
 3973 180c 0E94 0000 		call __mulsf3
 439:mpu6050.c     **** 	f2 = _2q1 * q2 + _2q3 * q4 - ay;
 3975               	.LM390:
 3976 1810 9B01      		movw r18,r22
 3977 1812 AC01      		movw r20,r24
 3978 1814 EB8A      		std Y+19,r14
 3979 1816 FC8A      		std Y+20,r15
 3980 1818 0D8B      		std Y+21,r16
 3981 181a 1E8B      		std Y+22,r17
 3982 181c 6B89      		ldd r22,Y+19
 3983 181e 7C89      		ldd r23,Y+20
 3984 1820 8D89      		ldd r24,Y+21
 3985 1822 9E89      		ldd r25,Y+22
 3986 1824 0E94 0000 		call __subsf3
 3987 1828 7B01      		movw r14,r22
 3988 182a 8C01      		movw r16,r24
 434:mpu6050.c     **** 	ay *= norm;
 3990               	.LM391:
 3991 182c 9501      		movw r18,r10
 3992 182e A601      		movw r20,r12
 3993 1830 6B8D      		ldd r22,Y+27
 3994 1832 7C8D      		ldd r23,Y+28
 3995 1834 8D8D      		ldd r24,Y+29
 3996 1836 9E8D      		ldd r25,Y+30
 3997 1838 0E94 0000 		call __mulsf3
 439:mpu6050.c     **** 	f2 = _2q1 * q2 + _2q3 * q4 - ay;
 3999               	.LM392:
 4000 183c 9B01      		movw r18,r22
 4001 183e AC01      		movw r20,r24
 4002 1840 EB8A      		std Y+19,r14
 4003 1842 FC8A      		std Y+20,r15
 4004 1844 0D8B      		std Y+21,r16
 4005 1846 1E8B      		std Y+22,r17
 4006 1848 6B89      		ldd r22,Y+19
 4007 184a 7C89      		ldd r23,Y+20
 4008 184c 8D89      		ldd r24,Y+21
 4009 184e 9E89      		ldd r25,Y+22
 4010 1850 0E94 0000 		call __subsf3
 4011 1854 6B8F      		std Y+27,r22
 4012 1856 7BAB      		std Y+51,r23
 4013 1858 8CAB      		std Y+52,r24
 4014 185a 9DAB      		std Y+53,r25
 440:mpu6050.c     **** 	f3 = 1.0f - _2q2 * q2 - _2q3 * q3 - az;
 4016               	.LM393:
 4017 185c 2F89      		ldd r18,Y+23
 4018 185e 3EA9      		ldd r19,Y+54
 4019 1860 4FA9      		ldd r20,Y+55
 4020 1862 58AD      		ldd r21,Y+56
 4021 1864 2196      		adiw r28,61-60
 4022 1866 6CAD      		ldd r22,Y+60
 4023 1868 7DAD      		ldd r23,Y+61
 4024 186a 8EAD      		ldd r24,Y+62
 4025 186c 9FAD      		ldd r25,Y+63
 4026 186e 2197      		sbiw r28,61-60
 4027 1870 0E94 0000 		call __mulsf3
 4028 1874 7B01      		movw r14,r22
 4029 1876 8C01      		movw r16,r24
 440:mpu6050.c     **** 	f3 = 1.0f - _2q2 * q2 - _2q3 * q3 - az;
 4031               	.LM394:
 4032 1878 9101      		movw r18,r2
 4033 187a A201      		movw r20,r4
 4034 187c 6796      		adiw r28,83-60
 4035 187e 6CAD      		ldd r22,Y+60
 4036 1880 7DAD      		ldd r23,Y+61
 4037 1882 8EAD      		ldd r24,Y+62
 4038 1884 9FAD      		ldd r25,Y+63
 4039 1886 6797      		sbiw r28,83-60
 4040 1888 0E94 0000 		call __mulsf3
 440:mpu6050.c     **** 	f3 = 1.0f - _2q2 * q2 - _2q3 * q3 - az;
 4042               	.LM395:
 4043 188c 9B01      		movw r18,r22
 4044 188e AC01      		movw r20,r24
 4045 1890 EB8A      		std Y+19,r14
 4046 1892 FC8A      		std Y+20,r15
 4047 1894 0D8B      		std Y+21,r16
 4048 1896 1E8B      		std Y+22,r17
 4049 1898 6B89      		ldd r22,Y+19
 4050 189a 7C89      		ldd r23,Y+20
 4051 189c 8D89      		ldd r24,Y+21
 4052 189e 9E89      		ldd r25,Y+22
 4053 18a0 0E94 0000 		call __addsf3
 4054 18a4 7B01      		movw r14,r22
 4055 18a6 8C01      		movw r16,r24
 435:mpu6050.c     **** 	az *= norm;
 4057               	.LM396:
 4058 18a8 9501      		movw r18,r10
 4059 18aa A601      		movw r20,r12
 4060 18ac 6FA5      		ldd r22,Y+47
 4061 18ae 78A9      		ldd r23,Y+48
 4062 18b0 89A9      		ldd r24,Y+49
 4063 18b2 9AA9      		ldd r25,Y+50
 4064 18b4 0E94 0000 		call __mulsf3
 440:mpu6050.c     **** 	f3 = 1.0f - _2q2 * q2 - _2q3 * q3 - az;
 4066               	.LM397:
 4067 18b8 9B01      		movw r18,r22
 4068 18ba AC01      		movw r20,r24
 4069 18bc EB8A      		std Y+19,r14
 4070 18be FC8A      		std Y+20,r15
 4071 18c0 0D8B      		std Y+21,r16
 4072 18c2 1E8B      		std Y+22,r17
 4073 18c4 6B89      		ldd r22,Y+19
 4074 18c6 7C89      		ldd r23,Y+20
 4075 18c8 8D89      		ldd r24,Y+21
 4076 18ca 9E89      		ldd r25,Y+22
 4077 18cc 0E94 0000 		call __subsf3
 4078 18d0 7B01      		movw r14,r22
 4079 18d2 8C01      		movw r16,r24
 441:mpu6050.c     **** 	j11or24 = _2q3;
 4081               	.LM398:
 4082 18d4 2F85      		ldd r18,Y+15
 4083 18d6 3F8D      		ldd r19,Y+31
 4084 18d8 4BA1      		ldd r20,Y+35
 4085 18da 5FA1      		ldd r21,Y+39
 4086 18dc 2196      		adiw r28,61-60
 4087 18de 6CAD      		ldd r22,Y+60
 4088 18e0 7DAD      		ldd r23,Y+61
 4089 18e2 8EAD      		ldd r24,Y+62
 4090 18e4 9FAD      		ldd r25,Y+63
 4091 18e6 2197      		sbiw r28,61-60
 4092 18e8 0E94 0000 		call __mulsf3
 441:mpu6050.c     **** 	j11or24 = _2q3;
 4094               	.LM399:
 4095 18ec 9B01      		movw r18,r22
 4096 18ee AC01      		movw r20,r24
 4097 18f0 60E0      		ldi r22,0
 4098 18f2 70E0      		ldi r23,0
 4099 18f4 80E8      		ldi r24,lo8(-128)
 4100 18f6 9FE3      		ldi r25,lo8(63)
 4101 18f8 0E94 0000 		call __subsf3
 4102 18fc 3B01      		movw r6,r22
 4103 18fe 4C01      		movw r8,r24
 441:mpu6050.c     **** 	j11or24 = _2q3;
 4105               	.LM400:
 4106 1900 9101      		movw r18,r2
 4107 1902 A201      		movw r20,r4
 4108 1904 6396      		adiw r28,79-60
 4109 1906 6CAD      		ldd r22,Y+60
 4110 1908 7DAD      		ldd r23,Y+61
 4111 190a 8EAD      		ldd r24,Y+62
 4112 190c 9FAD      		ldd r25,Y+63
 4113 190e 6397      		sbiw r28,79-60
 4114 1910 0E94 0000 		call __mulsf3
 441:mpu6050.c     **** 	j11or24 = _2q3;
 4116               	.LM401:
 4117 1914 9B01      		movw r18,r22
 4118 1916 AC01      		movw r20,r24
 4119 1918 6B8A      		std Y+19,r6
 4120 191a 7C8A      		std Y+20,r7
 4121 191c 8D8A      		std Y+21,r8
 4122 191e 9E8A      		std Y+22,r9
 4123 1920 6B89      		ldd r22,Y+19
 4124 1922 7C89      		ldd r23,Y+20
 4125 1924 8D89      		ldd r24,Y+21
 4126 1926 9E89      		ldd r25,Y+22
 4127 1928 0E94 0000 		call __subsf3
 4128 192c 3B01      		movw r6,r22
 4129 192e 4C01      		movw r8,r24
 436:mpu6050.c     **** 
 4131               	.LM402:
 4132 1930 9501      		movw r18,r10
 4133 1932 A601      		movw r20,r12
 4134 1934 6BA5      		ldd r22,Y+43
 4135 1936 7CA5      		ldd r23,Y+44
 4136 1938 8DA5      		ldd r24,Y+45
 4137 193a 9EA5      		ldd r25,Y+46
 4138 193c 0E94 0000 		call __mulsf3
 441:mpu6050.c     **** 	j11or24 = _2q3;
 4140               	.LM403:
 4141 1940 9B01      		movw r18,r22
 4142 1942 AC01      		movw r20,r24
 4143 1944 6B8A      		std Y+19,r6
 4144 1946 7C8A      		std Y+20,r7
 4145 1948 8D8A      		std Y+21,r8
 4146 194a 9E8A      		std Y+22,r9
 4147 194c 6B89      		ldd r22,Y+19
 4148 194e 7C89      		ldd r23,Y+20
 4149 1950 8D89      		ldd r24,Y+21
 4150 1952 9E89      		ldd r25,Y+22
 4151 1954 0E94 0000 		call __subsf3
 4152 1958 3B01      		movw r6,r22
 4153 195a 4C01      		movw r8,r24
 450:mpu6050.c     **** 	hat_dot2 = j12or23 * f1 + j13or22 * f2 - j32 * f3;
 4155               	.LM404:
 4156 195c 9701      		movw r18,r14
 4157 195e A801      		movw r20,r16
 4158 1960 8F85      		ldd r24,Y+15
 4159 1962 8B8B      		std Y+19,r24
 4160 1964 9F8D      		ldd r25,Y+31
 4161 1966 9C8B      		std Y+20,r25
 4162 1968 ABA1      		ldd r26,Y+35
 4163 196a AD8B      		std Y+21,r26
 4164 196c BFA1      		ldd r27,Y+39
 4165 196e BE8B      		std Y+22,r27
 4166 1970 6B89      		ldd r22,Y+19
 4167 1972 7C89      		ldd r23,Y+20
 4168 1974 8D89      		ldd r24,Y+21
 4169 1976 9E89      		ldd r25,Y+22
 4170 1978 0E94 0000 		call __mulsf3
 4171 197c 5B01      		movw r10,r22
 4172 197e 6C01      		movw r12,r24
 450:mpu6050.c     **** 	hat_dot2 = j12or23 * f1 + j13or22 * f2 - j32 * f3;
 4174               	.LM405:
 4175 1980 2B8D      		ldd r18,Y+27
 4176 1982 3BA9      		ldd r19,Y+51
 4177 1984 4CA9      		ldd r20,Y+52
 4178 1986 5DA9      		ldd r21,Y+53
 4179 1988 2B8A      		std Y+19,r2
 4180 198a 3C8A      		std Y+20,r3
 4181 198c 4D8A      		std Y+21,r4
 4182 198e 5E8A      		std Y+22,r5
 4183 1990 6B89      		ldd r22,Y+19
 4184 1992 7C89      		ldd r23,Y+20
 4185 1994 8D89      		ldd r24,Y+21
 4186 1996 9E89      		ldd r25,Y+22
 4187 1998 0E94 0000 		call __mulsf3
 450:mpu6050.c     **** 	hat_dot2 = j12or23 * f1 + j13or22 * f2 - j32 * f3;
 4189               	.LM406:
 4190 199c 9B01      		movw r18,r22
 4191 199e AC01      		movw r20,r24
 4192 19a0 AB8A      		std Y+19,r10
 4193 19a2 BC8A      		std Y+20,r11
 4194 19a4 CD8A      		std Y+21,r12
 4195 19a6 DE8A      		std Y+22,r13
 4196 19a8 6B89      		ldd r22,Y+19
 4197 19aa 7C89      		ldd r23,Y+20
 4198 19ac 8D89      		ldd r24,Y+21
 4199 19ae 9E89      		ldd r25,Y+22
 4200 19b0 0E94 0000 		call __subsf3
 4201 19b4 6BA7      		std Y+43,r22
 4202 19b6 7FA7      		std Y+47,r23
 4203 19b8 2A96      		adiw r28,73-63
 4204 19ba 8FAF      		std Y+63,r24
 4205 19bc 2A97      		sbiw r28,73-63
 4206 19be 2B96      		adiw r28,74-63
 4207 19c0 9FAF      		std Y+63,r25
 4208 19c2 2B97      		sbiw r28,74-63
 451:mpu6050.c     **** 	hat_dot3 = j12or23 * f2 - j33 *f3 - j13or22 * f1;
 4210               	.LM407:
 4211 19c4 2B8D      		ldd r18,Y+27
 4212 19c6 3BA9      		ldd r19,Y+51
 4213 19c8 4CA9      		ldd r20,Y+52
 4214 19ca 5DA9      		ldd r21,Y+53
 4215 19cc 2296      		adiw r28,65-63
 4216 19ce 8FAD      		ldd r24,Y+63
 4217 19d0 2297      		sbiw r28,65-63
 4218 19d2 8B8B      		std Y+19,r24
 4219 19d4 2396      		adiw r28,66-63
 4220 19d6 9FAD      		ldd r25,Y+63
 4221 19d8 2397      		sbiw r28,66-63
 4222 19da 9C8B      		std Y+20,r25
 4223 19dc 2496      		adiw r28,67-63
 4224 19de AFAD      		ldd r26,Y+63
 4225 19e0 2497      		sbiw r28,67-63
 4226 19e2 AD8B      		std Y+21,r26
 4227 19e4 2596      		adiw r28,68-63
 4228 19e6 BFAD      		ldd r27,Y+63
 4229 19e8 2597      		sbiw r28,68-63
 4230 19ea BE8B      		std Y+22,r27
 4231 19ec 6B89      		ldd r22,Y+19
 4232 19ee 7C89      		ldd r23,Y+20
 4233 19f0 8D89      		ldd r24,Y+21
 4234 19f2 9E89      		ldd r25,Y+22
 4235 19f4 0E94 0000 		call __mulsf3
 4236 19f8 5B01      		movw r10,r22
 4237 19fa 6C01      		movw r12,r24
 451:mpu6050.c     **** 	hat_dot3 = j12or23 * f2 - j33 *f3 - j13or22 * f1;
 4239               	.LM408:
 4240 19fc 9701      		movw r18,r14
 4241 19fe A801      		movw r20,r16
 4242 1a00 8F89      		ldd r24,Y+23
 4243 1a02 8B8B      		std Y+19,r24
 4244 1a04 9EA9      		ldd r25,Y+54
 4245 1a06 9C8B      		std Y+20,r25
 4246 1a08 AFA9      		ldd r26,Y+55
 4247 1a0a AD8B      		std Y+21,r26
 4248 1a0c B8AD      		ldd r27,Y+56
 4249 1a0e BE8B      		std Y+22,r27
 4250 1a10 6B89      		ldd r22,Y+19
 4251 1a12 7C89      		ldd r23,Y+20
 4252 1a14 8D89      		ldd r24,Y+21
 4253 1a16 9E89      		ldd r25,Y+22
 4254 1a18 0E94 0000 		call __mulsf3
 451:mpu6050.c     **** 	hat_dot3 = j12or23 * f2 - j33 *f3 - j13or22 * f1;
 4256               	.LM409:
 4257 1a1c 9B01      		movw r18,r22
 4258 1a1e AC01      		movw r20,r24
 4259 1a20 AB8A      		std Y+19,r10
 4260 1a22 BC8A      		std Y+20,r11
 4261 1a24 CD8A      		std Y+21,r12
 4262 1a26 DE8A      		std Y+22,r13
 4263 1a28 6B89      		ldd r22,Y+19
 4264 1a2a 7C89      		ldd r23,Y+20
 4265 1a2c 8D89      		ldd r24,Y+21
 4266 1a2e 9E89      		ldd r25,Y+22
 4267 1a30 0E94 0000 		call __addsf3
 4268 1a34 5B01      		movw r10,r22
 4269 1a36 6C01      		movw r12,r24
 446:mpu6050.c     **** 	j33 = 2.0f * j11or24;
 4271               	.LM410:
 4272 1a38 2F85      		ldd r18,Y+15
 4273 1a3a 3F8D      		ldd r19,Y+31
 4274 1a3c 4BA1      		ldd r20,Y+35
 4275 1a3e 5FA1      		ldd r21,Y+39
 4276 1a40 8F85      		ldd r24,Y+15
 4277 1a42 8B8B      		std Y+19,r24
 4278 1a44 9F8D      		ldd r25,Y+31
 4279 1a46 9C8B      		std Y+20,r25
 4280 1a48 ABA1      		ldd r26,Y+35
 4281 1a4a AD8B      		std Y+21,r26
 4282 1a4c BFA1      		ldd r27,Y+39
 4283 1a4e BE8B      		std Y+22,r27
 4284 1a50 6B89      		ldd r22,Y+19
 4285 1a52 7C89      		ldd r23,Y+20
 4286 1a54 8D89      		ldd r24,Y+21
 4287 1a56 9E89      		ldd r25,Y+22
 4288 1a58 0E94 0000 		call __addsf3
 451:mpu6050.c     **** 	hat_dot3 = j12or23 * f2 - j33 *f3 - j13or22 * f1;
 4290               	.LM411:
 4291 1a5c 9301      		movw r18,r6
 4292 1a5e A401      		movw r20,r8
 4293 1a60 6B8B      		std Y+19,r22
 4294 1a62 7C8B      		std Y+20,r23
 4295 1a64 8D8B      		std Y+21,r24
 4296 1a66 9E8B      		std Y+22,r25
 4297 1a68 6B89      		ldd r22,Y+19
 4298 1a6a 7C89      		ldd r23,Y+20
 4299 1a6c 8D89      		ldd r24,Y+21
 4300 1a6e 9E89      		ldd r25,Y+22
 4301 1a70 0E94 0000 		call __mulsf3
 451:mpu6050.c     **** 	hat_dot3 = j12or23 * f2 - j33 *f3 - j13or22 * f1;
 4303               	.LM412:
 4304 1a74 9B01      		movw r18,r22
 4305 1a76 AC01      		movw r20,r24
 4306 1a78 AB8A      		std Y+19,r10
 4307 1a7a BC8A      		std Y+20,r11
 4308 1a7c CD8A      		std Y+21,r12
 4309 1a7e DE8A      		std Y+22,r13
 4310 1a80 6B89      		ldd r22,Y+19
 4311 1a82 7C89      		ldd r23,Y+20
 4312 1a84 8D89      		ldd r24,Y+21
 4313 1a86 9E89      		ldd r25,Y+22
 4314 1a88 0E94 0000 		call __subsf3
 4315 1a8c 5B01      		movw r10,r22
 4316 1a8e 6C01      		movw r12,r24
 452:mpu6050.c     **** 	hat_dot4 = j14or21 * f1 + j11or24 * f2;
 4318               	.LM413:
 4319 1a90 9701      		movw r18,r14
 4320 1a92 A801      		movw r20,r16
 4321 1a94 2296      		adiw r28,65-63
 4322 1a96 8FAD      		ldd r24,Y+63
 4323 1a98 2297      		sbiw r28,65-63
 4324 1a9a 8B8B      		std Y+19,r24
 4325 1a9c 2396      		adiw r28,66-63
 4326 1a9e 9FAD      		ldd r25,Y+63
 4327 1aa0 2397      		sbiw r28,66-63
 4328 1aa2 9C8B      		std Y+20,r25
 4329 1aa4 2496      		adiw r28,67-63
 4330 1aa6 AFAD      		ldd r26,Y+63
 4331 1aa8 2497      		sbiw r28,67-63
 4332 1aaa AD8B      		std Y+21,r26
 4333 1aac 2596      		adiw r28,68-63
 4334 1aae BFAD      		ldd r27,Y+63
 4335 1ab0 2597      		sbiw r28,68-63
 4336 1ab2 BE8B      		std Y+22,r27
 4337 1ab4 6B89      		ldd r22,Y+19
 4338 1ab6 7C89      		ldd r23,Y+20
 4339 1ab8 8D89      		ldd r24,Y+21
 4340 1aba 9E89      		ldd r25,Y+22
 4341 1abc 0E94 0000 		call __mulsf3
 4342 1ac0 6896      		adiw r28,87-63
 4343 1ac2 6FAF      		std Y+63,r22
 4344 1ac4 6897      		sbiw r28,87-63
 4345 1ac6 6996      		adiw r28,88-63
 4346 1ac8 7FAF      		std Y+63,r23
 4347 1aca 6997      		sbiw r28,88-63
 4348 1acc 6A96      		adiw r28,89-63
 4349 1ace 8FAF      		std Y+63,r24
 4350 1ad0 6A97      		sbiw r28,89-63
 4351 1ad2 6B96      		adiw r28,90-63
 4352 1ad4 9FAF      		std Y+63,r25
 4353 1ad6 6B97      		sbiw r28,90-63
 447:mpu6050.c     **** 
 4355               	.LM414:
 4356 1ad8 9101      		movw r18,r2
 4357 1ada A201      		movw r20,r4
 4358 1adc 2B8A      		std Y+19,r2
 4359 1ade 3C8A      		std Y+20,r3
 4360 1ae0 4D8A      		std Y+21,r4
 4361 1ae2 5E8A      		std Y+22,r5
 4362 1ae4 6B89      		ldd r22,Y+19
 4363 1ae6 7C89      		ldd r23,Y+20
 4364 1ae8 8D89      		ldd r24,Y+21
 4365 1aea 9E89      		ldd r25,Y+22
 4366 1aec 0E94 0000 		call __addsf3
 452:mpu6050.c     **** 	hat_dot4 = j14or21 * f1 + j11or24 * f2;
 4368               	.LM415:
 4369 1af0 9301      		movw r18,r6
 4370 1af2 A401      		movw r20,r8
 4371 1af4 6B8B      		std Y+19,r22
 4372 1af6 7C8B      		std Y+20,r23
 4373 1af8 8D8B      		std Y+21,r24
 4374 1afa 9E8B      		std Y+22,r25
 4375 1afc 6B89      		ldd r22,Y+19
 4376 1afe 7C89      		ldd r23,Y+20
 4377 1b00 8D89      		ldd r24,Y+21
 4378 1b02 9E89      		ldd r25,Y+22
 4379 1b04 0E94 0000 		call __mulsf3
 452:mpu6050.c     **** 	hat_dot4 = j14or21 * f1 + j11or24 * f2;
 4381               	.LM416:
 4382 1b08 9B01      		movw r18,r22
 4383 1b0a AC01      		movw r20,r24
 4384 1b0c 6896      		adiw r28,87-63
 4385 1b0e 8FAD      		ldd r24,Y+63
 4386 1b10 6897      		sbiw r28,87-63
 4387 1b12 8B8B      		std Y+19,r24
 4388 1b14 6996      		adiw r28,88-63
 4389 1b16 9FAD      		ldd r25,Y+63
 4390 1b18 6997      		sbiw r28,88-63
 4391 1b1a 9C8B      		std Y+20,r25
 4392 1b1c 6A96      		adiw r28,89-63
 4393 1b1e AFAD      		ldd r26,Y+63
 4394 1b20 6A97      		sbiw r28,89-63
 4395 1b22 AD8B      		std Y+21,r26
 4396 1b24 6B96      		adiw r28,90-63
 4397 1b26 BFAD      		ldd r27,Y+63
 4398 1b28 6B97      		sbiw r28,90-63
 4399 1b2a BE8B      		std Y+22,r27
 4400 1b2c 6B89      		ldd r22,Y+19
 4401 1b2e 7C89      		ldd r23,Y+20
 4402 1b30 8D89      		ldd r24,Y+21
 4403 1b32 9E89      		ldd r25,Y+22
 4404 1b34 0E94 0000 		call __subsf3
 4405 1b38 3B01      		movw r6,r22
 4406 1b3a 4C01      		movw r8,r24
 452:mpu6050.c     **** 	hat_dot4 = j14or21 * f1 + j11or24 * f2;
 4408               	.LM417:
 4409 1b3c 2B8D      		ldd r18,Y+27
 4410 1b3e 3BA9      		ldd r19,Y+51
 4411 1b40 4CA9      		ldd r20,Y+52
 4412 1b42 5DA9      		ldd r21,Y+53
 4413 1b44 8F89      		ldd r24,Y+23
 4414 1b46 8B8B      		std Y+19,r24
 4415 1b48 9EA9      		ldd r25,Y+54
 4416 1b4a 9C8B      		std Y+20,r25
 4417 1b4c AFA9      		ldd r26,Y+55
 4418 1b4e AD8B      		std Y+21,r26
 4419 1b50 B8AD      		ldd r27,Y+56
 4420 1b52 BE8B      		std Y+22,r27
 4421 1b54 6B89      		ldd r22,Y+19
 4422 1b56 7C89      		ldd r23,Y+20
 4423 1b58 8D89      		ldd r24,Y+21
 4424 1b5a 9E89      		ldd r25,Y+22
 4425 1b5c 0E94 0000 		call __mulsf3
 452:mpu6050.c     **** 	hat_dot4 = j14or21 * f1 + j11or24 * f2;
 4427               	.LM418:
 4428 1b60 9B01      		movw r18,r22
 4429 1b62 AC01      		movw r20,r24
 4430 1b64 6B8A      		std Y+19,r6
 4431 1b66 7C8A      		std Y+20,r7
 4432 1b68 8D8A      		std Y+21,r8
 4433 1b6a 9E8A      		std Y+22,r9
 4434 1b6c 6B89      		ldd r22,Y+19
 4435 1b6e 7C89      		ldd r23,Y+20
 4436 1b70 8D89      		ldd r24,Y+21
 4437 1b72 9E89      		ldd r25,Y+22
 4438 1b74 0E94 0000 		call __subsf3
 4439 1b78 3B01      		movw r6,r22
 4440 1b7a 4C01      		movw r8,r24
 453:mpu6050.c     **** 
 4442               	.LM419:
 4443 1b7c 2B8D      		ldd r18,Y+27
 4444 1b7e 3BA9      		ldd r19,Y+51
 4445 1b80 4CA9      		ldd r20,Y+52
 4446 1b82 5DA9      		ldd r21,Y+53
 4447 1b84 8F85      		ldd r24,Y+15
 4448 1b86 8B8B      		std Y+19,r24
 4449 1b88 9F8D      		ldd r25,Y+31
 4450 1b8a 9C8B      		std Y+20,r25
 4451 1b8c ABA1      		ldd r26,Y+35
 4452 1b8e AD8B      		std Y+21,r26
 4453 1b90 BFA1      		ldd r27,Y+39
 4454 1b92 BE8B      		std Y+22,r27
 4455 1b94 6B89      		ldd r22,Y+19
 4456 1b96 7C89      		ldd r23,Y+20
 4457 1b98 8D89      		ldd r24,Y+21
 4458 1b9a 9E89      		ldd r25,Y+22
 4459 1b9c 0E94 0000 		call __mulsf3
 4460 1ba0 6B8F      		std Y+27,r22
 4461 1ba2 7BAB      		std Y+51,r23
 4462 1ba4 8CAB      		std Y+52,r24
 4463 1ba6 9DAB      		std Y+53,r25
 453:mpu6050.c     **** 
 4465               	.LM420:
 4466 1ba8 9701      		movw r18,r14
 4467 1baa A801      		movw r20,r16
 4468 1bac 2B8A      		std Y+19,r2
 4469 1bae 3C8A      		std Y+20,r3
 4470 1bb0 4D8A      		std Y+21,r4
 4471 1bb2 5E8A      		std Y+22,r5
 4472 1bb4 6B89      		ldd r22,Y+19
 4473 1bb6 7C89      		ldd r23,Y+20
 4474 1bb8 8D89      		ldd r24,Y+21
 4475 1bba 9E89      		ldd r25,Y+22
 4476 1bbc 0E94 0000 		call __mulsf3
 453:mpu6050.c     **** 
 4478               	.LM421:
 4479 1bc0 9B01      		movw r18,r22
 4480 1bc2 AC01      		movw r20,r24
 4481 1bc4 8B8D      		ldd r24,Y+27
 4482 1bc6 8B8B      		std Y+19,r24
 4483 1bc8 9BA9      		ldd r25,Y+51
 4484 1bca 9C8B      		std Y+20,r25
 4485 1bcc ACA9      		ldd r26,Y+52
 4486 1bce AD8B      		std Y+21,r26
 4487 1bd0 BDA9      		ldd r27,Y+53
 4488 1bd2 BE8B      		std Y+22,r27
 4489 1bd4 6B89      		ldd r22,Y+19
 4490 1bd6 7C89      		ldd r23,Y+20
 4491 1bd8 8D89      		ldd r24,Y+21
 4492 1bda 9E89      		ldd r25,Y+22
 4493 1bdc 0E94 0000 		call __addsf3
 4494 1be0 2C96      		adiw r28,75-63
 4495 1be2 6FAF      		std Y+63,r22
 4496 1be4 2C97      		sbiw r28,75-63
 4497 1be6 2D96      		adiw r28,76-63
 4498 1be8 7FAF      		std Y+63,r23
 4499 1bea 2D97      		sbiw r28,76-63
 4500 1bec 2E96      		adiw r28,77-63
 4501 1bee 8FAF      		std Y+63,r24
 4502 1bf0 2E97      		sbiw r28,77-63
 4503 1bf2 2F96      		adiw r28,78-63
 4504 1bf4 9FAF      		std Y+63,r25
 4505 1bf6 2F97      		sbiw r28,78-63
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4507               	.LM422:
 4508 1bf8 2BA5      		ldd r18,Y+43
 4509 1bfa 3FA5      		ldd r19,Y+47
 4510 1bfc 2A96      		adiw r28,73-63
 4511 1bfe 4FAD      		ldd r20,Y+63
 4512 1c00 2A97      		sbiw r28,73-63
 4513 1c02 2B96      		adiw r28,74-63
 4514 1c04 5FAD      		ldd r21,Y+63
 4515 1c06 2B97      		sbiw r28,74-63
 4516 1c08 8BA5      		ldd r24,Y+43
 4517 1c0a 8B8B      		std Y+19,r24
 4518 1c0c 9FA5      		ldd r25,Y+47
 4519 1c0e 9C8B      		std Y+20,r25
 4520 1c10 2A96      		adiw r28,73-63
 4521 1c12 AFAD      		ldd r26,Y+63
 4522 1c14 2A97      		sbiw r28,73-63
 4523 1c16 AD8B      		std Y+21,r26
 4524 1c18 2B96      		adiw r28,74-63
 4525 1c1a BFAD      		ldd r27,Y+63
 4526 1c1c 2B97      		sbiw r28,74-63
 4527 1c1e BE8B      		std Y+22,r27
 4528 1c20 6B89      		ldd r22,Y+19
 4529 1c22 7C89      		ldd r23,Y+20
 4530 1c24 8D89      		ldd r24,Y+21
 4531 1c26 9E89      		ldd r25,Y+22
 4532 1c28 0E94 0000 		call __mulsf3
 4533 1c2c 7B01      		movw r14,r22
 4534 1c2e 8C01      		movw r16,r24
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4536               	.LM423:
 4537 1c30 9501      		movw r18,r10
 4538 1c32 A601      		movw r20,r12
 4539 1c34 AB8A      		std Y+19,r10
 4540 1c36 BC8A      		std Y+20,r11
 4541 1c38 CD8A      		std Y+21,r12
 4542 1c3a DE8A      		std Y+22,r13
 4543 1c3c 6B89      		ldd r22,Y+19
 4544 1c3e 7C89      		ldd r23,Y+20
 4545 1c40 8D89      		ldd r24,Y+21
 4546 1c42 9E89      		ldd r25,Y+22
 4547 1c44 0E94 0000 		call __mulsf3
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4549               	.LM424:
 4550 1c48 9B01      		movw r18,r22
 4551 1c4a AC01      		movw r20,r24
 4552 1c4c EB8A      		std Y+19,r14
 4553 1c4e FC8A      		std Y+20,r15
 4554 1c50 0D8B      		std Y+21,r16
 4555 1c52 1E8B      		std Y+22,r17
 4556 1c54 6B89      		ldd r22,Y+19
 4557 1c56 7C89      		ldd r23,Y+20
 4558 1c58 8D89      		ldd r24,Y+21
 4559 1c5a 9E89      		ldd r25,Y+22
 4560 1c5c 0E94 0000 		call __addsf3
 4561 1c60 7B01      		movw r14,r22
 4562 1c62 8C01      		movw r16,r24
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4564               	.LM425:
 4565 1c64 9301      		movw r18,r6
 4566 1c66 A401      		movw r20,r8
 4567 1c68 6B8A      		std Y+19,r6
 4568 1c6a 7C8A      		std Y+20,r7
 4569 1c6c 8D8A      		std Y+21,r8
 4570 1c6e 9E8A      		std Y+22,r9
 4571 1c70 6B89      		ldd r22,Y+19
 4572 1c72 7C89      		ldd r23,Y+20
 4573 1c74 8D89      		ldd r24,Y+21
 4574 1c76 9E89      		ldd r25,Y+22
 4575 1c78 0E94 0000 		call __mulsf3
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4577               	.LM426:
 4578 1c7c 9B01      		movw r18,r22
 4579 1c7e AC01      		movw r20,r24
 4580 1c80 EB8A      		std Y+19,r14
 4581 1c82 FC8A      		std Y+20,r15
 4582 1c84 0D8B      		std Y+21,r16
 4583 1c86 1E8B      		std Y+22,r17
 4584 1c88 6B89      		ldd r22,Y+19
 4585 1c8a 7C89      		ldd r23,Y+20
 4586 1c8c 8D89      		ldd r24,Y+21
 4587 1c8e 9E89      		ldd r25,Y+22
 4588 1c90 0E94 0000 		call __addsf3
 4589 1c94 7B01      		movw r14,r22
 4590 1c96 8C01      		movw r16,r24
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4592               	.LM427:
 4593 1c98 2C96      		adiw r28,75-63
 4594 1c9a 2FAD      		ldd r18,Y+63
 4595 1c9c 2C97      		sbiw r28,75-63
 4596 1c9e 2D96      		adiw r28,76-63
 4597 1ca0 3FAD      		ldd r19,Y+63
 4598 1ca2 2D97      		sbiw r28,76-63
 4599 1ca4 2E96      		adiw r28,77-63
 4600 1ca6 4FAD      		ldd r20,Y+63
 4601 1ca8 2E97      		sbiw r28,77-63
 4602 1caa 2F96      		adiw r28,78-63
 4603 1cac 5FAD      		ldd r21,Y+63
 4604 1cae 2F97      		sbiw r28,78-63
 4605 1cb0 2C96      		adiw r28,75-63
 4606 1cb2 8FAD      		ldd r24,Y+63
 4607 1cb4 2C97      		sbiw r28,75-63
 4608 1cb6 8B8B      		std Y+19,r24
 4609 1cb8 2D96      		adiw r28,76-63
 4610 1cba 9FAD      		ldd r25,Y+63
 4611 1cbc 2D97      		sbiw r28,76-63
 4612 1cbe 9C8B      		std Y+20,r25
 4613 1cc0 2E96      		adiw r28,77-63
 4614 1cc2 AFAD      		ldd r26,Y+63
 4615 1cc4 2E97      		sbiw r28,77-63
 4616 1cc6 AD8B      		std Y+21,r26
 4617 1cc8 2F96      		adiw r28,78-63
 4618 1cca BFAD      		ldd r27,Y+63
 4619 1ccc 2F97      		sbiw r28,78-63
 4620 1cce BE8B      		std Y+22,r27
 4621 1cd0 6B89      		ldd r22,Y+19
 4622 1cd2 7C89      		ldd r23,Y+20
 4623 1cd4 8D89      		ldd r24,Y+21
 4624 1cd6 9E89      		ldd r25,Y+22
 4625 1cd8 0E94 0000 		call __mulsf3
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4627               	.LM428:
 4628 1cdc 9B01      		movw r18,r22
 4629 1cde AC01      		movw r20,r24
 4630 1ce0 EB8A      		std Y+19,r14
 4631 1ce2 FC8A      		std Y+20,r15
 4632 1ce4 0D8B      		std Y+21,r16
 4633 1ce6 1E8B      		std Y+22,r17
 4634 1ce8 6B89      		ldd r22,Y+19
 4635 1cea 7C89      		ldd r23,Y+20
 4636 1cec 8D89      		ldd r24,Y+21
 4637 1cee 9E89      		ldd r25,Y+22
 4638 1cf0 0E94 0000 		call __addsf3
 456:mpu6050.c     **** 	hat_dot1 /= norm;
 4640               	.LM429:
 4641 1cf4 6B8B      		std Y+19,r22
 4642 1cf6 7C8B      		std Y+20,r23
 4643 1cf8 8D8B      		std Y+21,r24
 4644 1cfa 9E8B      		std Y+22,r25
 4645 1cfc 6B89      		ldd r22,Y+19
 4646 1cfe 7C89      		ldd r23,Y+20
 4647 1d00 8D89      		ldd r24,Y+21
 4648 1d02 9E89      		ldd r25,Y+22
 4649 1d04 0E94 0000 		call sqrt
 4650 1d08 7B01      		movw r14,r22
 4651 1d0a 8C01      		movw r16,r24
 457:mpu6050.c     **** 	hat_dot2 /= norm;
 4653               	.LM430:
 4654 1d0c 9B01      		movw r18,r22
 4655 1d0e AC01      		movw r20,r24
 4656 1d10 8BA5      		ldd r24,Y+43
 4657 1d12 8B8B      		std Y+19,r24
 4658 1d14 9FA5      		ldd r25,Y+47
 4659 1d16 9C8B      		std Y+20,r25
 4660 1d18 2A96      		adiw r28,73-63
 4661 1d1a AFAD      		ldd r26,Y+63
 4662 1d1c 2A97      		sbiw r28,73-63
 4663 1d1e AD8B      		std Y+21,r26
 4664 1d20 2B96      		adiw r28,74-63
 4665 1d22 BFAD      		ldd r27,Y+63
 4666 1d24 2B97      		sbiw r28,74-63
 4667 1d26 BE8B      		std Y+22,r27
 4668 1d28 6B89      		ldd r22,Y+19
 4669 1d2a 7C89      		ldd r23,Y+20
 4670 1d2c 8D89      		ldd r24,Y+21
 4671 1d2e 9E89      		ldd r25,Y+22
 4672 1d30 0E94 0000 		call __divsf3
 4673 1d34 6B8F      		std Y+27,r22
 4674 1d36 7BAB      		std Y+51,r23
 4675 1d38 8CAB      		std Y+52,r24
 4676 1d3a 9DAB      		std Y+53,r25
 458:mpu6050.c     **** 	hat_dot3 /= norm;
 4678               	.LM431:
 4679 1d3c 9701      		movw r18,r14
 4680 1d3e A801      		movw r20,r16
 4681 1d40 AB8A      		std Y+19,r10
 4682 1d42 BC8A      		std Y+20,r11
 4683 1d44 CD8A      		std Y+21,r12
 4684 1d46 DE8A      		std Y+22,r13
 4685 1d48 6B89      		ldd r22,Y+19
 4686 1d4a 7C89      		ldd r23,Y+20
 4687 1d4c 8D89      		ldd r24,Y+21
 4688 1d4e 9E89      		ldd r25,Y+22
 4689 1d50 0E94 0000 		call __divsf3
 4690 1d54 6BA7      		std Y+43,r22
 4691 1d56 7FA7      		std Y+47,r23
 4692 1d58 2A96      		adiw r28,73-63
 4693 1d5a 8FAF      		std Y+63,r24
 4694 1d5c 2A97      		sbiw r28,73-63
 4695 1d5e 2B96      		adiw r28,74-63
 4696 1d60 9FAF      		std Y+63,r25
 4697 1d62 2B97      		sbiw r28,74-63
 459:mpu6050.c     **** 	hat_dot4 /= norm;
 4699               	.LM432:
 4700 1d64 9701      		movw r18,r14
 4701 1d66 A801      		movw r20,r16
 4702 1d68 6B8A      		std Y+19,r6
 4703 1d6a 7C8A      		std Y+20,r7
 4704 1d6c 8D8A      		std Y+21,r8
 4705 1d6e 9E8A      		std Y+22,r9
 4706 1d70 6B89      		ldd r22,Y+19
 4707 1d72 7C89      		ldd r23,Y+20
 4708 1d74 8D89      		ldd r24,Y+21
 4709 1d76 9E89      		ldd r25,Y+22
 4710 1d78 0E94 0000 		call __divsf3
 4711 1d7c 6896      		adiw r28,87-63
 4712 1d7e 6FAF      		std Y+63,r22
 4713 1d80 6897      		sbiw r28,87-63
 4714 1d82 6996      		adiw r28,88-63
 4715 1d84 7FAF      		std Y+63,r23
 4716 1d86 6997      		sbiw r28,88-63
 4717 1d88 6A96      		adiw r28,89-63
 4718 1d8a 8FAF      		std Y+63,r24
 4719 1d8c 6A97      		sbiw r28,89-63
 4720 1d8e 6B96      		adiw r28,90-63
 4721 1d90 9FAF      		std Y+63,r25
 4722 1d92 6B97      		sbiw r28,90-63
 460:mpu6050.c     **** 
 4724               	.LM433:
 4725 1d94 9701      		movw r18,r14
 4726 1d96 A801      		movw r20,r16
 4727 1d98 2C96      		adiw r28,75-63
 4728 1d9a 8FAD      		ldd r24,Y+63
 4729 1d9c 2C97      		sbiw r28,75-63
 4730 1d9e 8B8B      		std Y+19,r24
 4731 1da0 2D96      		adiw r28,76-63
 4732 1da2 9FAD      		ldd r25,Y+63
 4733 1da4 2D97      		sbiw r28,76-63
 4734 1da6 9C8B      		std Y+20,r25
 4735 1da8 2E96      		adiw r28,77-63
 4736 1daa AFAD      		ldd r26,Y+63
 4737 1dac 2E97      		sbiw r28,77-63
 4738 1dae AD8B      		std Y+21,r26
 4739 1db0 2F96      		adiw r28,78-63
 4740 1db2 BFAD      		ldd r27,Y+63
 4741 1db4 2F97      		sbiw r28,78-63
 4742 1db6 BE8B      		std Y+22,r27
 4743 1db8 6B89      		ldd r22,Y+19
 4744 1dba 7C89      		ldd r23,Y+20
 4745 1dbc 8D89      		ldd r24,Y+21
 4746 1dbe 9E89      		ldd r25,Y+22
 4747 1dc0 0E94 0000 		call __divsf3
 4748 1dc4 2C96      		adiw r28,75-63
 4749 1dc6 6FAF      		std Y+63,r22
 4750 1dc8 2C97      		sbiw r28,75-63
 4751 1dca 2D96      		adiw r28,76-63
 4752 1dcc 7FAF      		std Y+63,r23
 4753 1dce 2D97      		sbiw r28,76-63
 4754 1dd0 2E96      		adiw r28,77-63
 4755 1dd2 8FAF      		std Y+63,r24
 4756 1dd4 2E97      		sbiw r28,77-63
 4757 1dd6 2F96      		adiw r28,78-63
 4758 1dd8 9FAF      		std Y+63,r25
 4759 1dda 2F97      		sbiw r28,78-63
 468:mpu6050.c     **** 	g_bias_y = g_err_y * time_delta * zeta;
 4761               	.LM434:
 4762 1ddc 8090 0000 		lds r8,zeta
 4763 1de0 9090 0000 		lds r9,zeta+1
 4764 1de4 A090 0000 		lds r10,zeta+2
 4765 1de8 B090 0000 		lds r11,zeta+3
 4766               	.LBE180:
 4767               	.LBE184:
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 4769               	.LM435:
 4770 1dec 2BED      		ldi r18,lo8(-37)
 4771 1dee 3FE0      		ldi r19,lo8(15)
 4772 1df0 49E4      		ldi r20,lo8(73)
 4773 1df2 50E4      		ldi r21,lo8(64)
 4774 1df4 6F96      		adiw r28,91-60
 4775 1df6 6CAD      		ldd r22,Y+60
 4776 1df8 7DAD      		ldd r23,Y+61
 4777 1dfa 8EAD      		ldd r24,Y+62
 4778 1dfc 9FAD      		ldd r25,Y+63
 4779 1dfe 6F97      		sbiw r28,91-60
 4780 1e00 0E94 0000 		call __mulsf3
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 4782               	.LM436:
 4783 1e04 20E0      		ldi r18,0
 4784 1e06 30E0      		ldi r19,0
 4785 1e08 44E3      		ldi r20,lo8(52)
 4786 1e0a 53E4      		ldi r21,lo8(67)
 4787 1e0c 6B8B      		std Y+19,r22
 4788 1e0e 7C8B      		std Y+20,r23
 4789 1e10 8D8B      		std Y+21,r24
 4790 1e12 9E8B      		std Y+22,r25
 4791 1e14 6B89      		ldd r22,Y+19
 4792 1e16 7C89      		ldd r23,Y+20
 4793 1e18 8D89      		ldd r24,Y+21
 4794 1e1a 9E89      		ldd r25,Y+22
 4795 1e1c 0E94 0000 		call __divsf3
 4796 1e20 7B01      		movw r14,r22
 4797 1e22 8C01      		movw r16,r24
 4798               	.LBB185:
 4799               	.LBB181:
 463:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 4801               	.LM437:
 4802 1e24 2BA5      		ldd r18,Y+43
 4803 1e26 3FA5      		ldd r19,Y+47
 4804 1e28 2A96      		adiw r28,73-63
 4805 1e2a 4FAD      		ldd r20,Y+63
 4806 1e2c 2A97      		sbiw r28,73-63
 4807 1e2e 2B96      		adiw r28,74-63
 4808 1e30 5FAD      		ldd r21,Y+63
 4809 1e32 2B97      		sbiw r28,74-63
 4810 1e34 8F89      		ldd r24,Y+23
 4811 1e36 8B8B      		std Y+19,r24
 4812 1e38 9EA9      		ldd r25,Y+54
 4813 1e3a 9C8B      		std Y+20,r25
 4814 1e3c AFA9      		ldd r26,Y+55
 4815 1e3e AD8B      		std Y+21,r26
 4816 1e40 B8AD      		ldd r27,Y+56
 4817 1e42 BE8B      		std Y+22,r27
 4818 1e44 6B89      		ldd r22,Y+19
 4819 1e46 7C89      		ldd r23,Y+20
 4820 1e48 8D89      		ldd r24,Y+21
 4821 1e4a 9E89      		ldd r25,Y+22
 4822 1e4c 0E94 0000 		call __mulsf3
 4823 1e50 3B01      		movw r6,r22
 4824 1e52 6C01      		movw r12,r24
 463:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 4826               	.LM438:
 4827 1e54 2B8D      		ldd r18,Y+27
 4828 1e56 3BA9      		ldd r19,Y+51
 4829 1e58 4CA9      		ldd r20,Y+52
 4830 1e5a 5DA9      		ldd r21,Y+53
 4831 1e5c 8F85      		ldd r24,Y+15
 4832 1e5e 8B8B      		std Y+19,r24
 4833 1e60 9F8D      		ldd r25,Y+31
 4834 1e62 9C8B      		std Y+20,r25
 4835 1e64 ABA1      		ldd r26,Y+35
 4836 1e66 AD8B      		std Y+21,r26
 4837 1e68 BFA1      		ldd r27,Y+39
 4838 1e6a BE8B      		std Y+22,r27
 4839 1e6c 6B89      		ldd r22,Y+19
 4840 1e6e 7C89      		ldd r23,Y+20
 4841 1e70 8D89      		ldd r24,Y+21
 4842 1e72 9E89      		ldd r25,Y+22
 4843 1e74 0E94 0000 		call __mulsf3
 463:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 4845               	.LM439:
 4846 1e78 9B01      		movw r18,r22
 4847 1e7a AC01      		movw r20,r24
 4848 1e7c 6B8A      		std Y+19,r6
 4849 1e7e 7C8A      		std Y+20,r7
 4850 1e80 CD8A      		std Y+21,r12
 4851 1e82 DE8A      		std Y+22,r13
 4852 1e84 6B89      		ldd r22,Y+19
 4853 1e86 7C89      		ldd r23,Y+20
 4854 1e88 8D89      		ldd r24,Y+21
 4855 1e8a 9E89      		ldd r25,Y+22
 4856 1e8c 0E94 0000 		call __subsf3
 4857 1e90 3B01      		movw r6,r22
 4858 1e92 6C01      		movw r12,r24
 463:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 4860               	.LM440:
 4861 1e94 2C96      		adiw r28,75-63
 4862 1e96 2FAD      		ldd r18,Y+63
 4863 1e98 2C97      		sbiw r28,75-63
 4864 1e9a 2D96      		adiw r28,76-63
 4865 1e9c 3FAD      		ldd r19,Y+63
 4866 1e9e 2D97      		sbiw r28,76-63
 4867 1ea0 2E96      		adiw r28,77-63
 4868 1ea2 4FAD      		ldd r20,Y+63
 4869 1ea4 2E97      		sbiw r28,77-63
 4870 1ea6 2F96      		adiw r28,78-63
 4871 1ea8 5FAD      		ldd r21,Y+63
 4872 1eaa 2F97      		sbiw r28,78-63
 4873 1eac 2B8A      		std Y+19,r2
 4874 1eae 3C8A      		std Y+20,r3
 4875 1eb0 4D8A      		std Y+21,r4
 4876 1eb2 5E8A      		std Y+22,r5
 4877 1eb4 6B89      		ldd r22,Y+19
 4878 1eb6 7C89      		ldd r23,Y+20
 4879 1eb8 8D89      		ldd r24,Y+21
 4880 1eba 9E89      		ldd r25,Y+22
 4881 1ebc 0E94 0000 		call __mulsf3
 463:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 4883               	.LM441:
 4884 1ec0 9B01      		movw r18,r22
 4885 1ec2 AC01      		movw r20,r24
 4886 1ec4 6B8A      		std Y+19,r6
 4887 1ec6 7C8A      		std Y+20,r7
 4888 1ec8 CD8A      		std Y+21,r12
 4889 1eca DE8A      		std Y+22,r13
 4890 1ecc 6B89      		ldd r22,Y+19
 4891 1ece 7C89      		ldd r23,Y+20
 4892 1ed0 8D89      		ldd r24,Y+21
 4893 1ed2 9E89      		ldd r25,Y+22
 4894 1ed4 0E94 0000 		call __subsf3
 4895 1ed8 3B01      		movw r6,r22
 4896 1eda 6C01      		movw r12,r24
 463:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 4898               	.LM442:
 4899 1edc 6896      		adiw r28,87-63
 4900 1ede 2FAD      		ldd r18,Y+63
 4901 1ee0 6897      		sbiw r28,87-63
 4902 1ee2 6996      		adiw r28,88-63
 4903 1ee4 3FAD      		ldd r19,Y+63
 4904 1ee6 6997      		sbiw r28,88-63
 4905 1ee8 6A96      		adiw r28,89-63
 4906 1eea 4FAD      		ldd r20,Y+63
 4907 1eec 6A97      		sbiw r28,89-63
 4908 1eee 6B96      		adiw r28,90-63
 4909 1ef0 5FAD      		ldd r21,Y+63
 4910 1ef2 6B97      		sbiw r28,90-63
 4911 1ef4 2296      		adiw r28,65-63
 4912 1ef6 8FAD      		ldd r24,Y+63
 4913 1ef8 2297      		sbiw r28,65-63
 4914 1efa 8B8B      		std Y+19,r24
 4915 1efc 2396      		adiw r28,66-63
 4916 1efe 9FAD      		ldd r25,Y+63
 4917 1f00 2397      		sbiw r28,66-63
 4918 1f02 9C8B      		std Y+20,r25
 4919 1f04 2496      		adiw r28,67-63
 4920 1f06 AFAD      		ldd r26,Y+63
 4921 1f08 2497      		sbiw r28,67-63
 4922 1f0a AD8B      		std Y+21,r26
 4923 1f0c 2596      		adiw r28,68-63
 4924 1f0e BFAD      		ldd r27,Y+63
 4925 1f10 2597      		sbiw r28,68-63
 4926 1f12 BE8B      		std Y+22,r27
 4927 1f14 6B89      		ldd r22,Y+19
 4928 1f16 7C89      		ldd r23,Y+20
 4929 1f18 8D89      		ldd r24,Y+21
 4930 1f1a 9E89      		ldd r25,Y+22
 4931 1f1c 0E94 0000 		call __mulsf3
 463:mpu6050.c     **** 	g_err_y = _2q1 * hat_dot3 + _2q2 * hat_dot4 - _2q3 * hat_dot1 - _2q4 * hat_dot2;
 4933               	.LM443:
 4934 1f20 9B01      		movw r18,r22
 4935 1f22 AC01      		movw r20,r24
 4936 1f24 6B8A      		std Y+19,r6
 4937 1f26 7C8A      		std Y+20,r7
 4938 1f28 CD8A      		std Y+21,r12
 4939 1f2a DE8A      		std Y+22,r13
 4940 1f2c 6B89      		ldd r22,Y+19
 4941 1f2e 7C89      		ldd r23,Y+20
 4942 1f30 8D89      		ldd r24,Y+21
 4943 1f32 9E89      		ldd r25,Y+22
 4944 1f34 0E94 0000 		call __addsf3
 468:mpu6050.c     **** 	g_bias_y = g_err_y * time_delta * zeta;
 4946               	.LM444:
 4947 1f38 29AD      		ldd r18,Y+57
 4948 1f3a 3AAD      		ldd r19,Y+58
 4949 1f3c 4BAD      		ldd r20,Y+59
 4950 1f3e 5CAD      		ldd r21,Y+60
 4951 1f40 6B8B      		std Y+19,r22
 4952 1f42 7C8B      		std Y+20,r23
 4953 1f44 8D8B      		std Y+21,r24
 4954 1f46 9E8B      		std Y+22,r25
 4955 1f48 6B89      		ldd r22,Y+19
 4956 1f4a 7C89      		ldd r23,Y+20
 4957 1f4c 8D89      		ldd r24,Y+21
 4958 1f4e 9E89      		ldd r25,Y+22
 4959 1f50 0E94 0000 		call __mulsf3
 468:mpu6050.c     **** 	g_bias_y = g_err_y * time_delta * zeta;
 4961               	.LM445:
 4962 1f54 A501      		movw r20,r10
 4963 1f56 9401      		movw r18,r8
 4964 1f58 6B8B      		std Y+19,r22
 4965 1f5a 7C8B      		std Y+20,r23
 4966 1f5c 8D8B      		std Y+21,r24
 4967 1f5e 9E8B      		std Y+22,r25
 4968 1f60 6B89      		ldd r22,Y+19
 4969 1f62 7C89      		ldd r23,Y+20
 4970 1f64 8D89      		ldd r24,Y+21
 4971 1f66 9E89      		ldd r25,Y+22
 4972 1f68 0E94 0000 		call __mulsf3
 471:mpu6050.c     **** 	gy -= g_bias_y;
 4974               	.LM446:
 4975 1f6c 9B01      		movw r18,r22
 4976 1f6e AC01      		movw r20,r24
 4977 1f70 EB8A      		std Y+19,r14
 4978 1f72 FC8A      		std Y+20,r15
 4979 1f74 0D8B      		std Y+21,r16
 4980 1f76 1E8B      		std Y+22,r17
 4981 1f78 6B89      		ldd r22,Y+19
 4982 1f7a 7C89      		ldd r23,Y+20
 4983 1f7c 8D89      		ldd r24,Y+21
 4984 1f7e 9E89      		ldd r25,Y+22
 4985 1f80 0E94 0000 		call __subsf3
 4986 1f84 6C96      		adiw r28,91-63
 4987 1f86 6FAF      		std Y+63,r22
 4988 1f88 6C97      		sbiw r28,91-63
 4989 1f8a A496      		adiw r28,99-63
 4990 1f8c 7FAF      		std Y+63,r23
 4991 1f8e A497      		sbiw r28,99-63
 4992 1f90 A596      		adiw r28,100-63
 4993 1f92 8FAF      		std Y+63,r24
 4994 1f94 A597      		sbiw r28,100-63
 4995 1f96 A696      		adiw r28,101-63
 4996 1f98 9FAF      		std Y+63,r25
 4997 1f9a A697      		sbiw r28,101-63
 4998               	.LBE181:
 4999               	.LBE185:
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 5001               	.LM447:
 5002 1f9c 2BED      		ldi r18,lo8(-37)
 5003 1f9e 3FE0      		ldi r19,lo8(15)
 5004 1fa0 49E4      		ldi r20,lo8(73)
 5005 1fa2 50E4      		ldi r21,lo8(64)
 5006 1fa4 A396      		adiw r28,95-60
 5007 1fa6 6CAD      		ldd r22,Y+60
 5008 1fa8 7DAD      		ldd r23,Y+61
 5009 1faa 8EAD      		ldd r24,Y+62
 5010 1fac 9FAD      		ldd r25,Y+63
 5011 1fae A397      		sbiw r28,95-60
 5012 1fb0 0E94 0000 		call __mulsf3
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 5014               	.LM448:
 5015 1fb4 20E0      		ldi r18,0
 5016 1fb6 30E0      		ldi r19,0
 5017 1fb8 44E3      		ldi r20,lo8(52)
 5018 1fba 53E4      		ldi r21,lo8(67)
 5019 1fbc 6B8B      		std Y+19,r22
 5020 1fbe 7C8B      		std Y+20,r23
 5021 1fc0 8D8B      		std Y+21,r24
 5022 1fc2 9E8B      		std Y+22,r25
 5023 1fc4 6B89      		ldd r22,Y+19
 5024 1fc6 7C89      		ldd r23,Y+20
 5025 1fc8 8D89      		ldd r24,Y+21
 5026 1fca 9E89      		ldd r25,Y+22
 5027 1fcc 0E94 0000 		call __divsf3
 5028 1fd0 7B01      		movw r14,r22
 5029 1fd2 8C01      		movw r16,r24
 5030               	.LBB186:
 5031               	.LBB182:
 464:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 5033               	.LM449:
 5034 1fd4 6896      		adiw r28,87-63
 5035 1fd6 2FAD      		ldd r18,Y+63
 5036 1fd8 6897      		sbiw r28,87-63
 5037 1fda 6996      		adiw r28,88-63
 5038 1fdc 3FAD      		ldd r19,Y+63
 5039 1fde 6997      		sbiw r28,88-63
 5040 1fe0 6A96      		adiw r28,89-63
 5041 1fe2 4FAD      		ldd r20,Y+63
 5042 1fe4 6A97      		sbiw r28,89-63
 5043 1fe6 6B96      		adiw r28,90-63
 5044 1fe8 5FAD      		ldd r21,Y+63
 5045 1fea 6B97      		sbiw r28,90-63
 5046 1fec 8F89      		ldd r24,Y+23
 5047 1fee 8B8B      		std Y+19,r24
 5048 1ff0 9EA9      		ldd r25,Y+54
 5049 1ff2 9C8B      		std Y+20,r25
 5050 1ff4 AFA9      		ldd r26,Y+55
 5051 1ff6 AD8B      		std Y+21,r26
 5052 1ff8 B8AD      		ldd r27,Y+56
 5053 1ffa BE8B      		std Y+22,r27
 5054 1ffc 6B89      		ldd r22,Y+19
 5055 1ffe 7C89      		ldd r23,Y+20
 5056 2000 8D89      		ldd r24,Y+21
 5057 2002 9E89      		ldd r25,Y+22
 5058 2004 0E94 0000 		call __mulsf3
 5059 2008 3B01      		movw r6,r22
 5060 200a 6C01      		movw r12,r24
 464:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 5062               	.LM450:
 5063 200c 2C96      		adiw r28,75-63
 5064 200e 2FAD      		ldd r18,Y+63
 5065 2010 2C97      		sbiw r28,75-63
 5066 2012 2D96      		adiw r28,76-63
 5067 2014 3FAD      		ldd r19,Y+63
 5068 2016 2D97      		sbiw r28,76-63
 5069 2018 2E96      		adiw r28,77-63
 5070 201a 4FAD      		ldd r20,Y+63
 5071 201c 2E97      		sbiw r28,77-63
 5072 201e 2F96      		adiw r28,78-63
 5073 2020 5FAD      		ldd r21,Y+63
 5074 2022 2F97      		sbiw r28,78-63
 5075 2024 8F85      		ldd r24,Y+15
 5076 2026 8B8B      		std Y+19,r24
 5077 2028 9F8D      		ldd r25,Y+31
 5078 202a 9C8B      		std Y+20,r25
 5079 202c ABA1      		ldd r26,Y+35
 5080 202e AD8B      		std Y+21,r26
 5081 2030 BFA1      		ldd r27,Y+39
 5082 2032 BE8B      		std Y+22,r27
 5083 2034 6B89      		ldd r22,Y+19
 5084 2036 7C89      		ldd r23,Y+20
 5085 2038 8D89      		ldd r24,Y+21
 5086 203a 9E89      		ldd r25,Y+22
 5087 203c 0E94 0000 		call __mulsf3
 464:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 5089               	.LM451:
 5090 2040 9B01      		movw r18,r22
 5091 2042 AC01      		movw r20,r24
 5092 2044 6B8A      		std Y+19,r6
 5093 2046 7C8A      		std Y+20,r7
 5094 2048 CD8A      		std Y+21,r12
 5095 204a DE8A      		std Y+22,r13
 5096 204c 6B89      		ldd r22,Y+19
 5097 204e 7C89      		ldd r23,Y+20
 5098 2050 8D89      		ldd r24,Y+21
 5099 2052 9E89      		ldd r25,Y+22
 5100 2054 0E94 0000 		call __addsf3
 5101 2058 3B01      		movw r6,r22
 5102 205a 6C01      		movw r12,r24
 464:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 5104               	.LM452:
 5105 205c 2B8D      		ldd r18,Y+27
 5106 205e 3BA9      		ldd r19,Y+51
 5107 2060 4CA9      		ldd r20,Y+52
 5108 2062 5DA9      		ldd r21,Y+53
 5109 2064 2B8A      		std Y+19,r2
 5110 2066 3C8A      		std Y+20,r3
 5111 2068 4D8A      		std Y+21,r4
 5112 206a 5E8A      		std Y+22,r5
 5113 206c 6B89      		ldd r22,Y+19
 5114 206e 7C89      		ldd r23,Y+20
 5115 2070 8D89      		ldd r24,Y+21
 5116 2072 9E89      		ldd r25,Y+22
 5117 2074 0E94 0000 		call __mulsf3
 464:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 5119               	.LM453:
 5120 2078 9B01      		movw r18,r22
 5121 207a AC01      		movw r20,r24
 5122 207c 6B8A      		std Y+19,r6
 5123 207e 7C8A      		std Y+20,r7
 5124 2080 CD8A      		std Y+21,r12
 5125 2082 DE8A      		std Y+22,r13
 5126 2084 6B89      		ldd r22,Y+19
 5127 2086 7C89      		ldd r23,Y+20
 5128 2088 8D89      		ldd r24,Y+21
 5129 208a 9E89      		ldd r25,Y+22
 5130 208c 0E94 0000 		call __subsf3
 5131 2090 3B01      		movw r6,r22
 5132 2092 6C01      		movw r12,r24
 464:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 5134               	.LM454:
 5135 2094 2BA5      		ldd r18,Y+43
 5136 2096 3FA5      		ldd r19,Y+47
 5137 2098 2A96      		adiw r28,73-63
 5138 209a 4FAD      		ldd r20,Y+63
 5139 209c 2A97      		sbiw r28,73-63
 5140 209e 2B96      		adiw r28,74-63
 5141 20a0 5FAD      		ldd r21,Y+63
 5142 20a2 2B97      		sbiw r28,74-63
 5143 20a4 2296      		adiw r28,65-63
 5144 20a6 8FAD      		ldd r24,Y+63
 5145 20a8 2297      		sbiw r28,65-63
 5146 20aa 8B8B      		std Y+19,r24
 5147 20ac 2396      		adiw r28,66-63
 5148 20ae 9FAD      		ldd r25,Y+63
 5149 20b0 2397      		sbiw r28,66-63
 5150 20b2 9C8B      		std Y+20,r25
 5151 20b4 2496      		adiw r28,67-63
 5152 20b6 AFAD      		ldd r26,Y+63
 5153 20b8 2497      		sbiw r28,67-63
 5154 20ba AD8B      		std Y+21,r26
 5155 20bc 2596      		adiw r28,68-63
 5156 20be BFAD      		ldd r27,Y+63
 5157 20c0 2597      		sbiw r28,68-63
 5158 20c2 BE8B      		std Y+22,r27
 5159 20c4 6B89      		ldd r22,Y+19
 5160 20c6 7C89      		ldd r23,Y+20
 5161 20c8 8D89      		ldd r24,Y+21
 5162 20ca 9E89      		ldd r25,Y+22
 5163 20cc 0E94 0000 		call __mulsf3
 464:mpu6050.c     **** 	g_err_z = _2q1 * hat_dot4 - _2q2 * hat_dot3 + _2q3 * hat_dot2 - _2q4 * hat_dot1;
 5165               	.LM455:
 5166 20d0 9B01      		movw r18,r22
 5167 20d2 AC01      		movw r20,r24
 5168 20d4 6B8A      		std Y+19,r6
 5169 20d6 7C8A      		std Y+20,r7
 5170 20d8 CD8A      		std Y+21,r12
 5171 20da DE8A      		std Y+22,r13
 5172 20dc 6B89      		ldd r22,Y+19
 5173 20de 7C89      		ldd r23,Y+20
 5174 20e0 8D89      		ldd r24,Y+21
 5175 20e2 9E89      		ldd r25,Y+22
 5176 20e4 0E94 0000 		call __subsf3
 469:mpu6050.c     **** 	g_bias_z = g_err_z * time_delta * zeta;
 5178               	.LM456:
 5179 20e8 29AD      		ldd r18,Y+57
 5180 20ea 3AAD      		ldd r19,Y+58
 5181 20ec 4BAD      		ldd r20,Y+59
 5182 20ee 5CAD      		ldd r21,Y+60
 5183 20f0 6B8B      		std Y+19,r22
 5184 20f2 7C8B      		std Y+20,r23
 5185 20f4 8D8B      		std Y+21,r24
 5186 20f6 9E8B      		std Y+22,r25
 5187 20f8 6B89      		ldd r22,Y+19
 5188 20fa 7C89      		ldd r23,Y+20
 5189 20fc 8D89      		ldd r24,Y+21
 5190 20fe 9E89      		ldd r25,Y+22
 5191 2100 0E94 0000 		call __mulsf3
 469:mpu6050.c     **** 	g_bias_z = g_err_z * time_delta * zeta;
 5193               	.LM457:
 5194 2104 A501      		movw r20,r10
 5195 2106 9401      		movw r18,r8
 5196 2108 6B8B      		std Y+19,r22
 5197 210a 7C8B      		std Y+20,r23
 5198 210c 8D8B      		std Y+21,r24
 5199 210e 9E8B      		std Y+22,r25
 5200 2110 6B89      		ldd r22,Y+19
 5201 2112 7C89      		ldd r23,Y+20
 5202 2114 8D89      		ldd r24,Y+21
 5203 2116 9E89      		ldd r25,Y+22
 5204 2118 0E94 0000 		call __mulsf3
 472:mpu6050.c     **** 	gz -= g_bias_z;
 5206               	.LM458:
 5207 211c 9B01      		movw r18,r22
 5208 211e AC01      		movw r20,r24
 5209 2120 EB8A      		std Y+19,r14
 5210 2122 FC8A      		std Y+20,r15
 5211 2124 0D8B      		std Y+21,r16
 5212 2126 1E8B      		std Y+22,r17
 5213 2128 6B89      		ldd r22,Y+19
 5214 212a 7C89      		ldd r23,Y+20
 5215 212c 8D89      		ldd r24,Y+21
 5216 212e 9E89      		ldd r25,Y+22
 5217 2130 0E94 0000 		call __subsf3
 5218 2134 A096      		adiw r28,95-63
 5219 2136 6FAF      		std Y+63,r22
 5220 2138 A097      		sbiw r28,95-63
 5221 213a A796      		adiw r28,102-63
 5222 213c 7FAF      		std Y+63,r23
 5223 213e A797      		sbiw r28,102-63
 5224 2140 A896      		adiw r28,103-63
 5225 2142 8FAF      		std Y+63,r24
 5226 2144 A897      		sbiw r28,103-63
 5227 2146 A996      		adiw r28,104-63
 5228 2148 9FAF      		std Y+63,r25
 5229 214a A997      		sbiw r28,104-63
 5230               	.LBE182:
 5231               	.LBE186:
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 5233               	.LM459:
 5234 214c 2BED      		ldi r18,lo8(-37)
 5235 214e 3FE0      		ldi r19,lo8(15)
 5236 2150 49E4      		ldi r20,lo8(73)
 5237 2152 50E4      		ldi r21,lo8(64)
 5238 2154 AD96      		adiw r28,105-60
 5239 2156 6CAD      		ldd r22,Y+60
 5240 2158 7DAD      		ldd r23,Y+61
 5241 215a 8EAD      		ldd r24,Y+62
 5242 215c 9FAD      		ldd r25,Y+63
 5243 215e AD97      		sbiw r28,105-60
 5244 2160 0E94 0000 		call __mulsf3
 548:mpu6050.c     **** 	yaw = atan2(2.0f * (q[1] * q[2] + q[0] * q[3]), q[0] * q[0] + q[1] * q[1] - q[2] * q[2] - q[3] * q
 5246               	.LM460:
 5247 2164 20E0      		ldi r18,0
 5248 2166 30E0      		ldi r19,0
 5249 2168 44E3      		ldi r20,lo8(52)
 5250 216a 53E4      		ldi r21,lo8(67)
 5251 216c 6B8B      		std Y+19,r22
 5252 216e 7C8B      		std Y+20,r23
 5253 2170 8D8B      		std Y+21,r24
 5254 2172 9E8B      		std Y+22,r25
 5255 2174 6B89      		ldd r22,Y+19
 5256 2176 7C89      		ldd r23,Y+20
 5257 2178 8D89      		ldd r24,Y+21
 5258 217a 9E89      		ldd r25,Y+22
 5259 217c 0E94 0000 		call __divsf3
 5260 2180 7B01      		movw r14,r22
 5261 2182 8C01      		movw r16,r24
 5262               	.LBB187:
 5263               	.LBB183:
 465:mpu6050.c     **** 
 5265               	.LM461:
 5266 2184 2C96      		adiw r28,75-63
 5267 2186 2FAD      		ldd r18,Y+63
 5268 2188 2C97      		sbiw r28,75-63
 5269 218a 2D96      		adiw r28,76-63
 5270 218c 3FAD      		ldd r19,Y+63
 5271 218e 2D97      		sbiw r28,76-63
 5272 2190 2E96      		adiw r28,77-63
 5273 2192 4FAD      		ldd r20,Y+63
 5274 2194 2E97      		sbiw r28,77-63
 5275 2196 2F96      		adiw r28,78-63
 5276 2198 5FAD      		ldd r21,Y+63
 5277 219a 2F97      		sbiw r28,78-63
 5278 219c 8F89      		ldd r24,Y+23
 5279 219e 8B8B      		std Y+19,r24
 5280 21a0 9EA9      		ldd r25,Y+54
 5281 21a2 9C8B      		std Y+20,r25
 5282 21a4 AFA9      		ldd r26,Y+55
 5283 21a6 AD8B      		std Y+21,r26
 5284 21a8 B8AD      		ldd r27,Y+56
 5285 21aa BE8B      		std Y+22,r27
 5286 21ac 6B89      		ldd r22,Y+19
 5287 21ae 7C89      		ldd r23,Y+20
 5288 21b0 8D89      		ldd r24,Y+21
 5289 21b2 9E89      		ldd r25,Y+22
 5290 21b4 0E94 0000 		call __mulsf3
 5291 21b8 3B01      		movw r6,r22
 5292 21ba 6C01      		movw r12,r24
 465:mpu6050.c     **** 
 5294               	.LM462:
 5295 21bc 6896      		adiw r28,87-63
 5296 21be 2FAD      		ldd r18,Y+63
 5297 21c0 6897      		sbiw r28,87-63
 5298 21c2 6996      		adiw r28,88-63
 5299 21c4 3FAD      		ldd r19,Y+63
 5300 21c6 6997      		sbiw r28,88-63
 5301 21c8 6A96      		adiw r28,89-63
 5302 21ca 4FAD      		ldd r20,Y+63
 5303 21cc 6A97      		sbiw r28,89-63
 5304 21ce 6B96      		adiw r28,90-63
 5305 21d0 5FAD      		ldd r21,Y+63
 5306 21d2 6B97      		sbiw r28,90-63
 5307 21d4 8F85      		ldd r24,Y+15
 5308 21d6 8F8B      		std Y+23,r24
 5309 21d8 9F8D      		ldd r25,Y+31
 5310 21da 988F      		std Y+24,r25
 5311 21dc ABA1      		ldd r26,Y+35
 5312 21de A98F      		std Y+25,r26
 5313 21e0 BFA1      		ldd r27,Y+39
 5314 21e2 BA8F      		std Y+26,r27
 5315 21e4 6F89      		ldd r22,Y+23
 5316 21e6 788D      		ldd r23,Y+24
 5317 21e8 898D      		ldd r24,Y+25
 5318 21ea 9A8D      		ldd r25,Y+26
 5319 21ec 0E94 0000 		call __mulsf3
 465:mpu6050.c     **** 
 5321               	.LM463:
 5322 21f0 9B01      		movw r18,r22
 5323 21f2 AC01      		movw r20,r24
 5324 21f4 6F86      		std Y+15,r6
 5325 21f6 788A      		std Y+16,r7
 5326 21f8 C98A      		std Y+17,r12
 5327 21fa DA8A      		std Y+18,r13
 5328 21fc 6F85      		ldd r22,Y+15
 5329 21fe 7889      		ldd r23,Y+16
 5330 2200 8989      		ldd r24,Y+17
 5331 2202 9A89      		ldd r25,Y+18
 5332 2204 0E94 0000 		call __subsf3
 5333 2208 3B01      		movw r6,r22
 5334 220a 6C01      		movw r12,r24
 465:mpu6050.c     **** 
 5336               	.LM464:
 5337 220c 2BA5      		ldd r18,Y+43
 5338 220e 3FA5      		ldd r19,Y+47
 5339 2210 2A96      		adiw r28,73-63
 5340 2212 4FAD      		ldd r20,Y+63
 5341 2214 2A97      		sbiw r28,73-63
 5342 2216 2B96      		adiw r28,74-63
 5343 2218 5FAD      		ldd r21,Y+63
 5344 221a 2B97      		sbiw r28,74-63
 5345 221c 2F86      		std Y+15,r2
 5346 221e 388A      		std Y+16,r3
 5347 2220 498A      		std Y+17,r4
 5348 2222 5A8A      		std Y+18,r5
 5349 2224 6F85      		ldd r22,Y+15
 5350 2226 7889      		ldd r23,Y+16
 5351 2228 8989      		ldd r24,Y+17
 5352 222a 9A89      		ldd r25,Y+18
 5353 222c 0E94 0000 		call __mulsf3
 465:mpu6050.c     **** 
 5355               	.LM465:
 5356 2230 9B01      		movw r18,r22
 5357 2232 AC01      		movw r20,r24
 5358 2234 6F86      		std Y+15,r6
 5359 2236 788A      		std Y+16,r7
 5360 2238 C98A      		std Y+17,r12
 5361 223a DA8A      		std Y+18,r13
 5362 223c 6F85      		ldd r22,Y+15
 5363 223e 7889      		ldd r23,Y+16
 5364 2240 8989      		ldd r24,Y+17
 5365 2242 9A89      		ldd r25,Y+18
 5366 2244 0E94 0000 		call __addsf3
 5367 2248 3B01      		movw r6,r22
 5368 224a 6C01      		movw r12,r24
 465:mpu6050.c     **** 
 5370               	.LM466:
 5371 224c 2B8D      		ldd r18,Y+27
 5372 224e 3BA9      		ldd r19,Y+51
 5373 2250 4CA9      		ldd r20,Y+52
 5374 2252 5DA9      		ldd r21,Y+53
 5375 2254 2296      		adiw r28,65-63
 5376 2256 8FAD      		ldd r24,Y+63
 5377 2258 2297      		sbiw r28,65-63
 5378 225a 8F87      		std Y+15,r24
 5379 225c 2396      		adiw r28,66-63
 5380 225e 9FAD      		ldd r25,Y+63
 5381 2260 2397      		sbiw r28,66-63
 5382 2262 988B      		std Y+16,r25
 5383 2264 2496      		adiw r28,67-63
 5384 2266 AFAD      		ldd r26,Y+63
 5385 2268 2497      		sbiw r28,67-63
 5386 226a A98B      		std Y+17,r26
 5387 226c 2596      		adiw r28,68-63
 5388 226e BFAD      		ldd r27,Y+63
 5389 2270 2597      		sbiw r28,68-63
 5390 2272 BA8B      		std Y+18,r27
 5391 2274 6F85      		ldd r22,Y+15
 5392 2276 7889      		ldd r23,Y+16
 5393 2278 8989      		ldd r24,Y+17
 5394 227a 9A89      		ldd r25,Y+18
 5395 227c 0E94 0000 		call __mulsf3
 465:mpu6050.c     **** 
 5397               	.LM467:
 5398 2280 9B01      		movw r18,r22
 5399 2282 AC01      		movw r20,r24
 5400 2284 6F86      		std Y+15,r6
 5401 2286 788A      		std Y+16,r7
 5402 2288 C98A      		std Y+17,r12
 5403 228a DA8A      		std Y+18,r13
 5404 228c 6F85      		ldd r22,Y+15
 5405 228e 7889      		ldd r23,Y+16
 5406 2290 8989      		ldd r24,Y+17
 5407 2292 9A89      		ldd r25,Y+18
 5408 2294 0E94 0000 		call __subsf3
 470:mpu6050.c     **** 	gx -= g_bias_x;
 5410               	.LM468:
 5411 2298 29AD      		ldd r18,Y+57
 5412 229a 3AAD      		ldd r19,Y+58
 5413 229c 4BAD      		ldd r20,Y+59
 5414 229e 5CAD      		ldd r21,Y+60
 5415 22a0 6F87      		std Y+15,r22
 5416 22a2 788B      		std Y+16,r23
 5417 22a4 898B      		std Y+17,r24
 5418 22a6 9A8B      		std Y+18,r25
 5419 22a8 6F85      		ldd r22,Y+15
 5420 22aa 7889      		ldd r23,Y+16
 5421 22ac 8989      		ldd r24,Y+17
 5422 22ae 9A89      		ldd r25,Y+18
 5423 22b0 0E94 0000 		call __mulsf3
 470:mpu6050.c     **** 	gx -= g_bias_x;
 5425               	.LM469:
 5426 22b4 A501      		movw r20,r10
 5427 22b6 9401      		movw r18,r8
 5428 22b8 6F87      		std Y+15,r22
 5429 22ba 788B      		std Y+16,r23
 5430 22bc 898B      		std Y+17,r24
 5431 22be 9A8B      		std Y+18,r25
 5432 22c0 6F85      		ldd r22,Y+15
 5433 22c2 7889      		ldd r23,Y+16
 5434 22c4 8989      		ldd r24,Y+17
 5435 22c6 9A89      		ldd r25,Y+18
 5436 22c8 0E94 0000 		call __mulsf3
 473:mpu6050.c     **** 
 5438               	.LM470:
 5439 22cc 9B01      		movw r18,r22
 5440 22ce AC01      		movw r20,r24
 5441 22d0 EF86      		std Y+15,r14
 5442 22d2 F88A      		std Y+16,r15
 5443 22d4 098B      		std Y+17,r16
 5444 22d6 1A8B      		std Y+18,r17
 5445 22d8 6F85      		ldd r22,Y+15
 5446 22da 7889      		ldd r23,Y+16
 5447 22dc 8989      		ldd r24,Y+17
 5448 22de 9A89      		ldd r25,Y+18
 5449 22e0 0E94 0000 		call __subsf3
 5450 22e4 1B01      		movw r2,r22
 5451 22e6 4C01      		movw r8,r24
 475:mpu6050.c     **** 	half_q2 = 0.5f * q2;
 5453               	.LM471:
 5454 22e8 20E0      		ldi r18,0
 5455 22ea 30E0      		ldi r19,0
 5456 22ec 40E0      		ldi r20,0
 5457 22ee 5FE3      		ldi r21,lo8(63)
 5458 22f0 2996      		adiw r28,69-60
 5459 22f2 6CAD      		ldd r22,Y+60
 5460 22f4 7DAD      		ldd r23,Y+61
 5461 22f6 8EAD      		ldd r24,Y+62
 5462 22f8 9FAD      		ldd r25,Y+63
 5463 22fa 2997      		sbiw r28,69-60
 5464 22fc 0E94 0000 		call __mulsf3
 5465 2300 6F8F      		std Y+31,r22
 5466 2302 7BA3      		std Y+35,r23
 5467 2304 8FA3      		std Y+39,r24
 5468 2306 9F8B      		std Y+23,r25
 476:mpu6050.c     **** 	half_q3 = 0.5f * q3;
 5470               	.LM472:
 5471 2308 20E0      		ldi r18,0
 5472 230a 30E0      		ldi r19,0
 5473 230c 40E0      		ldi r20,0
 5474 230e 5FE3      		ldi r21,lo8(63)
 5475 2310 2196      		adiw r28,61-60
 5476 2312 6CAD      		ldd r22,Y+60
 5477 2314 7DAD      		ldd r23,Y+61
 5478 2316 8EAD      		ldd r24,Y+62
 5479 2318 9FAD      		ldd r25,Y+63
 5480 231a 2197      		sbiw r28,61-60
 5481 231c 0E94 0000 		call __mulsf3
 5482 2320 6B01      		movw r12,r22
 5483 2322 7C01      		movw r14,r24
 477:mpu6050.c     **** 	half_q4 = 0.5f * q4;
 5485               	.LM473:
 5486 2324 20E0      		ldi r18,0
 5487 2326 30E0      		ldi r19,0
 5488 2328 40E0      		ldi r20,0
 5489 232a 5FE3      		ldi r21,lo8(63)
 5490 232c 6396      		adiw r28,79-60
 5491 232e 6CAD      		ldd r22,Y+60
 5492 2330 7DAD      		ldd r23,Y+61
 5493 2332 8EAD      		ldd r24,Y+62
 5494 2334 9FAD      		ldd r25,Y+63
 5495 2336 6397      		sbiw r28,79-60
 5496 2338 0E94 0000 		call __mulsf3
 5497 233c 6EAB      		std Y+54,r22
 5498 233e 7FAB      		std Y+55,r23
 5499 2340 88AF      		std Y+56,r24
 5500 2342 2296      		adiw r28,65-63
 5501 2344 9FAF      		std Y+63,r25
 5502 2346 2297      		sbiw r28,65-63
 478:mpu6050.c     **** 
 5504               	.LM474:
 5505 2348 20E0      		ldi r18,0
 5506 234a 30E0      		ldi r19,0
 5507 234c 40E0      		ldi r20,0
 5508 234e 5FE3      		ldi r21,lo8(63)
 5509 2350 6796      		adiw r28,83-60
 5510 2352 6CAD      		ldd r22,Y+60
 5511 2354 7DAD      		ldd r23,Y+61
 5512 2356 8EAD      		ldd r24,Y+62
 5513 2358 9FAD      		ldd r25,Y+63
 5514 235a 6797      		sbiw r28,83-60
 5515 235c 0E94 0000 		call __mulsf3
 5516 2360 2396      		adiw r28,66-63
 5517 2362 6FAF      		std Y+63,r22
 5518 2364 2397      		sbiw r28,66-63
 5519 2366 2496      		adiw r28,67-63
 5520 2368 7FAF      		std Y+63,r23
 5521 236a 2497      		sbiw r28,67-63
 5522 236c 2596      		adiw r28,68-63
 5523 236e 8FAF      		std Y+63,r24
 5524 2370 2597      		sbiw r28,68-63
 5525 2372 9B8B      		std Y+19,r25
 487:mpu6050.c     **** 	q2 += (q_dot2 - (beta * hat_dot2)) * time_delta;
 5527               	.LM475:
 5528 2374 4090 0000 		lds r4,beta
 5529 2378 5090 0000 		lds r5,beta+1
 5530 237c 6090 0000 		lds r6,beta+2
 5531 2380 7090 0000 		lds r7,beta+3
 481:mpu6050.c     **** 	q_dot2 = half_q1 * gx + half_q3 * gz - half_q4 * gy;
 5533               	.LM476:
 5534 2384 A701      		movw r20,r14
 5535 2386 9601      		movw r18,r12
 5536 2388 5058      		subi r21,0x80
 5537 238a 2F87      		std Y+15,r18
 5538 238c 388B      		std Y+16,r19
 5539 238e 498B      		std Y+17,r20
 5540 2390 5A8B      		std Y+18,r21
 481:mpu6050.c     **** 	q_dot2 = half_q1 * gx + half_q3 * gz - half_q4 * gy;
 5542               	.LM477:
 5543 2392 6C96      		adiw r28,91-63
 5544 2394 2FAD      		ldd r18,Y+63
 5545 2396 6C97      		sbiw r28,91-63
 5546 2398 A496      		adiw r28,99-63
 5547 239a 3FAD      		ldd r19,Y+63
 5548 239c A497      		sbiw r28,99-63
 5549 239e A596      		adiw r28,100-63
 5550 23a0 4FAD      		ldd r20,Y+63
 5551 23a2 A597      		sbiw r28,100-63
 5552 23a4 A696      		adiw r28,101-63
 5553 23a6 5FAD      		ldd r21,Y+63
 5554 23a8 A697      		sbiw r28,101-63
 5555 23aa 6F85      		ldd r22,Y+15
 5556 23ac 7889      		ldd r23,Y+16
 5557 23ae 8989      		ldd r24,Y+17
 5558 23b0 9A89      		ldd r25,Y+18
 5559 23b2 0E94 0000 		call __mulsf3
 5560 23b6 5B01      		movw r10,r22
 5561 23b8 8C01      		movw r16,r24
 481:mpu6050.c     **** 	q_dot2 = half_q1 * gx + half_q3 * gz - half_q4 * gy;
 5563               	.LM478:
 5564 23ba 2EA9      		ldd r18,Y+54
 5565 23bc 3FA9      		ldd r19,Y+55
 5566 23be 48AD      		ldd r20,Y+56
 5567 23c0 2296      		adiw r28,65-63
 5568 23c2 5FAD      		ldd r21,Y+63
 5569 23c4 2297      		sbiw r28,65-63
 5570 23c6 A096      		adiw r28,95-63
 5571 23c8 8FAD      		ldd r24,Y+63
 5572 23ca A097      		sbiw r28,95-63
 5573 23cc 8F87      		std Y+15,r24
 5574 23ce A796      		adiw r28,102-63
 5575 23d0 9FAD      		ldd r25,Y+63
 5576 23d2 A797      		sbiw r28,102-63
 5577 23d4 988B      		std Y+16,r25
 5578 23d6 A896      		adiw r28,103-63
 5579 23d8 AFAD      		ldd r26,Y+63
 5580 23da A897      		sbiw r28,103-63
 5581 23dc A98B      		std Y+17,r26
 5582 23de A996      		adiw r28,104-63
 5583 23e0 BFAD      		ldd r27,Y+63
 5584 23e2 A997      		sbiw r28,104-63
 5585 23e4 BA8B      		std Y+18,r27
 5586 23e6 6F85      		ldd r22,Y+15
 5587 23e8 7889      		ldd r23,Y+16
 5588 23ea 8989      		ldd r24,Y+17
 5589 23ec 9A89      		ldd r25,Y+18
 5590 23ee 0E94 0000 		call __mulsf3
 481:mpu6050.c     **** 	q_dot2 = half_q1 * gx + half_q3 * gz - half_q4 * gy;
 5592               	.LM479:
 5593 23f2 9B01      		movw r18,r22
 5594 23f4 AC01      		movw r20,r24
 5595 23f6 AF86      		std Y+15,r10
 5596 23f8 B88A      		std Y+16,r11
 5597 23fa 098B      		std Y+17,r16
 5598 23fc 1A8B      		std Y+18,r17
 5599 23fe 6F85      		ldd r22,Y+15
 5600 2400 7889      		ldd r23,Y+16
 5601 2402 8989      		ldd r24,Y+17
 5602 2404 9A89      		ldd r25,Y+18
 5603 2406 0E94 0000 		call __subsf3
 5604 240a 5B01      		movw r10,r22
 5605 240c 8C01      		movw r16,r24
 481:mpu6050.c     **** 	q_dot2 = half_q1 * gx + half_q3 * gz - half_q4 * gy;
 5607               	.LM480:
 5608 240e 2396      		adiw r28,66-63
 5609 2410 2FAD      		ldd r18,Y+63
 5610 2412 2397      		sbiw r28,66-63
 5611 2414 2496      		adiw r28,67-63
 5612 2416 3FAD      		ldd r19,Y+63
 5613 2418 2497      		sbiw r28,67-63
 5614 241a 2596      		adiw r28,68-63
 5615 241c 4FAD      		ldd r20,Y+63
 5616 241e 2597      		sbiw r28,68-63
 5617 2420 5B89      		ldd r21,Y+19
 5618 2422 2F86      		std Y+15,r2
 5619 2424 388A      		std Y+16,r3
 5620 2426 898A      		std Y+17,r8
 5621 2428 9A8A      		std Y+18,r9
 5622 242a 6F85      		ldd r22,Y+15
 5623 242c 7889      		ldd r23,Y+16
 5624 242e 8989      		ldd r24,Y+17
 5625 2430 9A89      		ldd r25,Y+18
 5626 2432 0E94 0000 		call __mulsf3
 481:mpu6050.c     **** 	q_dot2 = half_q1 * gx + half_q3 * gz - half_q4 * gy;
 5628               	.LM481:
 5629 2436 9B01      		movw r18,r22
 5630 2438 AC01      		movw r20,r24
 5631 243a AF86      		std Y+15,r10
 5632 243c B88A      		std Y+16,r11
 5633 243e 098B      		std Y+17,r16
 5634 2440 1A8B      		std Y+18,r17
 5635 2442 6F85      		ldd r22,Y+15
 5636 2444 7889      		ldd r23,Y+16
 5637 2446 8989      		ldd r24,Y+17
 5638 2448 9A89      		ldd r25,Y+18
 5639 244a 0E94 0000 		call __subsf3
 5640 244e 5B01      		movw r10,r22
 5641 2450 8C01      		movw r16,r24
 487:mpu6050.c     **** 	q2 += (q_dot2 - (beta * hat_dot2)) * time_delta;
 5643               	.LM482:
 5644 2452 A301      		movw r20,r6
 5645 2454 9201      		movw r18,r4
 5646 2456 8B8D      		ldd r24,Y+27
 5647 2458 8F87      		std Y+15,r24
 5648 245a 9BA9      		ldd r25,Y+51
 5649 245c 988B      		std Y+16,r25
 5650 245e ACA9      		ldd r26,Y+52
 5651 2460 A98B      		std Y+17,r26
 5652 2462 BDA9      		ldd r27,Y+53
 5653 2464 BA8B      		std Y+18,r27
 5654 2466 6F85      		ldd r22,Y+15
 5655 2468 7889      		ldd r23,Y+16
 5656 246a 8989      		ldd r24,Y+17
 5657 246c 9A89      		ldd r25,Y+18
 5658 246e 0E94 0000 		call __mulsf3
 487:mpu6050.c     **** 	q2 += (q_dot2 - (beta * hat_dot2)) * time_delta;
 5660               	.LM483:
 5661 2472 9B01      		movw r18,r22
 5662 2474 AC01      		movw r20,r24
 5663 2476 AF86      		std Y+15,r10
 5664 2478 B88A      		std Y+16,r11
 5665 247a 098B      		std Y+17,r16
 5666 247c 1A8B      		std Y+18,r17
 5667 247e 6F85      		ldd r22,Y+15
 5668 2480 7889      		ldd r23,Y+16
 5669 2482 8989      		ldd r24,Y+17
 5670 2484 9A89      		ldd r25,Y+18
 5671 2486 0E94 0000 		call __subsf3
 487:mpu6050.c     **** 	q2 += (q_dot2 - (beta * hat_dot2)) * time_delta;
 5673               	.LM484:
 5674 248a 29AD      		ldd r18,Y+57
 5675 248c 3AAD      		ldd r19,Y+58
 5676 248e 4BAD      		ldd r20,Y+59
 5677 2490 5CAD      		ldd r21,Y+60
 5678 2492 6F87      		std Y+15,r22
 5679 2494 788B      		std Y+16,r23
 5680 2496 898B      		std Y+17,r24
 5681 2498 9A8B      		std Y+18,r25
 5682 249a 6F85      		ldd r22,Y+15
 5683 249c 7889      		ldd r23,Y+16
 5684 249e 8989      		ldd r24,Y+17
 5685 24a0 9A89      		ldd r25,Y+18
 5686 24a2 0E94 0000 		call __mulsf3
 487:mpu6050.c     **** 	q2 += (q_dot2 - (beta * hat_dot2)) * time_delta;
 5688               	.LM485:
 5689 24a6 2996      		adiw r28,69-60
 5690 24a8 2CAD      		ldd r18,Y+60
 5691 24aa 3DAD      		ldd r19,Y+61
 5692 24ac 4EAD      		ldd r20,Y+62
 5693 24ae 5FAD      		ldd r21,Y+63
 5694 24b0 2997      		sbiw r28,69-60
 5695 24b2 6F87      		std Y+15,r22
 5696 24b4 788B      		std Y+16,r23
 5697 24b6 898B      		std Y+17,r24
 5698 24b8 9A8B      		std Y+18,r25
 5699 24ba 6F85      		ldd r22,Y+15
 5700 24bc 7889      		ldd r23,Y+16
 5701 24be 8989      		ldd r24,Y+17
 5702 24c0 9A89      		ldd r25,Y+18
 5703 24c2 0E94 0000 		call __addsf3
 5704 24c6 2696      		adiw r28,69-63
 5705 24c8 6FAF      		std Y+63,r22
 5706 24ca 2697      		sbiw r28,69-63
 5707 24cc 7B8F      		std Y+27,r23
 5708 24ce 8BAB      		std Y+51,r24
 5709 24d0 9CAB      		std Y+52,r25
 482:mpu6050.c     **** 	q_dot3 = half_q1 * gy - half_q2 * gz + half_q4 * gx;
 5711               	.LM486:
 5712 24d2 2F8D      		ldd r18,Y+31
 5713 24d4 3BA1      		ldd r19,Y+35
 5714 24d6 4FA1      		ldd r20,Y+39
 5715 24d8 5F89      		ldd r21,Y+23
 5716 24da 6C96      		adiw r28,91-63
 5717 24dc 8FAD      		ldd r24,Y+63
 5718 24de 6C97      		sbiw r28,91-63
 5719 24e0 8F87      		std Y+15,r24
 5720 24e2 A496      		adiw r28,99-63
 5721 24e4 9FAD      		ldd r25,Y+63
 5722 24e6 A497      		sbiw r28,99-63
 5723 24e8 988B      		std Y+16,r25
 5724 24ea A596      		adiw r28,100-63
 5725 24ec AFAD      		ldd r26,Y+63
 5726 24ee A597      		sbiw r28,100-63
 5727 24f0 A98B      		std Y+17,r26
 5728 24f2 A696      		adiw r28,101-63
 5729 24f4 BFAD      		ldd r27,Y+63
 5730 24f6 A697      		sbiw r28,101-63
 5731 24f8 BA8B      		std Y+18,r27
 5732 24fa 6F85      		ldd r22,Y+15
 5733 24fc 7889      		ldd r23,Y+16
 5734 24fe 8989      		ldd r24,Y+17
 5735 2500 9A89      		ldd r25,Y+18
 5736 2502 0E94 0000 		call __mulsf3
 5737 2506 5B01      		movw r10,r22
 5738 2508 8C01      		movw r16,r24
 482:mpu6050.c     **** 	q_dot3 = half_q1 * gy - half_q2 * gz + half_q4 * gx;
 5740               	.LM487:
 5741 250a 2EA9      		ldd r18,Y+54
 5742 250c 3FA9      		ldd r19,Y+55
 5743 250e 48AD      		ldd r20,Y+56
 5744 2510 2296      		adiw r28,65-63
 5745 2512 5FAD      		ldd r21,Y+63
 5746 2514 2297      		sbiw r28,65-63
 5747 2516 2F86      		std Y+15,r2
 5748 2518 388A      		std Y+16,r3
 5749 251a 898A      		std Y+17,r8
 5750 251c 9A8A      		std Y+18,r9
 5751 251e 6F85      		ldd r22,Y+15
 5752 2520 7889      		ldd r23,Y+16
 5753 2522 8989      		ldd r24,Y+17
 5754 2524 9A89      		ldd r25,Y+18
 5755 2526 0E94 0000 		call __mulsf3
 482:mpu6050.c     **** 	q_dot3 = half_q1 * gy - half_q2 * gz + half_q4 * gx;
 5757               	.LM488:
 5758 252a 9B01      		movw r18,r22
 5759 252c AC01      		movw r20,r24
 5760 252e AF86      		std Y+15,r10
 5761 2530 B88A      		std Y+16,r11
 5762 2532 098B      		std Y+17,r16
 5763 2534 1A8B      		std Y+18,r17
 5764 2536 6F85      		ldd r22,Y+15
 5765 2538 7889      		ldd r23,Y+16
 5766 253a 8989      		ldd r24,Y+17
 5767 253c 9A89      		ldd r25,Y+18
 5768 253e 0E94 0000 		call __addsf3
 5769 2542 5B01      		movw r10,r22
 5770 2544 8C01      		movw r16,r24
 482:mpu6050.c     **** 	q_dot3 = half_q1 * gy - half_q2 * gz + half_q4 * gx;
 5772               	.LM489:
 5773 2546 2396      		adiw r28,66-63
 5774 2548 2FAD      		ldd r18,Y+63
 5775 254a 2397      		sbiw r28,66-63
 5776 254c 2496      		adiw r28,67-63
 5777 254e 3FAD      		ldd r19,Y+63
 5778 2550 2497      		sbiw r28,67-63
 5779 2552 2596      		adiw r28,68-63
 5780 2554 4FAD      		ldd r20,Y+63
 5781 2556 2597      		sbiw r28,68-63
 5782 2558 5B89      		ldd r21,Y+19
 5783 255a A096      		adiw r28,95-63
 5784 255c 8FAD      		ldd r24,Y+63
 5785 255e A097      		sbiw r28,95-63
 5786 2560 8F87      		std Y+15,r24
 5787 2562 A796      		adiw r28,102-63
 5788 2564 9FAD      		ldd r25,Y+63
 5789 2566 A797      		sbiw r28,102-63
 5790 2568 988B      		std Y+16,r25
 5791 256a A896      		adiw r28,103-63
 5792 256c AFAD      		ldd r26,Y+63
 5793 256e A897      		sbiw r28,103-63
 5794 2570 A98B      		std Y+17,r26
 5795 2572 A996      		adiw r28,104-63
 5796 2574 BFAD      		ldd r27,Y+63
 5797 2576 A997      		sbiw r28,104-63
 5798 2578 BA8B      		std Y+18,r27
 5799 257a 6F85      		ldd r22,Y+15
 5800 257c 7889      		ldd r23,Y+16
 5801 257e 8989      		ldd r24,Y+17
 5802 2580 9A89      		ldd r25,Y+18
 5803 2582 0E94 0000 		call __mulsf3
 482:mpu6050.c     **** 	q_dot3 = half_q1 * gy - half_q2 * gz + half_q4 * gx;
 5805               	.LM490:
 5806 2586 9B01      		movw r18,r22
 5807 2588 AC01      		movw r20,r24
 5808 258a AF86      		std Y+15,r10
 5809 258c B88A      		std Y+16,r11
 5810 258e 098B      		std Y+17,r16
 5811 2590 1A8B      		std Y+18,r17
 5812 2592 6F85      		ldd r22,Y+15
 5813 2594 7889      		ldd r23,Y+16
 5814 2596 8989      		ldd r24,Y+17
 5815 2598 9A89      		ldd r25,Y+18
 5816 259a 0E94 0000 		call __subsf3
 5817 259e 5B01      		movw r10,r22
 5818 25a0 8C01      		movw r16,r24
 488:mpu6050.c     **** 	q3 += (q_dot3 - (beta * hat_dot3)) * time_delta;
 5820               	.LM491:
 5821 25a2 A301      		movw r20,r6
 5822 25a4 9201      		movw r18,r4
 5823 25a6 8BA5      		ldd r24,Y+43
 5824 25a8 8F87      		std Y+15,r24
 5825 25aa 9FA5      		ldd r25,Y+47
 5826 25ac 988B      		std Y+16,r25
 5827 25ae 2A96      		adiw r28,73-63
 5828 25b0 AFAD      		ldd r26,Y+63
 5829 25b2 2A97      		sbiw r28,73-63
 5830 25b4 A98B      		std Y+17,r26
 5831 25b6 2B96      		adiw r28,74-63
 5832 25b8 BFAD      		ldd r27,Y+63
 5833 25ba 2B97      		sbiw r28,74-63
 5834 25bc BA8B      		std Y+18,r27
 5835 25be 6F85      		ldd r22,Y+15
 5836 25c0 7889      		ldd r23,Y+16
 5837 25c2 8989      		ldd r24,Y+17
 5838 25c4 9A89      		ldd r25,Y+18
 5839 25c6 0E94 0000 		call __mulsf3
 488:mpu6050.c     **** 	q3 += (q_dot3 - (beta * hat_dot3)) * time_delta;
 5841               	.LM492:
 5842 25ca 9B01      		movw r18,r22
 5843 25cc AC01      		movw r20,r24
 5844 25ce AF86      		std Y+15,r10
 5845 25d0 B88A      		std Y+16,r11
 5846 25d2 098B      		std Y+17,r16
 5847 25d4 1A8B      		std Y+18,r17
 5848 25d6 6F85      		ldd r22,Y+15
 5849 25d8 7889      		ldd r23,Y+16
 5850 25da 8989      		ldd r24,Y+17
 5851 25dc 9A89      		ldd r25,Y+18
 5852 25de 0E94 0000 		call __subsf3
 488:mpu6050.c     **** 	q3 += (q_dot3 - (beta * hat_dot3)) * time_delta;
 5854               	.LM493:
 5855 25e2 29AD      		ldd r18,Y+57
 5856 25e4 3AAD      		ldd r19,Y+58
 5857 25e6 4BAD      		ldd r20,Y+59
 5858 25e8 5CAD      		ldd r21,Y+60
 5859 25ea 6F87      		std Y+15,r22
 5860 25ec 788B      		std Y+16,r23
 5861 25ee 898B      		std Y+17,r24
 5862 25f0 9A8B      		std Y+18,r25
 5863 25f2 6F85      		ldd r22,Y+15
 5864 25f4 7889      		ldd r23,Y+16
 5865 25f6 8989      		ldd r24,Y+17
 5866 25f8 9A89      		ldd r25,Y+18
 5867 25fa 0E94 0000 		call __mulsf3
 488:mpu6050.c     **** 	q3 += (q_dot3 - (beta * hat_dot3)) * time_delta;
 5869               	.LM494:
 5870 25fe 2196      		adiw r28,61-60
 5871 2600 2CAD      		ldd r18,Y+60
 5872 2602 3DAD      		ldd r19,Y+61
 5873 2604 4EAD      		ldd r20,Y+62
 5874 2606 5FAD      		ldd r21,Y+63
 5875 2608 2197      		sbiw r28,61-60
 5876 260a 6F87      		std Y+15,r22
 5877 260c 788B      		std Y+16,r23
 5878 260e 898B      		std Y+17,r24
 5879 2610 9A8B      		std Y+18,r25
 5880 2612 6F85      		ldd r22,Y+15
 5881 2614 7889      		ldd r23,Y+16
 5882 2616 8989      		ldd r24,Y+17
 5883 2618 9A89      		ldd r25,Y+18
 5884 261a 0E94 0000 		call __addsf3
 5885 261e 6DAF      		std Y+61,r22
 5886 2620 7DAB      		std Y+53,r23
 5887 2622 8BA7      		std Y+43,r24
 5888 2624 9FA7      		std Y+47,r25
 483:mpu6050.c     **** 	q_dot4 = half_q1 * gz + half_q2 * gy - half_q3 * gx;
 5890               	.LM495:
 5891 2626 2F8D      		ldd r18,Y+31
 5892 2628 3BA1      		ldd r19,Y+35
 5893 262a 4FA1      		ldd r20,Y+39
 5894 262c 5F89      		ldd r21,Y+23
 5895 262e A096      		adiw r28,95-63
 5896 2630 8FAD      		ldd r24,Y+63
 5897 2632 A097      		sbiw r28,95-63
 5898 2634 8F87      		std Y+15,r24
 5899 2636 A796      		adiw r28,102-63
 5900 2638 9FAD      		ldd r25,Y+63
 5901 263a A797      		sbiw r28,102-63
 5902 263c 988B      		std Y+16,r25
 5903 263e A896      		adiw r28,103-63
 5904 2640 AFAD      		ldd r26,Y+63
 5905 2642 A897      		sbiw r28,103-63
 5906 2644 A98B      		std Y+17,r26
 5907 2646 A996      		adiw r28,104-63
 5908 2648 BFAD      		ldd r27,Y+63
 5909 264a A997      		sbiw r28,104-63
 5910 264c BA8B      		std Y+18,r27
 5911 264e 6F85      		ldd r22,Y+15
 5912 2650 7889      		ldd r23,Y+16
 5913 2652 8989      		ldd r24,Y+17
 5914 2654 9A89      		ldd r25,Y+18
 5915 2656 0E94 0000 		call __mulsf3
 5916 265a 5B01      		movw r10,r22
 5917 265c 8C01      		movw r16,r24
 483:mpu6050.c     **** 	q_dot4 = half_q1 * gz + half_q2 * gy - half_q3 * gx;
 5919               	.LM496:
 5920 265e A701      		movw r20,r14
 5921 2660 9601      		movw r18,r12
 5922 2662 2F86      		std Y+15,r2
 5923 2664 388A      		std Y+16,r3
 5924 2666 898A      		std Y+17,r8
 5925 2668 9A8A      		std Y+18,r9
 5926 266a 6F85      		ldd r22,Y+15
 5927 266c 7889      		ldd r23,Y+16
 5928 266e 8989      		ldd r24,Y+17
 5929 2670 9A89      		ldd r25,Y+18
 5930 2672 0E94 0000 		call __mulsf3
 483:mpu6050.c     **** 	q_dot4 = half_q1 * gz + half_q2 * gy - half_q3 * gx;
 5932               	.LM497:
 5933 2676 9B01      		movw r18,r22
 5934 2678 AC01      		movw r20,r24
 5935 267a AF86      		std Y+15,r10
 5936 267c B88A      		std Y+16,r11
 5937 267e 098B      		std Y+17,r16
 5938 2680 1A8B      		std Y+18,r17
 5939 2682 6F85      		ldd r22,Y+15
 5940 2684 7889      		ldd r23,Y+16
 5941 2686 8989      		ldd r24,Y+17
 5942 2688 9A89      		ldd r25,Y+18
 5943 268a 0E94 0000 		call __subsf3
 5944 268e 5B01      		movw r10,r22
 5945 2690 8C01      		movw r16,r24
 483:mpu6050.c     **** 	q_dot4 = half_q1 * gz + half_q2 * gy - half_q3 * gx;
 5947               	.LM498:
 5948 2692 2396      		adiw r28,66-63
 5949 2694 2FAD      		ldd r18,Y+63
 5950 2696 2397      		sbiw r28,66-63
 5951 2698 2496      		adiw r28,67-63
 5952 269a 3FAD      		ldd r19,Y+63
 5953 269c 2497      		sbiw r28,67-63
 5954 269e 2596      		adiw r28,68-63
 5955 26a0 4FAD      		ldd r20,Y+63
 5956 26a2 2597      		sbiw r28,68-63
 5957 26a4 5B89      		ldd r21,Y+19
 5958 26a6 6C96      		adiw r28,91-63
 5959 26a8 8FAD      		ldd r24,Y+63
 5960 26aa 6C97      		sbiw r28,91-63
 5961 26ac 8F87      		std Y+15,r24
 5962 26ae A496      		adiw r28,99-63
 5963 26b0 9FAD      		ldd r25,Y+63
 5964 26b2 A497      		sbiw r28,99-63
 5965 26b4 988B      		std Y+16,r25
 5966 26b6 A596      		adiw r28,100-63
 5967 26b8 AFAD      		ldd r26,Y+63
 5968 26ba A597      		sbiw r28,100-63
 5969 26bc A98B      		std Y+17,r26
 5970 26be A696      		adiw r28,101-63
 5971 26c0 BFAD      		ldd r27,Y+63
 5972 26c2 A697      		sbiw r28,101-63
 5973 26c4 BA8B      		std Y+18,r27
 5974 26c6 6F85      		ldd r22,Y+15
 5975 26c8 7889      		ldd r23,Y+16
 5976 26ca 8989      		ldd r24,Y+17
 5977 26cc 9A89      		ldd r25,Y+18
 5978 26ce 0E94 0000 		call __mulsf3
 483:mpu6050.c     **** 	q_dot4 = half_q1 * gz + half_q2 * gy - half_q3 * gx;
 5980               	.LM499:
 5981 26d2 9B01      		movw r18,r22
 5982 26d4 AC01      		movw r20,r24
 5983 26d6 AF86      		std Y+15,r10
 5984 26d8 B88A      		std Y+16,r11
 5985 26da 098B      		std Y+17,r16
 5986 26dc 1A8B      		std Y+18,r17
 5987 26de 6F85      		ldd r22,Y+15
 5988 26e0 7889      		ldd r23,Y+16
 5989 26e2 8989      		ldd r24,Y+17
 5990 26e4 9A89      		ldd r25,Y+18
 5991 26e6 0E94 0000 		call __addsf3
 5992 26ea 5B01      		movw r10,r22
 5993 26ec 8C01      		movw r16,r24
 489:mpu6050.c     **** 	q4 += (q_dot4 - (beta * hat_dot4)) * time_delta;
 5995               	.LM500:
 5996 26ee A301      		movw r20,r6
 5997 26f0 9201      		movw r18,r4
 5998 26f2 6896      		adiw r28,87-63
 5999 26f4 8FAD      		ldd r24,Y+63
 6000 26f6 6897      		sbiw r28,87-63
 6001 26f8 8F87      		std Y+15,r24
 6002 26fa 6996      		adiw r28,88-63
 6003 26fc 9FAD      		ldd r25,Y+63
 6004 26fe 6997      		sbiw r28,88-63
 6005 2700 988B      		std Y+16,r25
 6006 2702 6A96      		adiw r28,89-63
 6007 2704 AFAD      		ldd r26,Y+63
 6008 2706 6A97      		sbiw r28,89-63
 6009 2708 A98B      		std Y+17,r26
 6010 270a 6B96      		adiw r28,90-63
 6011 270c BFAD      		ldd r27,Y+63
 6012 270e 6B97      		sbiw r28,90-63
 6013 2710 BA8B      		std Y+18,r27
 6014 2712 6F85      		ldd r22,Y+15
 6015 2714 7889      		ldd r23,Y+16
 6016 2716 8989      		ldd r24,Y+17
 6017 2718 9A89      		ldd r25,Y+18
 6018 271a 0E94 0000 		call __mulsf3
 489:mpu6050.c     **** 	q4 += (q_dot4 - (beta * hat_dot4)) * time_delta;
 6020               	.LM501:
 6021 271e 9B01      		movw r18,r22
 6022 2720 AC01      		movw r20,r24
 6023 2722 AF86      		std Y+15,r10
 6024 2724 B88A      		std Y+16,r11
 6025 2726 098B      		std Y+17,r16
 6026 2728 1A8B      		std Y+18,r17
 6027 272a 6F85      		ldd r22,Y+15
 6028 272c 7889      		ldd r23,Y+16
 6029 272e 8989      		ldd r24,Y+17
 6030 2730 9A89      		ldd r25,Y+18
 6031 2732 0E94 0000 		call __subsf3
 489:mpu6050.c     **** 	q4 += (q_dot4 - (beta * hat_dot4)) * time_delta;
 6033               	.LM502:
 6034 2736 29AD      		ldd r18,Y+57
 6035 2738 3AAD      		ldd r19,Y+58
 6036 273a 4BAD      		ldd r20,Y+59
 6037 273c 5CAD      		ldd r21,Y+60
 6038 273e 6F87      		std Y+15,r22
 6039 2740 788B      		std Y+16,r23
 6040 2742 898B      		std Y+17,r24
 6041 2744 9A8B      		std Y+18,r25
 6042 2746 6F85      		ldd r22,Y+15
 6043 2748 7889      		ldd r23,Y+16
 6044 274a 8989      		ldd r24,Y+17
 6045 274c 9A89      		ldd r25,Y+18
 6046 274e 0E94 0000 		call __mulsf3
 489:mpu6050.c     **** 	q4 += (q_dot4 - (beta * hat_dot4)) * time_delta;
 6048               	.LM503:
 6049 2752 6396      		adiw r28,79-60
 6050 2754 2CAD      		ldd r18,Y+60
 6051 2756 3DAD      		ldd r19,Y+61
 6052 2758 4EAD      		ldd r20,Y+62
 6053 275a 5FAD      		ldd r21,Y+63
 6054 275c 6397      		sbiw r28,79-60
 6055 275e 6F87      		std Y+15,r22
 6056 2760 788B      		std Y+16,r23
 6057 2762 898B      		std Y+17,r24
 6058 2764 9A8B      		std Y+18,r25
 6059 2766 6F85      		ldd r22,Y+15
 6060 2768 7889      		ldd r23,Y+16
 6061 276a 8989      		ldd r24,Y+17
 6062 276c 9A89      		ldd r25,Y+18
 6063 276e 0E94 0000 		call __addsf3
 6064 2772 5B01      		movw r10,r22
 6065 2774 8C01      		movw r16,r24
 484:mpu6050.c     **** 
 6067               	.LM504:
 6068 2776 2F8D      		ldd r18,Y+31
 6069 2778 3BA1      		ldd r19,Y+35
 6070 277a 4FA1      		ldd r20,Y+39
 6071 277c 5F89      		ldd r21,Y+23
 6072 277e 2F86      		std Y+15,r2
 6073 2780 388A      		std Y+16,r3
 6074 2782 898A      		std Y+17,r8
 6075 2784 9A8A      		std Y+18,r9
 6076 2786 6F85      		ldd r22,Y+15
 6077 2788 7889      		ldd r23,Y+16
 6078 278a 8989      		ldd r24,Y+17
 6079 278c 9A89      		ldd r25,Y+18
 6080 278e 0E94 0000 		call __mulsf3
 6081 2792 1B01      		movw r2,r22
 6082 2794 4C01      		movw r8,r24
 484:mpu6050.c     **** 
 6084               	.LM505:
 6085 2796 A701      		movw r20,r14
 6086 2798 9601      		movw r18,r12
 6087 279a A096      		adiw r28,95-63
 6088 279c 8FAD      		ldd r24,Y+63
 6089 279e A097      		sbiw r28,95-63
 6090 27a0 8F87      		std Y+15,r24
 6091 27a2 A796      		adiw r28,102-63
 6092 27a4 9FAD      		ldd r25,Y+63
 6093 27a6 A797      		sbiw r28,102-63
 6094 27a8 988B      		std Y+16,r25
 6095 27aa A896      		adiw r28,103-63
 6096 27ac AFAD      		ldd r26,Y+63
 6097 27ae A897      		sbiw r28,103-63
 6098 27b0 A98B      		std Y+17,r26
 6099 27b2 A996      		adiw r28,104-63
 6100 27b4 BFAD      		ldd r27,Y+63
 6101 27b6 A997      		sbiw r28,104-63
 6102 27b8 BA8B      		std Y+18,r27
 6103 27ba 6F85      		ldd r22,Y+15
 6104 27bc 7889      		ldd r23,Y+16
 6105 27be 8989      		ldd r24,Y+17
 6106 27c0 9A89      		ldd r25,Y+18
 6107 27c2 0E94 0000 		call __mulsf3
 484:mpu6050.c     **** 
 6109               	.LM506:
 6110 27c6 9B01      		movw r18,r22
 6111 27c8 AC01      		movw r20,r24
 6112 27ca 2F86      		std Y+15,r2
 6113 27cc 388A      		std Y+16,r3
 6114 27ce 898A      		std Y+17,r8
 6115 27d0 9A8A      		std Y+18,r9
 6116 27d2 6F85      		ldd r22,Y+15
 6117 27d4 7889      		ldd r23,Y+16
 6118 27d6 8989      		ldd r24,Y+17
 6119 27d8 9A89      		ldd r25,Y+18
 6120 27da 0E94 0000 		call __addsf3
 6121 27de 6B01      		movw r12,r22
 6122 27e0 7C01      		movw r14,r24
 484:mpu6050.c     **** 
 6124               	.LM507:
 6125 27e2 2EA9      		ldd r18,Y+54
 6126 27e4 3FA9      		ldd r19,Y+55
 6127 27e6 48AD      		ldd r20,Y+56
 6128 27e8 2296      		adiw r28,65-63
 6129 27ea 5FAD      		ldd r21,Y+63
 6130 27ec 2297      		sbiw r28,65-63
 6131 27ee 6C96      		adiw r28,91-63
 6132 27f0 8FAD      		ldd r24,Y+63
 6133 27f2 6C97      		sbiw r28,91-63
 6134 27f4 8F87      		std Y+15,r24
 6135 27f6 A496      		adiw r28,99-63
 6136 27f8 9FAD      		ldd r25,Y+63
 6137 27fa A497      		sbiw r28,99-63
 6138 27fc 988B      		std Y+16,r25
 6139 27fe A596      		adiw r28,100-63
 6140 2800 AFAD      		ldd r26,Y+63
 6141 2802 A597      		sbiw r28,100-63
 6142 2804 A98B      		std Y+17,r26
 6143 2806 A696      		adiw r28,101-63
 6144 2808 BFAD      		ldd r27,Y+63
 6145 280a A697      		sbiw r28,101-63
 6146 280c BA8B      		std Y+18,r27
 6147 280e 6F85      		ldd r22,Y+15
 6148 2810 7889      		ldd r23,Y+16
 6149 2812 8989      		ldd r24,Y+17
 6150 2814 9A89      		ldd r25,Y+18
 6151 2816 0E94 0000 		call __mulsf3
 484:mpu6050.c     **** 
 6153               	.LM508:
 6154 281a 9B01      		movw r18,r22
 6155 281c AC01      		movw r20,r24
 6156 281e CF86      		std Y+15,r12
 6157 2820 D88A      		std Y+16,r13
 6158 2822 E98A      		std Y+17,r14
 6159 2824 FA8A      		std Y+18,r15
 6160 2826 6F85      		ldd r22,Y+15
 6161 2828 7889      		ldd r23,Y+16
 6162 282a 8989      		ldd r24,Y+17
 6163 282c 9A89      		ldd r25,Y+18
 6164 282e 0E94 0000 		call __subsf3
 6165 2832 6B01      		movw r12,r22
 6166 2834 7C01      		movw r14,r24
 490:mpu6050.c     **** 
 6168               	.LM509:
 6169 2836 A301      		movw r20,r6
 6170 2838 9201      		movw r18,r4
 6171 283a 2C96      		adiw r28,75-63
 6172 283c 8FAD      		ldd r24,Y+63
 6173 283e 2C97      		sbiw r28,75-63
 6174 2840 8F87      		std Y+15,r24
 6175 2842 2D96      		adiw r28,76-63
 6176 2844 9FAD      		ldd r25,Y+63
 6177 2846 2D97      		sbiw r28,76-63
 6178 2848 988B      		std Y+16,r25
 6179 284a 2E96      		adiw r28,77-63
 6180 284c AFAD      		ldd r26,Y+63
 6181 284e 2E97      		sbiw r28,77-63
 6182 2850 A98B      		std Y+17,r26
 6183 2852 2F96      		adiw r28,78-63
 6184 2854 BFAD      		ldd r27,Y+63
 6185 2856 2F97      		sbiw r28,78-63
 6186 2858 BA8B      		std Y+18,r27
 6187 285a 6F85      		ldd r22,Y+15
 6188 285c 7889      		ldd r23,Y+16
 6189 285e 8989      		ldd r24,Y+17
 6190 2860 9A89      		ldd r25,Y+18
 6191 2862 0E94 0000 		call __mulsf3
 490:mpu6050.c     **** 
 6193               	.LM510:
 6194 2866 9B01      		movw r18,r22
 6195 2868 AC01      		movw r20,r24
 6196 286a CF86      		std Y+15,r12
 6197 286c D88A      		std Y+16,r13
 6198 286e E98A      		std Y+17,r14
 6199 2870 FA8A      		std Y+18,r15
 6200 2872 6F85      		ldd r22,Y+15
 6201 2874 7889      		ldd r23,Y+16
 6202 2876 8989      		ldd r24,Y+17
 6203 2878 9A89      		ldd r25,Y+18
 6204 287a 0E94 0000 		call __subsf3
 490:mpu6050.c     **** 
 6206               	.LM511:
 6207 287e 29AD      		ldd r18,Y+57
 6208 2880 3AAD      		ldd r19,Y+58
 6209 2882 4BAD      		ldd r20,Y+59
 6210 2884 5CAD      		ldd r21,Y+60
 6211 2886 6F87      		std Y+15,r22
 6212 2888 788B      		std Y+16,r23
 6213 288a 898B      		std Y+17,r24
 6214 288c 9A8B      		std Y+18,r25
 6215 288e 6F85      		ldd r22,Y+15
 6216 2890 7889      		ldd r23,Y+16
 6217 2892 8989      		ldd r24,Y+17
 6218 2894 9A89      		ldd r25,Y+18
 6219 2896 0E94 0000 		call __mulsf3
 490:mpu6050.c     **** 
 6221               	.LM512:
 6222 289a 6796      		adiw r28,83-60
 6223 289c 2CAD      		ldd r18,Y+60
 6224 289e 3DAD      		ldd r19,Y+61
 6225 28a0 4EAD      		ldd r20,Y+62
 6226 28a2 5FAD      		ldd r21,Y+63
 6227 28a4 6797      		sbiw r28,83-60
 6228 28a6 6F87      		std Y+15,r22
 6229 28a8 788B      		std Y+16,r23
 6230 28aa 898B      		std Y+17,r24
 6231 28ac 9A8B      		std Y+18,r25
 6232 28ae 6F85      		ldd r22,Y+15
 6233 28b0 7889      		ldd r23,Y+16
 6234 28b2 8989      		ldd r24,Y+17
 6235 28b4 9A89      		ldd r25,Y+18
 6236 28b6 0E94 0000 		call __addsf3
 6237 28ba 3B01      		movw r6,r22
 6238 28bc 4C01      		movw r8,r24
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6240               	.LM513:
 6241 28be 2696      		adiw r28,69-63
 6242 28c0 2FAD      		ldd r18,Y+63
 6243 28c2 2697      		sbiw r28,69-63
 6244 28c4 3B8D      		ldd r19,Y+27
 6245 28c6 4BA9      		ldd r20,Y+51
 6246 28c8 5CA9      		ldd r21,Y+52
 6247 28ca 2696      		adiw r28,69-63
 6248 28cc 8FAD      		ldd r24,Y+63
 6249 28ce 2697      		sbiw r28,69-63
 6250 28d0 8F87      		std Y+15,r24
 6251 28d2 9B8D      		ldd r25,Y+27
 6252 28d4 988B      		std Y+16,r25
 6253 28d6 ABA9      		ldd r26,Y+51
 6254 28d8 A98B      		std Y+17,r26
 6255 28da BCA9      		ldd r27,Y+52
 6256 28dc BA8B      		std Y+18,r27
 6257 28de 6F85      		ldd r22,Y+15
 6258 28e0 7889      		ldd r23,Y+16
 6259 28e2 8989      		ldd r24,Y+17
 6260 28e4 9A89      		ldd r25,Y+18
 6261 28e6 0E94 0000 		call __mulsf3
 6262 28ea 6B01      		movw r12,r22
 6263 28ec 7C01      		movw r14,r24
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6265               	.LM514:
 6266 28ee 2DAD      		ldd r18,Y+61
 6267 28f0 3DA9      		ldd r19,Y+53
 6268 28f2 4BA5      		ldd r20,Y+43
 6269 28f4 5FA5      		ldd r21,Y+47
 6270 28f6 8DAD      		ldd r24,Y+61
 6271 28f8 8F87      		std Y+15,r24
 6272 28fa 9DA9      		ldd r25,Y+53
 6273 28fc 988B      		std Y+16,r25
 6274 28fe ABA5      		ldd r26,Y+43
 6275 2900 A98B      		std Y+17,r26
 6276 2902 BFA5      		ldd r27,Y+47
 6277 2904 BA8B      		std Y+18,r27
 6278 2906 6F85      		ldd r22,Y+15
 6279 2908 7889      		ldd r23,Y+16
 6280 290a 8989      		ldd r24,Y+17
 6281 290c 9A89      		ldd r25,Y+18
 6282 290e 0E94 0000 		call __mulsf3
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6284               	.LM515:
 6285 2912 9B01      		movw r18,r22
 6286 2914 AC01      		movw r20,r24
 6287 2916 CF86      		std Y+15,r12
 6288 2918 D88A      		std Y+16,r13
 6289 291a E98A      		std Y+17,r14
 6290 291c FA8A      		std Y+18,r15
 6291 291e 6F85      		ldd r22,Y+15
 6292 2920 7889      		ldd r23,Y+16
 6293 2922 8989      		ldd r24,Y+17
 6294 2924 9A89      		ldd r25,Y+18
 6295 2926 0E94 0000 		call __addsf3
 6296 292a 6B01      		movw r12,r22
 6297 292c 7C01      		movw r14,r24
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6299               	.LM516:
 6300 292e 9501      		movw r18,r10
 6301 2930 A801      		movw r20,r16
 6302 2932 AF86      		std Y+15,r10
 6303 2934 B88A      		std Y+16,r11
 6304 2936 098B      		std Y+17,r16
 6305 2938 1A8B      		std Y+18,r17
 6306 293a 6F85      		ldd r22,Y+15
 6307 293c 7889      		ldd r23,Y+16
 6308 293e 8989      		ldd r24,Y+17
 6309 2940 9A89      		ldd r25,Y+18
 6310 2942 0E94 0000 		call __mulsf3
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6312               	.LM517:
 6313 2946 9B01      		movw r18,r22
 6314 2948 AC01      		movw r20,r24
 6315 294a CF86      		std Y+15,r12
 6316 294c D88A      		std Y+16,r13
 6317 294e E98A      		std Y+17,r14
 6318 2950 FA8A      		std Y+18,r15
 6319 2952 6F85      		ldd r22,Y+15
 6320 2954 7889      		ldd r23,Y+16
 6321 2956 8989      		ldd r24,Y+17
 6322 2958 9A89      		ldd r25,Y+18
 6323 295a 0E94 0000 		call __addsf3
 6324 295e 6B01      		movw r12,r22
 6325 2960 7C01      		movw r14,r24
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6327               	.LM518:
 6328 2962 9301      		movw r18,r6
 6329 2964 A401      		movw r20,r8
 6330 2966 6F86      		std Y+15,r6
 6331 2968 788A      		std Y+16,r7
 6332 296a 898A      		std Y+17,r8
 6333 296c 9A8A      		std Y+18,r9
 6334 296e 6F85      		ldd r22,Y+15
 6335 2970 7889      		ldd r23,Y+16
 6336 2972 8989      		ldd r24,Y+17
 6337 2974 9A89      		ldd r25,Y+18
 6338 2976 0E94 0000 		call __mulsf3
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6340               	.LM519:
 6341 297a 9B01      		movw r18,r22
 6342 297c AC01      		movw r20,r24
 6343 297e CF86      		std Y+15,r12
 6344 2980 D88A      		std Y+16,r13
 6345 2982 E98A      		std Y+17,r14
 6346 2984 FA8A      		std Y+18,r15
 6347 2986 6F85      		ldd r22,Y+15
 6348 2988 7889      		ldd r23,Y+16
 6349 298a 8989      		ldd r24,Y+17
 6350 298c 9A89      		ldd r25,Y+18
 6351 298e 0E94 0000 		call __addsf3
 493:mpu6050.c     **** 	norm = 1.0f / norm;
 6353               	.LM520:
 6354 2992 6F87      		std Y+15,r22
 6355 2994 788B      		std Y+16,r23
 6356 2996 898B      		std Y+17,r24
 6357 2998 9A8B      		std Y+18,r25
 6358 299a 6F85      		ldd r22,Y+15
 6359 299c 7889      		ldd r23,Y+16
 6360 299e 8989      		ldd r24,Y+17
 6361 29a0 9A89      		ldd r25,Y+18
 6362 29a2 0E94 0000 		call sqrt
 494:mpu6050.c     **** 	q[0] = q1 * norm;
 6364               	.LM521:
 6365 29a6 9B01      		movw r18,r22
 6366 29a8 AC01      		movw r20,r24
 6367 29aa 60E0      		ldi r22,0
 6368 29ac 70E0      		ldi r23,0
 6369 29ae 80E8      		ldi r24,lo8(-128)
 6370 29b0 9FE3      		ldi r25,lo8(63)
 6371 29b2 0E94 0000 		call __divsf3
 6372 29b6 6B01      		movw r12,r22
 6373 29b8 7C01      		movw r14,r24
 495:mpu6050.c     **** 	q[1] = q2 * norm;
 6375               	.LM522:
 6376 29ba 9B01      		movw r18,r22
 6377 29bc AC01      		movw r20,r24
 6378 29be 2696      		adiw r28,69-63
 6379 29c0 8FAD      		ldd r24,Y+63
 6380 29c2 2697      		sbiw r28,69-63
 6381 29c4 8F87      		std Y+15,r24
 6382 29c6 9B8D      		ldd r25,Y+27
 6383 29c8 988B      		std Y+16,r25
 6384 29ca ABA9      		ldd r26,Y+51
 6385 29cc A98B      		std Y+17,r26
 6386 29ce BCA9      		ldd r27,Y+52
 6387 29d0 BA8B      		std Y+18,r27
 6388 29d2 6F85      		ldd r22,Y+15
 6389 29d4 7889      		ldd r23,Y+16
 6390 29d6 8989      		ldd r24,Y+17
 6391 29d8 9A89      		ldd r25,Y+18
 6392 29da 0E94 0000 		call __mulsf3
 6393 29de 6093 0000 		sts q,r22
 6394 29e2 7093 0000 		sts q+1,r23
 6395 29e6 8093 0000 		sts q+2,r24
 6396 29ea 9093 0000 		sts q+3,r25
 496:mpu6050.c     **** 	q[2] = q3 * norm;
 6398               	.LM523:
 6399 29ee 9601      		movw r18,r12
 6400 29f0 A701      		movw r20,r14
 6401 29f2 8DAD      		ldd r24,Y+61
 6402 29f4 8F87      		std Y+15,r24
 6403 29f6 9DA9      		ldd r25,Y+53
 6404 29f8 988B      		std Y+16,r25
 6405 29fa ABA5      		ldd r26,Y+43
 6406 29fc A98B      		std Y+17,r26
 6407 29fe BFA5      		ldd r27,Y+47
 6408 2a00 BA8B      		std Y+18,r27
 6409 2a02 6F85      		ldd r22,Y+15
 6410 2a04 7889      		ldd r23,Y+16
 6411 2a06 8989      		ldd r24,Y+17
 6412 2a08 9A89      		ldd r25,Y+18
 6413 2a0a 0E94 0000 		call __mulsf3
 6414 2a0e 6093 0000 		sts q+4,r22
 6415 2a12 7093 0000 		sts q+4+1,r23
 6416 2a16 8093 0000 		sts q+4+2,r24
 6417 2a1a 9093 0000 		sts q+4+3,r25
 497:mpu6050.c     **** 	q[3] = q4 * norm;
 6419               	.LM524:
 6420 2a1e 9601      		movw r18,r12
 6421 2a20 A701      		movw r20,r14
 6422 2a22 AF86      		std Y+15,r10
 6423 2a24 B88A      		std Y+16,r11
 6424 2a26 098B      		std Y+17,r16
 6425 2a28 1A8B      		std Y+18,r17
 6426 2a2a 6F85      		ldd r22,Y+15
 6427 2a2c 7889      		ldd r23,Y+16
 6428 2a2e 8989      		ldd r24,Y+17
 6429 2a30 9A89      		ldd r25,Y+18
 6430 2a32 0E94 0000 		call __mulsf3
 6431 2a36 6093 0000 		sts q+8,r22
 6432 2a3a 7093 0000 		sts q+8+1,r23
 6433 2a3e 8093 0000 		sts q+8+2,r24
 6434 2a42 9093 0000 		sts q+8+3,r25
 498:mpu6050.c     **** }
 6436               	.LM525:
 6437 2a46 9601      		movw r18,r12
 6438 2a48 A701      		movw r20,r14
 6439 2a4a 6F86      		std Y+15,r6
 6440 2a4c 788A      		std Y+16,r7
 6441 2a4e 898A      		std Y+17,r8
 6442 2a50 9A8A      		std Y+18,r9
 6443 2a52 6F85      		ldd r22,Y+15
 6444 2a54 7889      		ldd r23,Y+16
 6445 2a56 8989      		ldd r24,Y+17
 6446 2a58 9A89      		ldd r25,Y+18
 6447 2a5a 0E94 0000 		call __mulsf3
 6448 2a5e 6093 0000 		sts q+12,r22
 6449 2a62 7093 0000 		sts q+12+1,r23
 6450 2a66 8093 0000 		sts q+12+2,r24
 6451 2a6a 9093 0000 		sts q+12+3,r25
 6452               	.L138:
 6453               	.LBE183:
 6454               	.LBE187:
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6456               	.LM526:
 6457 2a6e 2091 0000 		lds r18,q
 6458 2a72 3091 0000 		lds r19,q+1
 6459 2a76 4091 0000 		lds r20,q+2
 6460 2a7a 5091 0000 		lds r21,q+3
 6461 2a7e 2F8F      		std Y+31,r18
 6462 2a80 38A3      		std Y+32,r19
 6463 2a82 49A3      		std Y+33,r20
 6464 2a84 5AA3      		std Y+34,r21
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6466               	.LM527:
 6467 2a86 CA01      		movw r24,r20
 6468 2a88 B901      		movw r22,r18
 6469 2a8a 0E94 0000 		call __mulsf3
 6470 2a8e 3B01      		movw r6,r22
 6471 2a90 8C01      		movw r16,r24
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6473               	.LM528:
 6474 2a92 8091 0000 		lds r24,q+4
 6475 2a96 9091 0000 		lds r25,q+4+1
 6476 2a9a A091 0000 		lds r26,q+4+2
 6477 2a9e B091 0000 		lds r27,q+4+3
 6478 2aa2 8BA3      		std Y+35,r24
 6479 2aa4 9CA3      		std Y+36,r25
 6480 2aa6 ADA3      		std Y+37,r26
 6481 2aa8 BEA3      		std Y+38,r27
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6483               	.LM529:
 6484 2aaa 9C01      		movw r18,r24
 6485 2aac AD01      		movw r20,r26
 6486 2aae CD01      		movw r24,r26
 6487 2ab0 B901      		movw r22,r18
 6488 2ab2 0E94 0000 		call __mulsf3
 6489 2ab6 1B01      		movw r2,r22
 6490 2ab8 2C01      		movw r4,r24
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6492               	.LM530:
 6493 2aba 2091 0000 		lds r18,q+8
 6494 2abe 3091 0000 		lds r19,q+8+1
 6495 2ac2 4091 0000 		lds r20,q+8+2
 6496 2ac6 5091 0000 		lds r21,q+8+3
 6497 2aca 2FA3      		std Y+39,r18
 6498 2acc 38A7      		std Y+40,r19
 6499 2ace 49A7      		std Y+41,r20
 6500 2ad0 5AA7      		std Y+42,r21
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6502               	.LM531:
 6503 2ad2 CA01      		movw r24,r20
 6504 2ad4 B901      		movw r22,r18
 6505 2ad6 0E94 0000 		call __mulsf3
 6506 2ada 69AF      		std Y+57,r22
 6507 2adc 7AAF      		std Y+58,r23
 6508 2ade 8BAF      		std Y+59,r24
 6509 2ae0 9CAF      		std Y+60,r25
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6511               	.LM532:
 6512 2ae2 8090 0000 		lds r8,q+12
 6513 2ae6 9090 0000 		lds r9,q+12+1
 6514 2aea A090 0000 		lds r10,q+12+2
 6515 2aee B090 0000 		lds r11,q+12+3
 549:mpu6050.c     **** 	pitch = -asin(2.0f * (q[1] * q[3] - q[0] * q[2])) * 180.0f / M_PI;
 6517               	.LM533:
 6518 2af2 A501      		movw r20,r10
 6519 2af4 9401      		movw r18,r8
 6520 2af6 C501      		movw r24,r10
 6521 2af8 B401      		movw r22,r8
 6522 2afa 0E94 0000 		call __mulsf3
 6523 2afe 6F8B      		std Y+23,r22
 6524 2b00 7EAB      		std Y+54,r23
 6525 2b02 8FAB      		std Y+55,r24
 6526 2b04 98AF      		std Y+56,r25
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6528               	.LM534:
 6529 2b06 A501      		movw r20,r10
 6530 2b08 9401      		movw r18,r8
 6531 2b0a 6BA1      		ldd r22,Y+35
 6532 2b0c 7CA1      		ldd r23,Y+36
 6533 2b0e 8DA1      		ldd r24,Y+37
 6534 2b10 9EA1      		ldd r25,Y+38
 6535 2b12 0E94 0000 		call __mulsf3
 6536 2b16 6B01      		movw r12,r22
 6537 2b18 7C01      		movw r14,r24
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6539               	.LM535:
 6540 2b1a 2FA1      		ldd r18,Y+39
 6541 2b1c 38A5      		ldd r19,Y+40
 6542 2b1e 49A5      		ldd r20,Y+41
 6543 2b20 5AA5      		ldd r21,Y+42
 6544 2b22 6F8D      		ldd r22,Y+31
 6545 2b24 78A1      		ldd r23,Y+32
 6546 2b26 89A1      		ldd r24,Y+33
 6547 2b28 9AA1      		ldd r25,Y+34
 6548 2b2a 0E94 0000 		call __mulsf3
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6550               	.LM536:
 6551 2b2e 9B01      		movw r18,r22
 6552 2b30 AC01      		movw r20,r24
 6553 2b32 CF86      		std Y+15,r12
 6554 2b34 D88A      		std Y+16,r13
 6555 2b36 E98A      		std Y+17,r14
 6556 2b38 FA8A      		std Y+18,r15
 6557 2b3a 6F85      		ldd r22,Y+15
 6558 2b3c 7889      		ldd r23,Y+16
 6559 2b3e 8989      		ldd r24,Y+17
 6560 2b40 9A89      		ldd r25,Y+18
 6561 2b42 0E94 0000 		call __subsf3
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6563               	.LM537:
 6564 2b46 9B01      		movw r18,r22
 6565 2b48 AC01      		movw r20,r24
 6566 2b4a 6F87      		std Y+15,r22
 6567 2b4c 788B      		std Y+16,r23
 6568 2b4e 898B      		std Y+17,r24
 6569 2b50 9A8B      		std Y+18,r25
 6570 2b52 6F85      		ldd r22,Y+15
 6571 2b54 7889      		ldd r23,Y+16
 6572 2b56 8989      		ldd r24,Y+17
 6573 2b58 9A89      		ldd r25,Y+18
 6574 2b5a 0E94 0000 		call __addsf3
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6576               	.LM538:
 6577 2b5e 6F87      		std Y+15,r22
 6578 2b60 788B      		std Y+16,r23
 6579 2b62 898B      		std Y+17,r24
 6580 2b64 9A8B      		std Y+18,r25
 6581 2b66 6F85      		ldd r22,Y+15
 6582 2b68 7889      		ldd r23,Y+16
 6583 2b6a 8989      		ldd r24,Y+17
 6584 2b6c 9A89      		ldd r25,Y+18
 6585 2b6e 0E94 0000 		call asin
 6586 2b72 6B01      		movw r12,r22
 6587 2b74 7C01      		movw r14,r24
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6589               	.LM539:
 6590 2b76 9101      		movw r18,r2
 6591 2b78 A201      		movw r20,r4
 6592 2b7a 6F86      		std Y+15,r6
 6593 2b7c 788A      		std Y+16,r7
 6594 2b7e 098B      		std Y+17,r16
 6595 2b80 1A8B      		std Y+18,r17
 6596 2b82 6F85      		ldd r22,Y+15
 6597 2b84 7889      		ldd r23,Y+16
 6598 2b86 8989      		ldd r24,Y+17
 6599 2b88 9A89      		ldd r25,Y+18
 6600 2b8a 0E94 0000 		call __subsf3
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6602               	.LM540:
 6603 2b8e 29AD      		ldd r18,Y+57
 6604 2b90 3AAD      		ldd r19,Y+58
 6605 2b92 4BAD      		ldd r20,Y+59
 6606 2b94 5CAD      		ldd r21,Y+60
 6607 2b96 6F87      		std Y+15,r22
 6608 2b98 788B      		std Y+16,r23
 6609 2b9a 898B      		std Y+17,r24
 6610 2b9c 9A8B      		std Y+18,r25
 6611 2b9e 6F85      		ldd r22,Y+15
 6612 2ba0 7889      		ldd r23,Y+16
 6613 2ba2 8989      		ldd r24,Y+17
 6614 2ba4 9A89      		ldd r25,Y+18
 6615 2ba6 0E94 0000 		call __subsf3
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6617               	.LM541:
 6618 2baa 2F89      		ldd r18,Y+23
 6619 2bac 3EA9      		ldd r19,Y+54
 6620 2bae 4FA9      		ldd r20,Y+55
 6621 2bb0 58AD      		ldd r21,Y+56
 6622 2bb2 6F87      		std Y+15,r22
 6623 2bb4 788B      		std Y+16,r23
 6624 2bb6 898B      		std Y+17,r24
 6625 2bb8 9A8B      		std Y+18,r25
 6626 2bba 6F85      		ldd r22,Y+15
 6627 2bbc 7889      		ldd r23,Y+16
 6628 2bbe 8989      		ldd r24,Y+17
 6629 2bc0 9A89      		ldd r25,Y+18
 6630 2bc2 0E94 0000 		call __addsf3
 6631 2bc6 3B01      		movw r6,r22
 6632 2bc8 8C01      		movw r16,r24
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6634               	.LM542:
 6635 2bca 2BA1      		ldd r18,Y+35
 6636 2bcc 3CA1      		ldd r19,Y+36
 6637 2bce 4DA1      		ldd r20,Y+37
 6638 2bd0 5EA1      		ldd r21,Y+38
 6639 2bd2 6F8D      		ldd r22,Y+31
 6640 2bd4 78A1      		ldd r23,Y+32
 6641 2bd6 89A1      		ldd r24,Y+33
 6642 2bd8 9AA1      		ldd r25,Y+34
 6643 2bda 0E94 0000 		call __mulsf3
 6644 2bde 1B01      		movw r2,r22
 6645 2be0 2C01      		movw r4,r24
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6647               	.LM543:
 6648 2be2 A501      		movw r20,r10
 6649 2be4 9401      		movw r18,r8
 6650 2be6 6FA1      		ldd r22,Y+39
 6651 2be8 78A5      		ldd r23,Y+40
 6652 2bea 89A5      		ldd r24,Y+41
 6653 2bec 9AA5      		ldd r25,Y+42
 6654 2bee 0E94 0000 		call __mulsf3
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6656               	.LM544:
 6657 2bf2 9B01      		movw r18,r22
 6658 2bf4 AC01      		movw r20,r24
 6659 2bf6 2F86      		std Y+15,r2
 6660 2bf8 388A      		std Y+16,r3
 6661 2bfa 498A      		std Y+17,r4
 6662 2bfc 5A8A      		std Y+18,r5
 6663 2bfe 6F85      		ldd r22,Y+15
 6664 2c00 7889      		ldd r23,Y+16
 6665 2c02 8989      		ldd r24,Y+17
 6666 2c04 9A89      		ldd r25,Y+18
 6667 2c06 0E94 0000 		call __addsf3
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6669               	.LM545:
 6670 2c0a 9B01      		movw r18,r22
 6671 2c0c AC01      		movw r20,r24
 6672 2c0e 6F87      		std Y+15,r22
 6673 2c10 788B      		std Y+16,r23
 6674 2c12 898B      		std Y+17,r24
 6675 2c14 9A8B      		std Y+18,r25
 6676 2c16 6F85      		ldd r22,Y+15
 6677 2c18 7889      		ldd r23,Y+16
 6678 2c1a 8989      		ldd r24,Y+17
 6679 2c1c 9A89      		ldd r25,Y+18
 6680 2c1e 0E94 0000 		call __addsf3
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6682               	.LM546:
 6683 2c22 9301      		movw r18,r6
 6684 2c24 A801      		movw r20,r16
 6685 2c26 6F87      		std Y+15,r22
 6686 2c28 788B      		std Y+16,r23
 6687 2c2a 898B      		std Y+17,r24
 6688 2c2c 9A8B      		std Y+18,r25
 6689 2c2e 6F85      		ldd r22,Y+15
 6690 2c30 7889      		ldd r23,Y+16
 6691 2c32 8989      		ldd r24,Y+17
 6692 2c34 9A89      		ldd r25,Y+18
 6693 2c36 0E94 0000 		call atan2
 6694 2c3a 5B01      		movw r10,r22
 6695 2c3c 8C01      		movw r16,r24
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6697               	.LM547:
 6698 2c3e D701      		movw r26,r14
 6699 2c40 C601      		movw r24,r12
 6700 2c42 B058      		subi r27,0x80
 6701 2c44 8F87      		std Y+15,r24
 6702 2c46 988B      		std Y+16,r25
 6703 2c48 A98B      		std Y+17,r26
 6704 2c4a BA8B      		std Y+18,r27
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6706               	.LM548:
 6707 2c4c 20E0      		ldi r18,0
 6708 2c4e 30E0      		ldi r19,0
 6709 2c50 44E3      		ldi r20,lo8(52)
 6710 2c52 53E4      		ldi r21,lo8(67)
 6711 2c54 BC01      		movw r22,r24
 6712 2c56 CD01      		movw r24,r26
 6713 2c58 0E94 0000 		call __mulsf3
 550:mpu6050.c     **** 	roll = atan2(2.0f * (q[0] * q[1] + q[2] * q[3]), q[0] * q[0] - q[1] * q[1] - q[2] * q[2] + q[3] * 
 6715               	.LM549:
 6716 2c5c 2BED      		ldi r18,lo8(-37)
 6717 2c5e 3FE0      		ldi r19,lo8(15)
 6718 2c60 49E4      		ldi r20,lo8(73)
 6719 2c62 50E4      		ldi r21,lo8(64)
 6720 2c64 6F87      		std Y+15,r22
 6721 2c66 788B      		std Y+16,r23
 6722 2c68 898B      		std Y+17,r24
 6723 2c6a 9A8B      		std Y+18,r25
 6724 2c6c 6F85      		ldd r22,Y+15
 6725 2c6e 7889      		ldd r23,Y+16
 6726 2c70 8989      		ldd r24,Y+17
 6727 2c72 9A89      		ldd r25,Y+18
 6728 2c74 0E94 0000 		call __divsf3
 552:mpu6050.c     **** 	roll_deg = (int16_t)roll;
 6730               	.LM550:
 6731 2c78 6F87      		std Y+15,r22
 6732 2c7a 788B      		std Y+16,r23
 6733 2c7c 898B      		std Y+17,r24
 6734 2c7e 9A8B      		std Y+18,r25
 6735 2c80 6F85      		ldd r22,Y+15
 6736 2c82 7889      		ldd r23,Y+16
 6737 2c84 8989      		ldd r24,Y+17
 6738 2c86 9A89      		ldd r25,Y+18
 6739 2c88 0E94 0000 		call __fixsfsi
 6740 2c8c 7093 0000 		sts pitch_deg+1,r23
 6741 2c90 6093 0000 		sts pitch_deg,r22
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6743               	.LM551:
 6744 2c94 20E0      		ldi r18,0
 6745 2c96 30E0      		ldi r19,0
 6746 2c98 44E3      		ldi r20,lo8(52)
 6747 2c9a 53E4      		ldi r21,lo8(67)
 6748 2c9c AF86      		std Y+15,r10
 6749 2c9e B88A      		std Y+16,r11
 6750 2ca0 098B      		std Y+17,r16
 6751 2ca2 1A8B      		std Y+18,r17
 6752 2ca4 6F85      		ldd r22,Y+15
 6753 2ca6 7889      		ldd r23,Y+16
 6754 2ca8 8989      		ldd r24,Y+17
 6755 2caa 9A89      		ldd r25,Y+18
 6756 2cac 0E94 0000 		call __mulsf3
 551:mpu6050.c     **** 	pitch_deg = (int16_t)pitch;
 6758               	.LM552:
 6759 2cb0 2BED      		ldi r18,lo8(-37)
 6760 2cb2 3FE0      		ldi r19,lo8(15)
 6761 2cb4 49E4      		ldi r20,lo8(73)
 6762 2cb6 50E4      		ldi r21,lo8(64)
 6763 2cb8 6F87      		std Y+15,r22
 6764 2cba 788B      		std Y+16,r23
 6765 2cbc 898B      		std Y+17,r24
 6766 2cbe 9A8B      		std Y+18,r25
 6767 2cc0 6F85      		ldd r22,Y+15
 6768 2cc2 7889      		ldd r23,Y+16
 6769 2cc4 8989      		ldd r24,Y+17
 6770 2cc6 9A89      		ldd r25,Y+18
 6771 2cc8 0E94 0000 		call __divsf3
 553:mpu6050.c     **** }
 6773               	.LM553:
 6774 2ccc 6F87      		std Y+15,r22
 6775 2cce 788B      		std Y+16,r23
 6776 2cd0 898B      		std Y+17,r24
 6777 2cd2 9A8B      		std Y+18,r25
 6778 2cd4 6F85      		ldd r22,Y+15
 6779 2cd6 7889      		ldd r23,Y+16
 6780 2cd8 8989      		ldd r24,Y+17
 6781 2cda 9A89      		ldd r25,Y+18
 6782 2cdc 0E94 0000 		call __fixsfsi
 6783 2ce0 7093 0000 		sts roll_deg+1,r23
 6784 2ce4 6093 0000 		sts roll_deg,r22
 6785               	/* epilogue start */
 554:mpu6050.c     **** 
 6787               	.LM554:
 6788 2ce8 C459      		subi r28,-108
 6789 2cea DF4F      		sbci r29,-1
 6790 2cec 0FB6      		in __tmp_reg__,__SREG__
 6791 2cee F894      		cli
 6792 2cf0 DEBF      		out __SP_H__,r29
 6793 2cf2 0FBE      		out __SREG__,__tmp_reg__
 6794 2cf4 CDBF      		out __SP_L__,r28
 6795 2cf6 DF91      		pop r29
 6796 2cf8 CF91      		pop r28
 6797 2cfa 1F91      		pop r17
 6798 2cfc 0F91      		pop r16
 6799 2cfe FF90      		pop r15
 6800 2d00 EF90      		pop r14
 6801 2d02 DF90      		pop r13
 6802 2d04 CF90      		pop r12
 6803 2d06 BF90      		pop r11
 6804 2d08 AF90      		pop r10
 6805 2d0a 9F90      		pop r9
 6806 2d0c 8F90      		pop r8
 6807 2d0e 7F90      		pop r7
 6808 2d10 6F90      		pop r6
 6809 2d12 5F90      		pop r5
 6810 2d14 4F90      		pop r4
 6811 2d16 3F90      		pop r3
 6812 2d18 2F90      		pop r2
 6813 2d1a 0895      		ret
 6818               	.Lscope12:
 6821               	.global	__vector_16
 6823               	__vector_16:
 573:mpu6050.c     **** 
 574:mpu6050.c     **** ISR(TIMER0_OVF_vect)
 575:mpu6050.c     **** {
 6825               	.LM555:
 6826               	.LFBB13:
 6827 2d1c 1F92 1FB6 		__gcc_isr 1
 6827      1F92 1124 
 6827      8F93 
 6828 2d26 9F93      		push r25
 6829 2d28 AF93      		push r26
 6830 2d2a BF93      		push r27
 6831               	/* prologue: Signal */
 6832               	/* frame size = 0 */
 6833               	/* stack size = 3...7 */
 6834               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 576:mpu6050.c     **** 	++timer0_overflow_count;
 6836               	.LM556:
 6837 2d2c 8091 0000 		lds r24,timer0_overflow_count
 6838 2d30 9091 0000 		lds r25,timer0_overflow_count+1
 6839 2d34 A091 0000 		lds r26,timer0_overflow_count+2
 6840 2d38 B091 0000 		lds r27,timer0_overflow_count+3
 6841 2d3c 0196      		adiw r24,1
 6842 2d3e A11D      		adc r26,__zero_reg__
 6843 2d40 B11D      		adc r27,__zero_reg__
 6844 2d42 8093 0000 		sts timer0_overflow_count,r24
 6845 2d46 9093 0000 		sts timer0_overflow_count+1,r25
 6846 2d4a A093 0000 		sts timer0_overflow_count+2,r26
 6847 2d4e B093 0000 		sts timer0_overflow_count+3,r27
 6848               	/* epilogue start */
 577:mpu6050.c     **** }
 6850               	.LM557:
 6851 2d52 BF91      		pop r27
 6852 2d54 AF91      		pop r26
 6853 2d56 9F91      		pop r25
 6854 2d58 8F91 1F90 		__gcc_isr 2
 6854      1FBE 1F90 
 6855 2d60 1895      		reti
 6856               		__gcc_isr 0,r24
 6858               	.Lscope13:
 6860               		.section	.rodata.str1.1,"aMS",@progbits,1
 6861               	.LC1:
 6862 0000 5420 3D20 		.string	"T = %6.2f | X = %6d | Y = %6d\r\n"
 6862      2536 2E32 
 6862      6620 7C20 
 6862      5820 3D20 
 6862      2536 6420 
 6863               		.section	.text.startup,"ax",@progbits
 6865               	.global	main
 6867               	main:
 6869               	.Ltext25:
   1:main.c        **** #include "i2c.c"
   2:main.c        **** #include "mpu6050.c"
   3:main.c        **** #include <stdint.h>
   4:main.c        **** #include <avr/io.h>
   5:main.c        **** #include <avr/interrupt.h>
   6:main.c        **** #include <avr/pgmspace.h>
   7:main.c        **** #include <stdio.h>
   8:main.c        **** 
   9:main.c        **** int main(void)
  10:main.c        **** {
 6871               	.LM558:
 6872               	.LFBB14:
 6873 0000 CDB7      		in r28,__SP_L__
 6874 0002 DEB7      		in r29,__SP_H__
 6875 0004 C054      		subi r28,64
 6876 0006 D109      		sbc r29,__zero_reg__
 6877 0008 0FB6      		in __tmp_reg__,__SREG__
 6878 000a F894      		cli
 6879 000c DEBF      		out __SP_H__,r29
 6880 000e 0FBE      		out __SREG__,__tmp_reg__
 6881 0010 CDBF      		out __SP_L__,r28
 6882               	/* prologue: function */
 6883               	/* frame size = 64 */
 6884               	/* stack size = 64 */
 6885               	.L__stack_usage = 64
 6886               	.LBB190:
 6887               	.LBB191:
 6889               	.Ltext26:
  52:i2c.c         **** 	rx_buf_len = 0;
 6891               	.LM559:
 6892 0012 1092 0000 		sts rx_buf_idx,__zero_reg__
  53:i2c.c         **** 	tx_buf_idx = 0;
 6894               	.LM560:
 6895 0016 1092 0000 		sts rx_buf_len,__zero_reg__
  54:i2c.c         **** 	tx_buf_len = 0;
 6897               	.LM561:
 6898 001a 1092 0000 		sts tx_buf_idx,__zero_reg__
  55:i2c.c         **** 
 6900               	.LM562:
 6901 001e 1092 0000 		sts tx_buf_len,__zero_reg__
  58:i2c.c         **** 
 6903               	.LM563:
 6904 0022 1092 0000 		sts state,__zero_reg__
  61:i2c.c         **** 	PORTC |= (1 << 5);
 6906               	.LM564:
 6907 0026 449A      		sbi 0x8,4
  62:i2c.c         **** 
 6909               	.LM565:
 6910 0028 459A      		sbi 0x8,5
  65:i2c.c         **** 	TWSR &= ~TWPS1;
 6912               	.LM566:
 6913 002a 8091 B900 		lds r24,185
 6914 002e 8093 B900 		sts 185,r24
  66:i2c.c         **** 	TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;
 6916               	.LM567:
 6917 0032 8091 B900 		lds r24,185
 6918 0036 8E7F      		andi r24,lo8(-2)
 6919 0038 8093 B900 		sts 185,r24
  67:i2c.c         **** 
 6921               	.LM568:
 6922 003c 88E4      		ldi r24,lo8(72)
 6923 003e 8093 B800 		sts 184,r24
  70:i2c.c         **** }
 6925               	.LM569:
 6926 0042 85E4      		ldi r24,lo8(69)
 6927 0044 8093 BC00 		sts 188,r24
 6928               	.LBE191:
 6929               	.LBE190:
 6931               	.Ltext27:
  11:main.c        **** 	int16_t last_pitch_deg = 0, last_roll_deg = 0;
  12:main.c        **** 	char s[64];
  13:main.c        **** 	i2c_init();
  14:main.c        **** 	sei();
 6933               	.LM570:
 6934               	/* #APP */
 6935               	 ;  14 "main.c" 1
 6936 0048 7894      		sei
 6937               	 ;  0 "" 2
  15:main.c        **** 	if(mpu6050_init())
 6939               	.LM571:
 6940               	/* #NOAPP */
 6941 004a 0E94 0000 		call mpu6050_init
 6943               	.LM572:
 6944 004e 8111      		cpse r24,__zero_reg__
 6945               	.L148:
 6946 0050 00C0      		rjmp .L148
 6947               	.L151:
  11:main.c        **** 	int16_t last_pitch_deg = 0, last_roll_deg = 0;
 6949               	.LM573:
 6950 0052 F12C      		mov r15,__zero_reg__
 6951 0054 E12C      		mov r14,__zero_reg__
  11:main.c        **** 	int16_t last_pitch_deg = 0, last_roll_deg = 0;
 6953               	.LM574:
 6954 0056 D12C      		mov r13,__zero_reg__
 6955 0058 C12C      		mov r12,__zero_reg__
  16:main.c        **** 	{
  17:main.c        **** 		for(;;) ;
  18:main.c        **** 	}
  19:main.c        **** 
  20:main.c        **** 	for(;;)
  21:main.c        **** 	{
  22:main.c        **** 		mpu6050_update();
  23:main.c        **** 		if(last_pitch_deg != pitch_deg || last_roll_deg != roll_deg)
  24:main.c        **** 		{
  25:main.c        **** 			last_pitch_deg = pitch_deg;
  26:main.c        **** 			last_roll_deg = roll_deg;
  27:main.c        **** 			sprintf(s, "T = %6.2f | X = %6d | Y = %6d\r\n", temperature, pitch_deg, roll_deg);
 6957               	.LM575:
 6958 005a 80E0      		ldi r24,lo8(.LC1)
 6959 005c A82E      		mov r10,r24
 6960 005e 80E0      		ldi r24,hi8(.LC1)
 6961 0060 B82E      		mov r11,r24
 6962 0062 CE01      		movw r24,r28
 6963 0064 0196      		adiw r24,1
 6964 0066 4C01      		movw r8,r24
 6965               	.L147:
  22:main.c        **** 		if(last_pitch_deg != pitch_deg || last_roll_deg != roll_deg)
 6967               	.LM576:
 6968 0068 0E94 0000 		call mpu6050_update
  23:main.c        **** 		{
 6970               	.LM577:
 6971 006c 0091 0000 		lds r16,pitch_deg
 6972 0070 1091 0000 		lds r17,pitch_deg+1
 6973 0074 8091 0000 		lds r24,roll_deg
 6974 0078 9091 0000 		lds r25,roll_deg+1
  23:main.c        **** 		{
 6976               	.LM578:
 6977 007c 0C15      		cp r16,r12
 6978 007e 1D05      		cpc r17,r13
 6979 0080 01F4      		brne .L149
  23:main.c        **** 		{
 6981               	.LM579:
 6982 0082 8E15      		cp r24,r14
 6983 0084 9F05      		cpc r25,r15
 6984 0086 01F0      		breq .L147
 6985               	.L149:
  26:main.c        **** 			sprintf(s, "T = %6.2f | X = %6d | Y = %6d\r\n", temperature, pitch_deg, roll_deg);
 6987               	.LM580:
 6988 0088 7C01      		movw r14,r24
 6990               	.LM581:
 6991 008a FF92      		push r15
 6992 008c 8F93      		push r24
 6993 008e 1F93      		push r17
 6994 0090 0F93      		push r16
 6995 0092 8091 0000 		lds r24,temperature+3
 6996 0096 8F93      		push r24
 6997 0098 8091 0000 		lds r24,temperature+2
 6998 009c 8F93      		push r24
 6999 009e 8091 0000 		lds r24,temperature+1
 7000 00a2 8F93      		push r24
 7001 00a4 8091 0000 		lds r24,temperature
 7002 00a8 8F93      		push r24
 7003 00aa BF92      		push r11
 7004 00ac AF92      		push r10
 7005 00ae 9F92      		push r9
 7006 00b0 8F92      		push r8
 7007 00b2 0E94 0000 		call sprintf
 7008 00b6 0FB6      		in __tmp_reg__,__SREG__
 7009 00b8 F894      		cli
 7010 00ba DEBF      		out __SP_H__,r29
 7011 00bc 0FBE      		out __SREG__,__tmp_reg__
 7012 00be CDBF      		out __SP_L__,r28
  23:main.c        **** 		{
 7014               	.LM582:
 7015 00c0 6801      		movw r12,r16
 7016 00c2 00C0      		rjmp .L147
 7024               	.Lscope14:
 7026               		.local	timer0_overflow_count
 7027               		.comm	timer0_overflow_count,4,1
 7029               		.local	last_update
 7030               		.comm	last_update,4,1
 7032               		.local	time_delta
 7033               		.comm	time_delta,4,1
 7035               		.local	roll_deg
 7036               		.comm	roll_deg,2,1
 7038               		.local	pitch_deg
 7039               		.comm	pitch_deg,2,1
 7041               		.local	temperature
 7042               		.comm	temperature,4,1
 7044               		.data
 7047               	q:
 7048 0000 00        		.byte	0
 7049 0001 00        		.byte	0
 7050 0002 80        		.byte	-128
 7051 0003 3F        		.byte	63
 7052 0004 00        		.byte	0
 7053 0005 00        		.byte	0
 7054 0006 00        		.byte	0
 7055 0007 00        		.byte	0
 7056 0008 00        		.byte	0
 7057 0009 00        		.byte	0
 7058 000a 00        		.byte	0
 7059 000b 00        		.byte	0
 7060 000c 00        		.byte	0
 7061 000d 00        		.byte	0
 7062 000e 00        		.byte	0
 7063 000f 00        		.byte	0
 7065               		.local	gyro_bias
 7066               		.comm	gyro_bias,12,1
 7068               		.local	accel_bias
 7069               		.comm	accel_bias,12,1
 7071               		.local	gz
 7072               		.comm	gz,4,1
 7074               		.local	gy
 7075               		.comm	gy,4,1
 7077               		.local	gx
 7078               		.comm	gx,4,1
 7080               		.local	az
 7081               		.comm	az,4,1
 7083               		.local	ay
 7084               		.comm	ay,4,1
 7086               		.local	ax
 7087               		.comm	ax,4,1
 7089               		.local	zeta
 7090               		.comm	zeta,4,1
 7092               		.local	beta
 7093               		.comm	beta,4,1
 7095               		.local	tx_buf_len
 7096               		.comm	tx_buf_len,1,1
 7098               		.local	tx_buf_idx
 7099               		.comm	tx_buf_idx,1,1
 7101               		.local	tx_buf
 7102               		.comm	tx_buf,32,1
 7104               		.local	tx_addr
 7105               		.comm	tx_addr,1,1
 7107               		.local	rx_buf_len
 7108               		.comm	rx_buf_len,1,1
 7110               		.local	rx_buf_idx
 7111               		.comm	rx_buf_idx,1,1
 7113               		.local	rx_buf
 7114               		.comm	rx_buf,32,1
 7116               		.local	master_buf_len
 7117               		.comm	master_buf_len,1,1
 7119               		.local	master_buf_idx
 7120               		.comm	master_buf_idx,1,1
 7122               		.local	master_buf
 7123               		.comm	master_buf,32,1
 7125               		.local	slave_rw
 7126               		.comm	slave_rw,1,1
 7128               		.local	error
 7129               		.comm	error,1,1
 7131               		.local	state
 7132               		.comm	state,1,1
 7134               		.text
 7136               	.Letext0:
 7137               		.ident	"GCC: (GNU) 10.2.0"
 7138               	.global __do_copy_data
 7139               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnk8NWY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccnk8NWY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccnk8NWY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccnk8NWY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccnk8NWY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccnk8NWY.s:16     .text:0000000000000000 i2c_read
     /tmp/ccnk8NWY.s:7108   .bss:0000000000000070 rx_buf_idx
     /tmp/ccnk8NWY.s:7105   .bss:000000000000006f rx_buf_len
     /tmp/ccnk8NWY.s:7111   .bss:0000000000000071 rx_buf
     /tmp/ccnk8NWY.s:60     .text:0000000000000022 i2c_stop
     /tmp/ccnk8NWY.s:7129   .bss:00000000000000b5 state
     /tmp/ccnk8NWY.s:93     .text:0000000000000036 i2c_write
     /tmp/ccnk8NWY.s:7093   .bss:000000000000004c tx_buf_len
     /tmp/ccnk8NWY.s:7096   .bss:000000000000004d tx_buf_idx
     /tmp/ccnk8NWY.s:7099   .bss:000000000000004e tx_buf
     /tmp/ccnk8NWY.s:136    .text:0000000000000058 i2c_request_from.constprop.0.isra.0
     /tmp/ccnk8NWY.s:7126   .bss:00000000000000b4 error
     /tmp/ccnk8NWY.s:7117   .bss:0000000000000092 master_buf_idx
     /tmp/ccnk8NWY.s:7114   .bss:0000000000000091 master_buf_len
     /tmp/ccnk8NWY.s:7123   .bss:00000000000000b3 slave_rw
     /tmp/ccnk8NWY.s:7120   .bss:0000000000000093 master_buf
     /tmp/ccnk8NWY.s:245    .text:00000000000000b8 i2c_end_transmission.isra.0
     /tmp/ccnk8NWY.s:7102   .bss:000000000000006e tx_addr
     /tmp/ccnk8NWY.s:371    .text:000000000000012e i2c_read_byte.constprop.0
     /tmp/ccnk8NWY.s:420    .text:000000000000014e i2c_read_bytes.constprop.0
     /tmp/ccnk8NWY.s:510    .text:00000000000001a8 i2c_write_byte.constprop.0
     /tmp/ccnk8NWY.s:558    .text:00000000000001ca __vector_24
     /tmp/ccnk8NWY.s:811    .text:00000000000002e8 mpu6050_init
     /tmp/ccnk8NWY.s:7090   .bss:0000000000000048 beta
     /tmp/ccnk8NWY.s:7087   .bss:0000000000000044 zeta
     /tmp/ccnk8NWY.s:7042   .bss:0000000000000014 gyro_bias
     /tmp/ccnk8NWY.s:7066   .bss:0000000000000020 accel_bias
     /tmp/ccnk8NWY.s:3181   .text:0000000000001232 us
                             .bss:0000000000000000 timer0_overflow_count
     /tmp/ccnk8NWY.s:3282   .text:0000000000001298 mpu6050_update
     /tmp/ccnk8NWY.s:7084   .bss:0000000000000040 ax
     /tmp/ccnk8NWY.s:7081   .bss:000000000000003c ay
     /tmp/ccnk8NWY.s:7078   .bss:0000000000000038 az
     /tmp/ccnk8NWY.s:7039   .bss:0000000000000010 temperature
     /tmp/ccnk8NWY.s:7075   .bss:0000000000000034 gx
     /tmp/ccnk8NWY.s:7072   .bss:0000000000000030 gy
     /tmp/ccnk8NWY.s:7069   .bss:000000000000002c gz
     /tmp/ccnk8NWY.s:7027   .bss:0000000000000004 last_update
     /tmp/ccnk8NWY.s:7030   .bss:0000000000000008 time_delta
     /tmp/ccnk8NWY.s:7047   .data:0000000000000000 q
     /tmp/ccnk8NWY.s:7036   .bss:000000000000000e pitch_deg
     /tmp/ccnk8NWY.s:7033   .bss:000000000000000c roll_deg
     /tmp/ccnk8NWY.s:6823   .text:0000000000002d1c __vector_16
                            *ABS*:0000000000000003 __gcc_isr.n_pushed.001
     /tmp/ccnk8NWY.s:6867   .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__mulsf3
__floatunsisf
__subsf3
__divsf3
__addsf3
__ltsf2
__floatsisf
sqrt
pow
__udivmodhi4
__divmodsi4
__eqsf2
__fixsfsi
asin
atan2
sprintf
__do_copy_data
__do_clear_bss
